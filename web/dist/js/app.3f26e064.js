(function(n){function e(e){for(var a,o,s=e[0],l=e[1],p=e[2],d=0,c=[];d<s.length;d++)o=s[d],Object.prototype.hasOwnProperty.call(r,o)&&r[o]&&c.push(r[o][0]),r[o]=0;for(a in l)Object.prototype.hasOwnProperty.call(l,a)&&(n[a]=l[a]);m&&m(e);while(c.length)c.shift()();return i.push.apply(i,p||[]),t()}function t(){for(var n,e=0;e<i.length;e++){for(var t=i[e],a=!0,o=1;o<t.length;o++){var s=t[o];0!==r[s]&&(a=!1)}a&&(i.splice(e--,1),n=l(l.s=t[0]))}return n}var a={},o={app:0},r={app:0},i=[];function s(n){return l.p+"js/"+({}[n]||n)+"."+{"chunk-0ba47dcd":"4ed58a2a","chunk-502ec42e":"73cb5153"}[n]+".js"}function l(e){if(a[e])return a[e].exports;var t=a[e]={i:e,l:!1,exports:{}};return n[e].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.e=function(n){var e=[],t={"chunk-502ec42e":1};o[n]?e.push(o[n]):0!==o[n]&&t[n]&&e.push(o[n]=new Promise((function(e,t){for(var a="css/"+({}[n]||n)+"."+{"chunk-0ba47dcd":"31d6cfe0","chunk-502ec42e":"74b8b1f1"}[n]+".css",r=l.p+a,i=document.getElementsByTagName("link"),s=0;s<i.length;s++){var p=i[s],d=p.getAttribute("data-href")||p.getAttribute("href");if("stylesheet"===p.rel&&(d===a||d===r))return e()}var c=document.getElementsByTagName("style");for(s=0;s<c.length;s++){p=c[s],d=p.getAttribute("data-href");if(d===a||d===r)return e()}var m=document.createElement("link");m.rel="stylesheet",m.type="text/css",m.onload=e,m.onerror=function(e){var a=e&&e.target&&e.target.src||r,i=new Error("Loading CSS chunk "+n+" failed.\n("+a+")");i.code="CSS_CHUNK_LOAD_FAILED",i.request=a,delete o[n],m.parentNode.removeChild(m),t(i)},m.href=r;var u=document.getElementsByTagName("head")[0];u.appendChild(m)})).then((function(){o[n]=0})));var a=r[n];if(0!==a)if(a)e.push(a[2]);else{var i=new Promise((function(e,t){a=r[n]=[e,t]}));e.push(a[2]=i);var p,d=document.createElement("script");d.charset="utf-8",d.timeout=120,l.nc&&d.setAttribute("nonce",l.nc),d.src=s(n);var c=new Error;p=function(e){d.onerror=d.onload=null,clearTimeout(m);var t=r[n];if(0!==t){if(t){var a=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;c.message="Loading chunk "+n+" failed.\n("+a+": "+o+")",c.name="ChunkLoadError",c.type=a,c.request=o,t[1](c)}r[n]=void 0}};var m=setTimeout((function(){p({type:"timeout",target:d})}),12e4);d.onerror=d.onload=p,document.head.appendChild(d)}return Promise.all(e)},l.m=n,l.c=a,l.d=function(n,e,t){l.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},l.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},l.t=function(n,e){if(1&e&&(n=l(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)l.d(t,a,function(e){return n[e]}.bind(null,a));return t},l.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return l.d(e,"a",e),e},l.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},l.p="/",l.oe=function(n){throw console.error(n),n};var p=window["webpackJsonp"]=window["webpackJsonp"]||[],d=p.push.bind(p);p.push=e,p=p.slice();for(var c=0;c<p.length;c++)e(p[c]);var m=d;i.push([0,"chunk-vendors"]),t()})({0:function(n,e,t){n.exports=t("cd49")},"005f":function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Hash;\n```\n\n## Md5\n```java\nHash.Md5(String data);\n```\n\n## Sha256\n```java\nHash.Sha256(String data);\n```\n\n## HmacSha1\n```java\nHash.HmacSha1(String data, byte[] key);\n```\n\n## HmacSha256\n```java\nHash.HmacSha256(String data, byte[] key);\n```\n\n## Byte转为String\n```java\nHash.Base64Encode(byte[] data);\n```\n\n## Byte转为16进制\n```java\nHash.HexEncode(byte[] bytes);\n```\n"},"006c":function(n,e){n.exports="### 查询\n```python\n  # 首页\n  def index(self):\n    # 查询\n    model = Demo()\n    model.Columns('uid','title')\n    model.Where('title LIKE %s','%查询%')\n    data = model.Find()\n    # 返回\n    return self.getJSON({'code':0,'msg':'Web', 'data':data})\n```\n\n### 多条\n```python\nmodel.Find()\n```\n\n### 单条\n```python\nmodel.FindFirst()\n```\n\n### 返回类型\n```python\nmodel.ResType()\n```\n\n### 生成SQL\n```python\nsql, args = model.SelectSQL()\n```"},"00a0":function(n,e){n.exports="## 引入\n```python\nfrom util.util import Util\n```\n\n## 执行Linux命令\n```python\nUtil.Exec(cmd: str)\n```\n\n## 格式化时间\n```python\nUtil.Date(format: str = '%Y-%m-%d %H:%M:%S', timestamp: float = None)\nUtil.DateFormat(\n  format: str = '%Y-%m-%d %H:%M:%S',  #格式\n  duration: str = '-1d',              #年(y)、月(m)、周(w)、日(d)、时(h)、分(i)、秒(s)\n)\n```\n\n## 时间戳\n```python\nUtil.Time()\n```\n\n## 日期转时间戳\n```python\nUtil.Strtotime(day: str=None, format: str='%Y-%m-%d %H:%M:%S')\n```\n\n## 去首尾空格\n```python\nUtil.Trim(content, charlist: str = None)\n```\n\n## 拆分字符串为数组\n```python\nUtil.Explode(delimiter: str, string: str)\n```\n\n## 数组合成字符串\n```python\nUtil.Implode(glue: str, pieces: list)\n```\n\n## JSON转字符串\n```python\nUtil.JsonEncode(arr)\n```\n\n## JSON字符串转数组\n```python\nUtil.JsonDecode(str: str)\n```\n\n## 合并数组\n```python\nUtil.ArrayMerge(*arrays: dict)\n```\n\n## URL参数\n```python\nUtil.UrlToArray(url: str)\n```\n"},"00de":function(n,e){n.exports="## 引入\n```python\nfrom service.logs import Logs\n```\n\n## 访问日志\n```python\nLogs.Log(data)\n```\n\n## 信息日志\n```python\nLogs.Info(data)\n```\n\n## 操作日志\n```python\nLogs.Action(data)\n```\n\n## 错误日志\n```python\nLogs.Error(data)\n```\n\n## 其它\n```python\nLogs.Writer(text: str)\n```\n"},"020f":function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Util;\n```\n\n## 执行Linux命令\n```java\nUtil.Exec(String cmd);\n```\n\n## 字符串长度\n```java\nUtil.Len(String val);\n```\n\n## 格式化时间\n```java\nUtil.Date(\n  String format,    //yyyy-MM-dd HH:mm:ss\n  String timestamp, //0\n);\nUtil.DateFormat(\n  String format,    //格式: yyyy-MM-dd HH:mm:ss\n  String duration,  //-1d: 年(y)、月(m)、周(w)、日(d)、时(h)、分(i)、秒(s)\n);\n```\n\n## 时间戳\n```java\nUtil.Time();\n```\n\n## 日期转时间戳\n```java\nUtil.Strtotime(String day);\nUtil.Strtotime(String day, String format);\n```\n\n## 去首尾空格\n```java\nUtil.Trim(String str);\nUtil.Trim(String str, String charlist);\n```\n\n## 拆分字符串为数组\n```java\nUtil.Explode(String delimiter, String string);\n```\n\n## 数组合成字符串\n```java\nUtil.Implode(String glue, ArrayList<String> pieces);\nUtil.Implode(String glue, JSONArray pieces);\n```\n\n## JSON转字符串\n```java\nUtil.JsonEncode(Object arr);\n```\n\n## JSON字符串转数组\n```java\nUtil.JsonDecode(String str);\nUtil.JsonDecodeArray(String str);\n```\n\n## 合并数组\n```java\nUtil.ArrayMerge(HashMap<String, Object>... arrays);\n```\n"},"0245":function(n,e){n.exports='### 更新\n```java\nimport webmis.model.Demo;\n// 对象\nDemo demo = new Demo();\n// 数据\nHashMap<String,Object> data = new HashMap<String,Object>();\ndata.put("title", "Java-更新");\ndemo.Set(data);\ndemo.Where("uid=?", id);\n// 执行\ndemo.Update();\n```\n\n### 生成SQL\n```java\n// sql、args\nObject[] sql = db.UpdateSQL()\n```'},"02ea":function(n,e){n.exports='## 引入\n```java\nimport webmis.library.Upload;\n```\n\n## 单文件\n```java\n// 参数\nHashMap<String, Object> params = new HashMap<String, Object>();\nparams.put("path", "upload/");  //上传目录\nparams.put("filename", "");     //文件名\nArrayList<String> bind = new ArrayList<String>();\nbind.add("jpg");\nbind.add("jpeg");\nbind.add("png");\nbind.add("gif");\nbind.add("mov");\nbind.add("mp4");\nbind.add("wav");\nbind.add("mp3");\nparams.put("bind", bind);   //允许格式\n\nUpload.File(\n  MultipartFile file,               //文件流\n  HashMap<String, Object> params    //参数\n);\n```\n\n## Base64\n```java\n// 参数\nHashMap<String, Object> params = new HashMap<String, Object>();\nparams.put("path", "upload/"); //上传目录\nparams.put("base64", "");      //文件内容\nparams.put("filename", "");    //文件名\nparams.put("ext", "png");      //后缀\n\nUpload.Base64(\n  HashMap<String, Object> params  //参数\n);\n```\n\n## OSS-签名直传\n```java\nUpload.OssPolicy(\n  String ext,       //扩展名\n  long expireTime   //有效时间(秒)\n);\n```\n- ext: "jpg", "png", "gif"\n- expireTime: 0 默认30秒\n\n## OSS-签名验证\n```java\nUpload.OssPolicyVerify(\n  JSONObject param,   //回调参数\n);\n```\n\n## 图片回收\n```java\nUpload.HtmlImgClear(String html, String dir);\n```\n\n## 文件名-生成\n```java\nUpload.GetFileName();\n```\n\n## 图片地址-获取HTML\n```java\nUpload.GetHtmlFile(String html);\n```\n'},"0358":function(n,e){n.exports='# Vue开发环境\n\n## ArchLinux\n#### 1) 安装Git\n```bash\npacman -S git\n```\n#### 2) 安装NodeJS\n```bash\npacman -S nodejs\n```\n#### 3) 安装Yarn\n```bash\npacman -S yarn\nyarn -v\n```\n#### 4) 安装Vue3\n```bash\nyarn cache clean\nyarn global add @vue/cli\n# 查看\nvue -V\n```\n\n<br/>\n\n## Windows\n#### 1) 安装Git\n- 下载: [Git](https://git-scm.com/download/win)\n- 安装: 64位版 > 重启系统\n- VsCode: "ctrl+`" > "终端" > "powershell" > "选择默认 shell" > "Git Bash" > 重启\n- 终端输入: "cmd" 和 "bash" 可相互切换\n\n#### 2) 安装NodeJS\n- 下载 [Node.js](https://nodejs.org/en/download/)\n- 安装: "node-v14.15.1-x64.msi" 到 "D:\\server\\nodejs"\n- 查看: "node –v"\n\n#### 3) 安装Yarn\n```bash\nnpm install -g yarn\n# 查看\nyarn -v\n```\n\n#### 4) 安装Vue3\n```bash\nnpm install -g cnpm\ncnpm install -g @vue/cli\n# 查看\nvue -V\n```\n<br/>\n\n## MacOS\n#### 1) 安装Git\n```bash\ngit\n```\n\n#### 2) 安装NodeJS\n- 下载 [Node.js](https://nodejs.org/en/download/)\n```bash\nnode –v\n```\n\n#### 3) 安装Yarn\n```bash\nsudo npm install -g yarn\n# 查看\nyarn -v\n```\n#### 4) 安装Vue3\n```bash\nsudo npm install -g cnpm\nsudo cnpm install -g @vue/cli\n# 查看\nvue -V\n```\n\n## Vue3项目\n```bash\nvue create demo\n```\n- ◉ Choose Vue version\n- ◉ Babel\n- ◯ TypeScript\n- ◯ Progressive Web App (PWA) Support\n- ◉ Router\n- ◉ Vuex\n- ◯ CSS Pre-processors\n- ◉ Linter / Formatter\n- ◯ Unit Testing\n- ◯ E2E Testing\n\nUse history mode for router? **Yes**<br/>\nPick a linter / formatter config: **Basic**<br/>\nPick additional lint features: **Lint on save**<br/>\nWhere do you prefer placing config for Babel, ESLint, etc.? **In package.json**<br/>\nSave this as a preset for future projects? **Yes**<br/>\n\n<br/><br/>'},"03d4":function(n,e){n.exports="# WebMIS-Phalcon\n采用PHP7+Phalcon4开发，包括HMVC模块化管理、自动路由、CLI命令行、Socket通信、redis缓存、Token机制等功能，提供支付宝、微信、文件上传、图像处理、二维码等常用类。\n- 网站-API( [https://demo-php.webmis.vip/](https://demo-php.webmis.vip/) )\n- 前端-API( [https://demo-php.webmis.vip/api/](https://demo-php.webmis.vip/api/) )\n- 后台-API( [https://demo-php.webmis.vip/admin/](https://demo-php.webmis.vip/admin/) )\n\n<br/>\n\n## 一、下载\n```bash\ngit clone https://github.com/webmiss/base.git --depth=1\n```\n- WebMIS-Base > phalcon\n- 网站根目录: public下创建upload目录，修改权限为777\n- 数据库: project/database/data.sql\n- 修改密码: user表password字段，md5加密即可\n- 管理员账号: admin 密码:123456\n\n<br/>\n\n## 二、运行\n#### Bash命令\n```bash\n# 依赖包\n./bash install\n# 运行\n./bash serve\n# 数据库工具\ncd ../tools\n./bash adminer\n```\n\n#### Cmd命令\n```bash\n# 依赖包\n.\\cmd install\n# 运行\n.\\cmd serve\n# 数据库工具\ncd ../tools\n.\\cmd adminer\n```\n\n<br/><br/>"},"042b":function(n,e,t){},"0548":function(n,e){n.exports="## 引入\n```python\nfrom service.data import Data\n```\n\n## 薄雾算法\n```python\nData.Mist(redisName: str)\n```\n\n## 雪花算法\n```python\nData.Snowflake()\n```\n\n## 图片地址\n```python\nData.Img(img: str)\n```\n"},"07bf":function(n,e){n.exports="### 更新\n```python\nfrom model.demo import Demo\n# 对象\ndemo = Demo()\ndemo.Set({'title':'Python-更新'})\ndemo.Where('uid=%s', id)\nnum = demo.Update()\nself.Print(num)\n```\n\n### 生成SQL\n```python\nsql, args = db.UpdateSQL()\n```"},"086a":function(n,e){n.exports="## 引入\n```java\nimport webmis.service.Base;\n```\n\n## 返回JSON\n```java\nBase.GetJSON(HashMap<String,Object> data);\n```\n\n## 输出到控制台\n```java\nBase.Print(Object... content);\n```\n"},"08bf":function(n,e){n.exports="### 插入\n```php\nuse Model\\Demo;\n// 对象\n$demo = new Demo();\n$demo->Values(['uid'=>null,'title'=>'PHP-添加']);\n$demo->Insert();\n```\n\n### 生成SQL\n```php\nlist($sql, $args) = $demo->InsertSQL();\n```"},"0a10":function(n,e){n.exports="## 引入\n```python\nfrom util.url import Type\n```\n\n## 转换\n```python\nType.ToType(type: str, val)\n```\n- type: string、int、float\n\n## Interface 转 String\n```python\nType.Strval(val)\n```\n"},"0e24":function(n,e){n.exports='## 服务器\n```bash\n# 运行\n./bash socket\n# 启动\n./bash socketStart\n```\n- 数据: service/scoket.go\n- 发送: library/scoket.go\n\n## 群发\n```go\nimport "library"\n\ngo (&library.Socket{}).Send(\n  "admin",\n  gin.H{\n    "code": 0,\n    "type": "msg",\n    "data": gin.H{\n      "title":   "测试",\n      "content": "测试内容",\n    },\n  },\n)\n```\n'},"0f77":function(n,e){n.exports="## 引入\n```javascript\nimport TelCall from '@/library/tel/call'\nimport TelHide from '@/library/tel/hide'\n```\n\n## 拨打\n```typescript\nTelCall(\n  tel: string,  //手机号码\n);\n```\n\n## 隐藏\n```typescript\nTelHide(\n  tel: string,  //手机号码\n);\n```\n"},"101c":function(n,e){n.exports="## 引入\n```php\nuse Service\\Logs;\n```\n\n## 访问日志\n```php\nLogs::Log($data);\n```\n\n## 信息日志\n```php\nLogs::Info($data);\n```\n\n## 操作日志\n```php\nLogs::Action($data);\n```\n\n## 错误日志\n```php\nLogs::Error($data);\n```\n\n## 其它\n```php\nLogs::Writer(string $text);\n```\n"},"11f0":function(n,e){n.exports="## 引入\n```php\nuse Service\\Data;\n```\n\n## 薄雾算法\n```php\nData::Mist(string $redisName);\n```\n\n## 雪花算法\n```php\nData::Snowflake();\n```\n\n## 图片地址\n```php\nData::Img(string $img);\n```\n"},"134e":function(n,e){n.exports="## 引入\n```php\nuse Service\\Base;\n```\n\n## 返回JSON\n```php\nBase::GetJSON(array $data=[]);\n```\n\n## Get参数\n```php\nBase::Get(string $name);\n```\n\n## Post参数\n```php\nBase::Post(string $name);\n```\n\n## 输出到控制台\n```php\nBase::Print(...$content);\n```\n\n## 异常错误\n```php\nBase::Error($msg);\n```\n"},1576:function(n,e){n.exports="### 删除\n```php\nuse Model\\Demo;\n// 对象\n$demo = new Demo();\n$demo->Where('uid=?', $id);\n$demo->Delete();\n```\n\n### 生成SQL\n```php\nlist($sql, $args) = $demo->DeleteSQL();\n```"},"16ec":function(n,e){n.exports="## 路由\n```python\nrouter(self, uid: str, conn: any, msg: str)\n```\n\n## 群发\n```python\nsendAll(self, data: dict)\n```\n\n## 单发\n```python\nsend(self, conn, data: dict)\n```\n"},1992:function(n,e){n.exports='### 删除\n```java\nimport webmis.model.Demo;\n// 对象\nDemo demo = new Demo();\ndemo.Where("uid=?", id);\ndemo.Delete();\n```\n\n### 生成SQL\n```java\n// sql、args\nObject[] sql = db.DeleteSQL()\n```'},"1ebd":function(n,e){n.exports='### 事务\n```go\nimport "webmis/model"\n\n// 对象\ndb := (&model.Demo{}).New()\nconn := db.DBConn()\n// 开始\ntx, _ := conn.Begin()\n// SQL1\nm1 := (&model.Demo{}).New()\nm1.Values(map[string]interface{}{"uid": nil, "title": "Go-事件"})\nsql, args := m1.InsertSQL()\nrs, err1 := tx.Exec(sql, args...)\nid := db.LastInsertId(rs)\n// SQL2\nm2 := (&model.Demo{}).New()\nm2.Where("uid=?", id)\nsql, args = m2.DeleteSQL()\n_, err2 := tx.Exec(sql, args...)\nif err1 != nil || err2 != nil {\n  tx.Rollback()\n} else {\n  // 提交\n  tx.Commit()\n}\n```'},"206e":function(n,e){n.exports="\n## 安装Nginx\n``` bash\npacman -S nginx\nsystemctl start nginx\n```\n**配置**( /etc/nginx/nginx.conf )\n``` bash\n # 403拒绝访问问题\nuser root;  #必须Root\nhttp {\n\tkeepalive_timeout  65;\n\n\t#gzip  on;\n\n\t#vhost\n\tinclude /home/webmis/works/vhosts/*.conf;\n\n\t# 导入数据库文件限制\n\tclient_max_body_size 150m;\n}\n```\n<br/>\n\n## 安装MariaDB\n``` bash\npacman -S mariadb\nmysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql\nsystemctl start mysqld\n```\n**设置root密码**\n``` bash\nmysql_secure_installation\n```\n**允许远程访问**\n``` bash\nmysql -u root -p\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%'IDENTIFIED BY '123456' WITH GRANT OPTION;\nflush privileges;\n```\n<br/>\n\n## 安装PHP\n``` bash\npacman -S php-fpm\nsystemctl start php-fpm\n```\n#### 1) 配置PHP( /etc/php/php.ini )\n``` bash\n# CGI\ncgi.fix_pathinfo=0\n# 数据库\nextension=mysqli\nextension=pdo_mysql\n# 时区\ndate.timezone = \"Asia/Shanghai\"\n# 加速 PHP\nzend_extension=opcache\nopcache.enable=1\nopcache.enable_cli=1\nopcache.file_cache=/tmp\n```\n#### 2) 配置PHP-FPM( vi /etc/php/php-fpm.d/www.conf )\n``` bash\n# 系统用户\nuser = webmis #系统账户\ngroup = webmis  #账户组名\n# 链接方式( 文件、TCP )\nlisten = /run/php-fpm/php-fpm.sock\n;listen = 127.0.0.1:9000\n```\n重启PHP\n``` bash\nsystemctl start php-fpm\n```\n<br/>\n\n## 虚拟主机\n``` bash\nmkdir -p /home/webmis/works/vhosts/\nvi /home/webmis/vhosts/webmis.conf\n```\n**文件内容**\n``` bash\n# nginx\nserver {\n\tlisten 80 default_server;\n\tserver_name localhost;\n\troot '/home/webmis/www/';\n\tindex index.php index.html;\n\n\t# 目录预览\n\tautoindex on;\n\tautoindex_exact_size off;\n\tautoindex_localtime on;\n\n\tlocation /{\n\t}\n\n\t# PHP\n\tlocation ~ \\.php$ {\n\t\tfastcgi_pass   unix:/run/php-fpm/php-fpm.sock;\n\t\t#fastcgi_pass 127.0.0.1:9000;\n\t\tfastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n\t\tinclude        fastcgi_params;\n\t}\n\t# deny access to .htaccess files, if Apache's document root\n\tlocation ~ /\\.ht {\n\t\tdeny all;\n\t}\n\n}\n```\n\n<br/><br/>"},"208f":function(n,e){n.exports='## 引入\n```go\nimport "webmis/util"\n```\n\n## 编码\n```go\n(&util.Base64{}).Encode(data []byte)\n```\n\n## 解码\n```go\n(&util.Base64{}).Decode(data string)\n```\n\n## 编码(URL)\n```go\n(&util.Base64{}).UrlEncode(data []byte)\n```\n\n## 解码(URL)\n```go\n(&util.Base64{}).UrlDecode(data string)\n```\n\n## 压缩\n```go\n(&util.Base64{}).Compress(data []byte)\n```\n\n## 解压\n```go\n(&util.Base64{}).UnCompress(data []byte)\n```\n'},2094:function(n,e){n.exports="## 引入\n```python\nfrom library.upload import Upload\n```\n\n## 单文件\n```python\nUpload.File(\n  'upName': 'up',     #上传名称\n  'path':'upload/',   #上传目录\n  'filename':'',      #文件名\n  'bind':['jpg','jpeg','png','gif','mov','mp4','wav','mp3'], #允许格式\n)\n```\n\n## Base64\n```python\nUpload.File(\n  'path':'upload/',   #上传目录\n  'base64':'',        #文件内容\n  'filename':'',      #文件名\n  'ext':'png',        #后缀\n)\n```\n\n## OSS-签名直传\n```python\nUpload.OssPolicy(\n  ext: str,           #扩展名\n  expireTime: int=0   #有效时间(秒)\n)\n```\n- ext: \"jpg\", \"png\", \"gif\"\n- expireTime: 0 默认30秒\n\n## OSS-签名验证\n```python\nUpload.OssPolicyVerify(\n  param: dict,    #回调参数\n)\n```\n\n## 图片回收\n```python\nUpload.HtmlImgClear(html: str, dir: str)\n```\n\n## 文件名-生成\n```python\nUpload.GetFileName()\n```\n\n## 图片地址-获取HTML\n```python\nUpload.GetHtmlFile(html: str)\n```\n"},"252b":function(n,e){n.exports="## 引入\n```javascript\nimport wmImg from '@/components/img/index.vue'\nimport wmImgUpload from '@/components/img/upload/index.vue'\nimport wmImgView from '@/components/img/view/index.vue'\n```\n\n## 图片\n```html\n<wm-img></wm-img>\n```\n- url: {type: String, default: ''},         //图片地址\n- size: {type: String, default: 'cover'},   //背景大小\n- width: {type: String, default: '90px'},   //宽\n- height: {type: String, default: '40px'},  //高\n- radius: {type: String, default: '0px'},   //圆角\n- title: {type: String, default: ''},       //提示\n- icoSize: {type: String, default: '32px'}, //图标大小\n\n## 上传\n```html\n<wm-img-upload></wm-img-upload>\n```\n- url: {type: String, default: ''},           //上传地址\n- width: {type: Number, default: 200},        //宽\n- height: {type: Number, default: 200},       //高\n- param: {type: Object, default: {}},         //提交参数\n- title: {type: String, default: '上传图片'}, //提示\n\n## 预览\n```html\n<wm-img-view></wm-img-view>\n```\n- show: {type: Boolean, default: false},                  //显示\n- opacity: {type: Number, default: 0.8},                  //背景透明度\n- loadColor: {type: String, default: '#6FB737'},          //Load颜色\n- iconLoading: {type: String, default: 'ui ui_loading'},  //Load图标\n- iconLeft: {type: String, default: 'ui ui_left'},        //上一页\n- iconRight: {type: String, default: 'ui ui_right'},      //下一页\n- iconFull: {type: String, default: 'ui ui_full'},        //全屏\n- iconClose: {type: String, default: 'ui ui_close'},      //关闭\n- @update:close                                           //事件-关闭\n"},2860:function(n,e){n.exports='## 安装\n```bash\nwget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -\napt install apt-transport-https\necho "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-7.x.list\napt update && apt install elasticsearch\n```\n\n## 配置( vi /etc/elasticsearch/elasticsearch.yml )\n```bash\ncluster.name: my-application\nnode.name: node-1\ncluster.initial_master_nodes: ["node-1"]\nnetwork.host: 0.0.0.0\nhttp.port: 9200\npath.data: /home/elasticsearch/data\npath.logs: /home/elasticsearch/log\n```\n\n## 启动\n```bash\n# 修改权限\nchmod -R 777 /home/elasticsearch/*\n# 启动服务\nsystemctl start elasticsearch\n# 测试\ncurl localhost:9200\n```\n- 外网访问 http://47.108.105.202:9200/\n'},"29cc":function(n,e){n.exports="## 引入\n```python\nfrom service.admin_token import AdminToken\n```\n\n## 验证\n```python\nAdminToken.verify(token: str, urlPerm: str)\n```\n\n## 权限数组\n```python\nAdminToken.Perm(token: str)\n```\n\n## 生成\n```python\nAdminToken.Create(data: dict)\n```\n\n## 获取\n```python\nAdminToken.Token(token: str)\n```\n"},"2a30":function(n,e){n.exports="# LNMP 环境搭建\n\n## Nginx\n#### 1) 安装\n```bash\napt install nginx -y\napt autoremove -y\n# 查看\nsystemctl status nginx\n```\n#### 2) 配置 ( vi /etc/nginx/nginx.conf )\n```nginx\n\n    user www-data\n\n    keepalive_timeout 30;\n\n    # Gzip压缩\n    gzip on;\n    gzip_vary on;\n    gzip_proxied any;\n    gzip_comp_level 6;\n    gzip_buffers 4 8k;\n    gzip_min_length 1k;\n    gzip_http_version 1.0;\n    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/octet-stream application/pdf image/gif image/jpeg image/png image/x-icon;\n\n    #include /etc/nginx/conf.d/*.conf;\n    include /home/vhosts/*.conf;\n```\n\n#### 3) 虚拟主机\n```bash\n# 创建目录\nmkdir -p /home/vhosts\n# 编辑配置文件\nvi /home/vhosts/default.conf\n```\n**文件内容**\n```nginx\nserver {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  _;\n    root         /home/www/;\n    index index.html;\n\n    location / {\n    }\n\n    error_page 404 /404.html;\n    location = /40x.html {\n    }\n    error_page 500 502 503 504 /50x.html;\n    location = /50x.html {\n    }\n}\n```\n\n#### 4) 测试\n```bash\n# 创建文件\nmkdir -p /home/www\necho '<h1>WebMIS</h1>' > /home/www/index.html\nchmod -R 777 /home/www/index.html\n# 重启Nginx\nsystemctl restart nginx\n```\n- 预览: http://IP/index.html\n\n\n## MariaDB\n#### 1) 安装\n```bash\n# 安装\napt install omnidb-common mariadb-server -y\n# 开机启动\nsystemctl status mariadb\n# 查看运行\nnetstat -tap | grep mysql\n```\n#### 2) 设置密码\n```bash\nmysql_secure_installation\n```\n#### 3) 数据库工具\n- [Adminer](https://github.com/vrana/adminer/releases/)\n\n#### 4) 允许Root远程访问\n```bash\n# 登录\nmysql -uroot -p\n# 设置权限\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%'IDENTIFIED BY '登录密码' WITH GRANT OPTION;\n# 刷新\nflush privileges;\n# 查看\nuse msyql\nselect Host, User from user;\n# 修改配置\nvi /etc/mysql/mariadb.conf.d/50-server.cnf\n```\n- 修改\"bind-address = 0.0.0.0\"\n- 重启服务\"systemctl restart mariadb\"\n\n\n## Redis\n```bash\n# 安装\napt install redis-server -y\n# 查看\nsystemctl status redis\n# 远程访问\nvi /etc/redis.conf\n```\n- 远程访问: (1)注释 # bind 127.0.0.1  (2)protected-mode no\n- 设置密码: requirepass 新密码\n\n\n## PHP\n#### 1) 安装PHP7\n```bash\napt install php-fpm php-cli php-mysql php-curl php-gd -y\n```\n#### 2) 添加扩展\n```bash\n# Phalcon\ncurl -s https://packagecloud.io/install/repositories/phalcon/stable/script.deb.sh | sudo bash\napt update -y\napt install php-psr php7.4-phalcon -y\n# Redis\napt install redis php-redis\n```\n\n#### 3) PHP配置\n```bash\nvi /etc/php/7.4/fpm/php.ini\n```\n- date.timezone = \"Asia/Shanghai\"\n- session.save_path = \"/tmp\"\n- \n\n#### 4) PHP-FPM配置\n```bash\nvi /etc/php/7.4/fpm/pool.d/www.conf\n```\n- user = www-data\n- group = www-data\n- listen = /run/php/php7.4-fpm.sock\n\n#### 5) Session问题\n```bash\nchmod -R 777 /var/lib/php/sessions\n```\n\n#### 7) 探针\n```bash\necho '<?php phpinfo(); ?>' > /home/www/phpinfo.php\nchmod -R 777 /home/www/phpinfo.php\n```\n\n#### 8) Nginx调用PHP-FPM\nvi /home/vhosts/default.conf\n```bash\n    # PHP-FPM\n    location ~ \\.php$ {\n        #fastcgi_pass   127.0.0.1:9000;\n        fastcgi_pass   unix:/run/php/php7.4-fpm.sock;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n```\n**重启**\n```bash\nsystemctl restart nginx\n```"},"2d9a":function(n,e){n.exports='## 引入\n```go\nimport "webmis/util"\n```\n\n## 编码\n```go\n(&util.Url{}).Encode(data string)\n```\n\n## 解码\n```go\n(&util.Url{}).Decode(data string)\n```\n'},"2e36":function(n,e){n.exports="## 引入\n```python\nfrom util.url import Url\n```\n\n## 编码\n```python\nUrl.Encode(data: str)\n```\n\n## 解码\n```python\nUrl.Decode(data: str)\n```\n"},"2f2d":function(n,e){n.exports="# LNMP 环境搭建\n\n## Nginx\n#### 1) 安装\n```bash\ndnf install nginx -y\n# 开机启动\nsystemctl enable nginx\nsystemctl start nginx\n```\n#### 2) 配置 ( vi /etc/nginx/nginx.conf )\n```nginx\n\n    user root\n\n    keepalive_timeout 30;\n\n    # Gzip压缩\n    gzip on;\n    gzip_vary on;\n    gzip_proxied any;\n    gzip_comp_level 6;\n    gzip_buffers 4 8k;\n    gzip_min_length 1k;\n    gzip_http_version 1.0;\n    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/octet-stream application/pdf image/gif image/jpeg image/png image/x-icon;\n\n    #include /etc/nginx/conf.d/*.conf;\n    include /home/vhosts/*.conf;\n```\n\n#### 3) 虚拟主机\n```bash\n# 创建目录\nmkdir -p /home/vhosts\n# 编辑配置文件\nvi /home/vhosts/default.conf\n```\n**文件内容**\n```nginx\nserver {\n    listen       80 default_server;\n    listen       [::]:80 default_server;\n    server_name  _;\n    root         /home/www/;\n    index index.html;\n\n    location / {\n    }\n\n    error_page 404 /404.html;\n    location = /40x.html {\n    }\n    error_page 500 502 503 504 /50x.html;\n    location = /50x.html {\n    }\n}\n```\n\n#### 4) 测试( http://IP/index.html )\n```bash\n# 创建文件\nmkdir -p /home/www\necho '<h1>WebMIS</h1>' > /home/www/index.html\nchmod -R 777 /home/www/index.html\n# 重启Nginx\nsystemctl restart nginx\n```\n<br/>\n\n## MariaDB\n#### 1) 安装\n```bash\n# 安装\ndnf install mariadb mariadb-server -y\n# 开机启动\nsystemctl enable mariadb\nsystemctl start mariadb\n# 查看运行\nnetstat -tap | grep mysql\n```\n#### 2) 设置密码\n```bash\nmysql_secure_installation\n```\n#### 3) 数据库工具\n- [Adminer](https://github.com/vrana/adminer/releases/)\n\n#### 4) 允许Root远程访问\n```bash\n# 登录\nmysql -uroot -p\n# 设置权限\nGRANT ALL PRIVILEGES ON *.* TO 'root'@'%'IDENTIFIED BY '登录密码' WITH GRANT OPTION;\n# 刷新\nflush privileges;\n```\n\n## Redis\n```bash\n# 安装\ndnf install redis -y\n# 远程访问\nvi /etc/redis.conf\n```\n- 远程访问: (1)注释 # bind 127.0.0.1  (2)protected-mode no\n- 设置密码: requirepass 新密码\n\n\n## PHP\n#### 1) 软件仓库\n```bash\ndnf install http://rpms.remirepo.net/enterprise/remi-release-8.rpm -y\n```\n\n#### 2) 安装PHP7\n```bash\n# PHP7.4\ndnf install php74-php-fpm php74-php-cli php74-php-pdo php74-php-mysql php74-php-gd -y\n# 开机启动\nsystemctl enable php74-php-fpm\n# 启动\nsystemctl start php74-php-fpm\n```\n\n#### 3) 添加扩展\n```bash\n# Phalcon\ndnf install php74-php-phalcon4 -y\n# Redis\ndnf install redis php74-php-pecl-redis5 -y\ndnf install redis php80-php-pecl-redis5 -y\n```\n\n#### 4) PHP配置\n```bash\nvi /etc/opt/remi/php74/php.ini\n```\n- date.timezone = \"Asia/Shanghai\"\n- session.save_path = \"/tmp\"\n\n#### 5) PHP-FPM配置\n```bash\nvi /etc/opt/remi/php74/php-fpm.d/www.conf\n```\n- user = nginx\n- group = nginx\n- listen = /var/opt/remi/php74/run/php-fpm/www.sock\n\n#### 6) Session问题\n```bash\nchmod -R 777 /var/opt/remi/php74/lib/php/session\n```\n\n#### 7) 探针\n```bash\necho '<?php phpinfo(); ?>' > /home/www/phpinfo.php\nchmod -R 777 /home/www/phpinfo.php\n```\n\n#### 8) Nginx调用PHP-FPM\nvi /home/vhosts/default.conf\n```bash\n    # PHP-FPM\n    location ~ \\.php$ {\n        #fastcgi_pass   127.0.0.1:9000;\n        fastcgi_pass   unix:/var/opt/remi/php74/run/php-fpm/www.sock;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n```\n**重启**\n```bash\nsystemctl restart nginx\n```\n\n<br/><br/>\n"},"2fa9":function(n,e){n.exports="## 引入\n```javascript\nimport UrlEncode from '@/library/url/encode'\nimport UrlDecode from '@/library/url/decode'\n```\n\n## 编码\n```javascript\nUrlEncode(\n  data: string, //数据\n);\n```\n\n## 解码\n```javascript\nUrlDecode(\n  data: string, //数据\n);\n```\n"},"300b":function(n,e){n.exports='## 引入\n```go\nimport "webmis/service"\n```\n\n## 返回JSON\n```go\n(&service.Base{}).GetJSON(c *gin.Context, data interface{})\n```\n\n## 输出到控制台\n```go\n(&service.Base{}).Print(content ...interface{})\n```\n'},"34c3":function(n,e){n.exports="### 创建模型\n**model/demo.py**\n```python\nfrom model.model import Model\n\n# 测试表\nclass Demo(Model) :\n\n  # 构造函数\n  def __init__(self):\n    self.Table('test')\n```\n\n### 使用\n```python\nfrom model.demo import Demo\n# 对象\nmodel = Demo()\n```\n\n### 查询\n```python\nmodel.Query(conn, sql: str, args: tuple)\n```\n\n### 执行\n```python\nmodel.Exec(conn, sql: str, args: tuple)\n```\n"},"350b":function(n,e){n.exports="# WebMIS-Java\n采用Java + SpringBoot开发，包括HMVC模块化管理、Token验证、Redis缓存等\n- 网站-API( [https://demo-java.webmis.vip/](https://demo-java.webmis.vip/) )\n- 前端-API( [https://demo-java.webmis.vip/api/](https://demo-java.webmis.vip/api/index) )\n- 后台-API( [https://demo-java.webmis.vip/admin/](https://demo-java.webmis.vip/admin/index) )\n\n<br/>\n\n## 一、下载\n```bash\ngit clone https://github.com/webmiss/base.git --depth=1\n```\n- WebMIS-Base > java\n- 网站根目录: public下创建upload目录，修改权限为777\n- 数据库: project/database/data.sql\n- 修改密码: user表password字段，md5加密即可\n- 管理员账号: admin 密码:123456\n\n<br/>\n\n## 二、运行\n#### Bash命令\n```bash\n# 依赖包\n./bash install\n# 运行\n./bash serve\n# 打包\n./bash build\n```\n\n#### Cmd命令\n```bash\n# 依赖包\n.\\cmd install\n# 运行\n.\\cmd serve\n# 打包\n.\\cmd build\n```\n\n<br/><br/>"},"364b":function(n,e){n.exports="### 查询\n```php\nstatic function Index() {\n  // 查询\n  $model = new Demo();\n  $model->Columns('uid','title');\n  $model->Where('title LIKE ?','%查询%');\n  $data = $model->Find();\n  // 返回\n  return self::getJSON(['code'=>0, 'msg'=>'Web', 'data'=>$data]);\n}\n```\n\n### 多条\n```php\n$model->Find();\n```\n\n### 单条\n```php\n$model->FindFirst();\n```\n\n### 返回类型\n```php\n$model->ResType();\n```\n\n### 生成SQL\n```php\nlist($sql, $args) = $model->SelectSQL();\n```"},"37d3":function(n,e){n.exports='## 引入\n```go\nimport "webmis/service"\n```\n\n## 薄雾算法\n```go\n(&service.Data{}).Mist(redisName string)\n```\n\n## 雪花算法\n```go\n(&service.Data{}).Snowflake()\n```\n\n## 图片地址\n```go\n(&service.Data{}).Img(img interface{})\n```\n'},"3a03":function(n,e){n.exports='# Python3开发环境\n\n## ArchLinux\n#### 1) 安装Git\n```bash\npacman -S git\n```\n\n#### 2) 安装Python\n```bash\npacman -S python python-pip\n# 查看\npython -V\n```\n<br/>\n\n## Windows\n#### 1) 安装Git\n- 下载: [Git](https://git-scm.com/download/win)\n- 安装: 64位版 > 重启系统\n- VsCode: "ctrl+`" > "终端" > "powershell" > "选择默认 shell" > "Git Bash" > 重启\n- 终端输入: "cmd" 和 "bash" 可相互切换\n\n#### 2) 安装Python\n- 下载: [Python](https://www.python.org/downloads/)\n- 勾选: Add Python 3.x to PATH\n- 选择: Customize installation\n- 安装目录: "D:\\server\\python"\n- CMD: python -V\n\n<br/>\n\n## MacOS\n#### 1) 安装Git\n```bash\ngit\n```\n\n#### 2) 安装Python\n- 下载: [Python](https://www.python.org/downloads/)\n\n<br/><br/>'},"3adc":function(n,e){n.exports="## 引入\n```javascript\nimport wmPicker from '@/components/picker/index.vue'\nimport wmPickerDate from '@/components/picker/date.vue'\n```\n\n## 选择器\n```html\n<wm-picker></wm-picker>\n```\n- show: {type: Boolean, default: false},          //是否显示\n- data: {type: Array, default: []},               //数据: [{label: '云南',value: 'yn', children:[]}]\n- defaultIndex: {type: Array, default: [0,0,0]},  //是否显示\n- title: {type: String, default: ''},             //标题\n- cancelText: {type: String, default: '取消'},    //取消文本\n- confirmText: {type: String, default: '确定'},   //确定文本\n- @update:show  //事件: 显示\n- @confirm      //事件: 确定\n- @cancel       //事件: 取消\n- @change       //事件: 变化\n\n\n## 日期选择器\n```html\n<wm-picker-date></wm-picker-date>\n```\n- show: {type: Boolean, default: false},        //是否显示\n- title: {type: String, default: '选择年月日'}, //标题\n- maxDate: {type: Object, default: null},       //最大时间, 例如: new Date(2021,10,1)\n- minDate: {type: Object, default: null},       //最小时间, 例如: new Date(1970,1,1)\n- default: {type: Array, default: []},          //默认值: [2020,10,5]\n- cancelText: {type: String, default: '取消'},  //取消文本\n- confirmText: {type: String, default: '确定'}, //确定文本\n- @update:show  //事件: 显示\n- @confirm      //事件: 确定\n- @cancel       //事件: 取消\n\n"},"3ba2":function(n,e){n.exports="## 引入\n```javascript\nimport wmPopover from '@/components/popover/index.vue'\n```\n\n## 弹出框\n```html\n<wm-popover></wm-popover>\n```\n- type: {type: String, default: 'top'},     //位置: top、bottom、left、right\n- width: {type: String, default: '160px'},  //内容宽度\n- effect: {type: String, default: 'plain'}, //样式: plain、dark\n\n"},4021:function(n,e){n.exports="## 引入\n```python\nfrom util.base64 import Base64\n```\n\n## String To Bytes\n```python\nBase64.ToByte(data: str)\n```\n\n## Bytes To String\n```python\nBase64.ToStr(data: bytes)\n```\n\n## 编码\n```python\nBase64.Encode(data: str)\n```\n\n## 解码\n```python\nBase64.Decode(data: str)\n```\n\n## 编码(URL)\n```python\nBase64.UrlEncode(data: str)\n```\n\n## 解码(URL)\n```python\nBase64.UrlDecode(data: str)\n```\n\n## 压缩\n```python\nBase64.Compress(data: str)\n```\n\n## 解压\n```python\nBase64.UnCompress(data: bytes)\n```\n"},"439d":function(n,e){n.exports="## 引入\n```javascript\nimport Camera from '@/library/plus/camera'\n```\n\n## 相机\n```typescript\nCamera(\n  callback: any,  //成功回调\n  fail?: any,     //失败回调\n);\n```\n"},"440c":function(n,e){n.exports="## 引入\n```javascript\nimport Toast from '@/library/ui/toast'\nimport UiBack from '@/library/ui/back'\nimport Loaging from '@/library/ui/loading'\nimport NavigateTo from '@/library/ui/navigate-to'\n```\n\n## 轻提示\n```typescript\nToast(\n  text: string='提示',  //提示内容\n  time: number = 3000,  //倒计时关闭\n);\n```\n\n## 返回\n```typescript\nUiBack(\n  num: number=1,  //步长\n);\n```\n\n## 加载\n```typescript\n// 动画\nconst load: any = Loading();\n// 关闭\nload.clear();\n```\n\n## 跳转\n```typescript\nNavigateTo(\n  url: string,  //页面路径\n  parm?: any,   //传参\n);\n```\n"},"44c6":function(n,e){n.exports='## Redis 使用\n```go\nimport "webmis/library"\n# 对象\nredis := (&library.Redis{}).New()\n# 关闭\nredis.Close()\n```\n**Conn-连接**\n```go\nredis.Conn()\n```\n**Set-添加**\n```go\nredis.Set(key string, val interface{})\n```\n**Get-获取**\n```go\nredis.Get(key string)\n```\n**Get-删除**\n```go\nredis.Get(keys ...interface{})\n```\n\n**Exist-是否存在**\n```go\nredis.Exist(key string)\n```\n**设置过期时间(秒)**\n```go\nredis.Expire(key string, ttl int64)\n```\n**获取过期时间(秒)**\n```go\nredis.Ttl(key string)\n```\n**获取长度**\n```go\nredis.StrLen(key string)\n```\n\n## 哈希(Hash)\n**HSet-添加**\n```go\nredis.HSet(name string, key string, val interface{})\nredis.HMSet(name string, obj interface{})\n```\n**HGet-获取**\n```go\nredis.HGet(name string, key string)\nredis.HMGet(name string, keys ...string)\n```\n**Hdel-删除**\n```go\nredis.HDel(name string, key ...string)\n```\n**HExist-是否存在**\n```go\nredis.HExist(name string, key string)\n```\n**HLen-Key个数**\n```go\nredis.HLen(name string)\n```'},4872:function(n,e){n.exports="## 服务器\n```bash\n# 运行\n./bash socket\n# 启动\n./bash socketStart\n```\n\n## 群发\n```python\nfrom library.socket import Socket\n\nSocket.Send('admin', {\n  'code': 0,\n  'type': 'msg',\n  'data': {\n    'title': '测试',\n    'content': '测试内容',\n  },\n})\n```\n"},"494f":function(n,e){n.exports='## 一、打包\n#### Bash命令\n```bash\n./bash build\n```\n#### Yarn命令\n```bash\nyarn build\n```\n### HBuilder 云打包\n- [HBuilder X](https://www.dcloud.io/hbuilderx.html)\n- 打包: 打开"dist"目录 > 发布 > 原生App-云打包\n- 配置文件: public/manifest.json\n<br/>\n\n## 二、本地预览\n#### Bash命令\n```bash\n./bash http\n```\n#### Yarn命令\n```bash\n# 安装\nyarn global add http-server\n# 运行\nhttp-server ./dist\n```\n\n<br>\n\n## 三、发布\n## Web\n```nginx\nserver {\n    listen       80;\n    server_name  app.webmis.vip;\n    root /home/www/base/vueapp/dist;\n    index index.html;\n\n    charset utf-8;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n\n    location ~ /\\.ht {\n        deny  all;\n    }\n}\n```\n\n## Android\n**证书**\n``` bash\n# 生成签名文件\nkeytool -genkey -v -keystore appName.keystore -alias appName.keystore -keyalg RSA -validity 20000\n# 签名包\njarsigner -verbose -keystore appName.keystore -signedjar ./android-release.apk ./android-debug.apk appName.keystore\n# 查看签名（SHA1）\nkeytool -v -list -keystore appName.keystore\n```\n\n## iOS\n- [苹果开发者中心](https://developer.apple.com/)\n- 无苹果电脑可参考 Linux > [VirtualBox-MacOS](/docs/linux/shell/macos)\n\n### 1) P12证书\n- 钥匙串访问 > 证书助理 > 从证书颁发结构请求证书 > 储存到本地\n- 苹果开发者 > 创建证书 > iOS Distribution > 上传刚生成到密钥 > 下载证书 > 导入到登录\n- 钥匙串访问 > 登录 > 证书 > 右键导出\n\n### 2) 证书管理( Certificates, Identifiers & Profiles )\n- Certificates // 创建证书 例如: iOS Development(开发版)、iOS Distribution(发行版)\n- Identifiers // 创建AppID 例如: com.xxx.项目名称\n- Devices  // 调试设备UDID 例如: 79dd895e0e6733603914a81af4f6d94544a2acba\n- Profiles // 描述文件 例如: iOS App Development(开发版)、App Store(应用商店)\n\n### 3) 上架资料\n- [AppStore](https://appstoreconnect.apple.com/)\n\n### 4) AppStore\n- 打包提交： xcode > Product > Archive\n- 软件方式: Transporter\n\n### 5) Transporter问题\nTransporter 安装上第一次打开后，会在硬盘 ~/Library/Caches/com.apple.amp.itmstransporter 目录下下载一些缓存文件，这些缓存文件没有下载完，或者下载失败没下载完时，使用Transporter去提交应用这个页面就会卡住或者这个页面很慢。\n```bash\n# 下载\n/Applications/Transporter.app/Contents/itms/bin/iTMSTransporter\n# 大小\ndu -sh ~/Library/Caches/com.apple.amp.itmstransporter\n```\n- 如果失败删除com.apple.amp.itmstransporter目录，再重试\n\n<br/><br/>'},4958:function(n,e){n.exports='### 删除\n```go\nimport "webmis/model"\n// 对象\ndemo := (&model.Demo{}).New()\ndemo.Where("uid=?", id)\ndemo.Delete()\n```\n\n### 生成SQL\n```go\nsql,args := db.DeleteSQL()\n```'},"4cd5":function(n,e){n.exports="## 引入\n```php\nuse Util\\Type;\n```\n\n## 转换\n```php\nType::ToType(string $type, $val);\n```\n- type: string、int、float\n\n## 转String\n```php\nType::Strval($val);\n```"},"4cd56":function(n,e){n.exports="## 引入\n```php\nuse Util\\Util;\n```\n\n## 执行Linux命令\n```php\nUtil::Exec(string $cmd);\n```\n\n## 格式化时间\n```php\nUtil::Date(string $format='Y-m-d H:i:s', int $timestamp=0)\nUtil::DateFormat(\n  string $format='Y-m-d H:i:s', //格式\n  string $duration='0s'         //年(y)、月(m)、周(w)、日(d)、时(h)、分(i)、秒(s)\n)\n```\n\n## 字符串长度\n```php\nUtil::Len(string $val);\n```\n\n## 日期转时间戳\n```php\nUtil::Strtotime(string $day);\n```\n\n## URL参数\n```php\nUtil::UrlToArray(string $url);\n```"},"4d5c":function(n,e){n.exports="## 路由\n```php\nrouter(string $uid, $conn, $msg);\n```\n\n## 群发\n```php\nsendAll($data);\n```\n\n## 单发\n```php\nsend($conn, $data);\n```"},"4e02":function(n,e){n.exports="### 事务\n```python\nfrom model.demo import Demo\n\nmodel = Demo()\nconn = model.DBConn()\ntry:\n  # 开始\n  conn.begin()\n  cs = conn.cursor()\n  # SQL1\n  m1 = Demo()\n  m1.Values({'uid':None,'title':'Python-事件'})\n  sql, args = demo.InsertSQL()\n  cs.execute(sql, args)\n  id = model.LastInsertId(cs)\n  # SQL2\n  m2 = Demo()\n  m2.Where('uid=%s', id)\n  sql, args = m2.DeleteSQL()\n  cs.execute(sql, args)\n  # 提交\n  cs.close()\n  conn.commit()\nexcept Exception as e:\n  conn.rollback()\nfinally :\n  conn.close()\n\n```"},"50d6":function(n,e){n.exports="## 引入\n```javascript\nimport Get from '@/library/request/get'\nimport Post from '@/library/request/post'\nimport Put from '@/library/request/put'\nimport Delete from '@/library/request/delete'\nimport Patch from '@/library/request/patch'\n```\n\n## 请求方式\n```typescript\nRequest(\n  url: string,    //请求地址\n  data?: any,     //请求参数\n  success?: any,  //成功回调\n  fail?: any,     //失败回调\n  config?: any,   //配置\n);\n```\n"},"515b":function(n,e){n.exports="## Redis 使用\n```php\nuse Library\\Redis;\n// 对象\n$redis = new Redis();\n// 关闭\n$redis->Close();\n```\n**Conn-连接**\n```php\n$redis->Conn();\n```\n**Set-添加**\n```php\n$redis->Set(string $key, string $val);\n```\n**Get-获取**\n```php\n$redis->Get(string $key);\n```\n**Get-删除**\n```php\n$redis->Del(string ...$key);\n```\n**Exist-是否存在**\n```php\n$redis->Exist(string $key);\n```\n**设置过期时间(秒)**\n```php\n$redis->Expire(string $key, int $ttl);\n```\n**获取过期时间(秒)**\n```php\n$redis->Ttl(string $key);\n```\n**获取长度**\n```php\n$redis->StrLen(string $key);\n```\n\n## 哈希(Hash)\n**HSet-添加**\n```php\n$redis->HSet(string $name, string $key, $val);\n$redis->HMSet(string $name, array $obj);\n```\n**HGet-获取**\n```php\n$redis->HGet(string $name, string $key);\n$redis->HMGet(string $name, string $key);\n```\n**Hdel-删除**\n```php\n$redis->HDel(string $name, string $key);\n```\n**HExist-是否存在**\n```php\n$redis->HExist(string $name, string $key);\n```\n**HLen-Key个数**\n```php\n$redis->HLen(string $name);\n```"},"51ab":function(n,e){n.exports='# Shell 基础知识\n\n### 环境变量\n``` bash\n# 系统环境变量\nenv\n# 系统变量和函数\nset\n# 树形显示所有进程\npstree\n# 自定义变量\nvi /etc/profile    #系统环境变量\nvi /etc/bashrc    #用户环境变量\n```\n- .bash_profile #定义了用户的个人化路径与环境变量的文件名称。\n- .bashrc       #该文件包含专用于你的shell的bash信息。\n- .bash_history #记录命令历史用的。\n- .bash_logout  #当退出shell时,会执行该文件。可以把一些清理的工作放到这个文件中。\n\n<br/>\n\n### 特殊符号\n``` bash\n#!/bin/bash\n*\t#代表零个或多个字符或数字。\n?\t#只代表一个任意的字符。\n!\t#惊叹号通常它代表反逻辑的作用,譬如条件侦测中,用 != 来代表"不等于"。\n~\t#用户的家目录,如果是root则是 /root ,普通用户则是 /home/username。\n#\t#这个符号在linux中表示注释说明的意思,即”#”后面的内容linux忽略掉。\n\\\t#脱意字符,将后面的特殊符号(例如”*” )还原为普通字符。\n|\t#管道符,前面多次说过,它的作用在于将符号前面命令的结果丢给符号后面的命令。\n$\t#除了用于变量前面的标识符外,还有一个妙用,就是和’!’结合起来使用。\n,\t#逗点常运用在运算当中当做"区隔"用途。\n;\t#不管command1是否执行成功都会执行command2\n&&\t#逻辑符号,代表 or 逻辑的符号。\n||\t#逻辑符号,代表 and 逻辑的符号。\n;;\t#连续分号专用在 case 的选项\n[]\t#中括号,中间为字符组合,代表中间字符中的任意一个 如：ls test[a-z]\n\'\'\t#被单引号用括住的内容,将被视为单一字串。在引号内的代表变数的$符号,没有作用。\n""\t#被双引号用括住的内容,将被视为单一字串。它防止通配符扩展,但允许变量扩展。\n``\t#在倒引号内的 date +%F 会被视为指令,执行的结果会带入 fdv 变数中。fdv=`date +%F`echo \\"Today $fdv\\"\n{}\t#大括号。\n```\n<br/>\n\n### 通配符扩展\n``` bash\n# 创建目录userA-home、userA-bin、userB-home、userB-bin\nmkdir {userA,userB}-{home,bin}\n```\n<br/>\n\n### 参数扩展\n``` bash\n#!/bin/bash\n${name:-default}\t#使用一个默认值(一般是空值)来代替那些空的或者没有赋值的变量name;\n${name:=default}\t#使用指定值来代替空的或者没有赋值的变量name;\n${name:?message}\t#如果变量为空或者未赋值,那么就会显示出错误信息并中止脚本的执行同时返回退出码1\n${#name}\t\t\t#给出name的长度\n${name%word}\t\t#从name的尾部开始删除与word匹配的最小部分,然后返回剩余部分\n${name%%word}\t\t#从name的尾部开始删除与word匹配的最长部分,然后返回剩余部分\n${name#word}\t\t#从name的头部开始删除与word匹配的最小部分,然后返回剩余部分\n${name##word}\t\t#从name的头部开始删除与word匹配的最长部分,然后返回剩余部分\n\n# 注: name为变量名,word为要匹配的字符串!\n```\n\n<br/><br/>'},"520b":function(n,e){n.exports="## 引入\n```php\nuse Library\\Upload;\n```\n\n## 单文件\n```php\nUpload::File([\n  'upName'=>'up',  //上传名称\n  'path'=>'upload/',  //上传目录\n  'filename'=>'', //文件名\n  'bind'=>['jpg','jpeg','png','gif','mov','mp4','wav','mp3'], //允许格式\n]);\n```\n\n## Base64\n```php\nUpload::Base64([\n  'path'=>'upload/',  //上传目录\n  'base64'=>'',  //文件内容\n  'filename'=>'', //文件名\n  'ext'=>'png', //后缀\n]);\n```\n\n## OSS-签名直传\n```php\nUpload::OssPolicy(\n  string $ext,        //扩展名\n  int $expireTime=0   //有效时间(秒)\n);\n```\n- ext: \"jpg\", \"png\", \"gif\"\n- expireTime: 0 默认30秒\n\n## OSS-签名验证\n```php\nUpload::OssPolicyVerify(\n  array $param,   //回调参数\n);\n```\n\n## 图片回收\n```php\nUpload::HtmlImgClear(string $html, string $dir);\n```\n\n## 文件名-生成\n```php\nUpload::GetFileName();\n```\n\n## 图片地址-获取HTML\n```php\nUpload::GetHtmlFile(string $html);\n```\n"},"52de":function(n,e){n.exports="## 引入\n```javascript\nimport wmScrollView from '@/components/scroll-view/index.vue'\n```\n\n## 页面容器\n```html\n<wm-scroll-view>\n  内容\n</wm-scroll-view>\n```\n- probeType: {type: Number, default: 3},                                  //派发Scroll事件: 0不派发、1间隔(手指)、2一直派发(手指)、3全部派发\n- scrollX: {type: Boolean, default: false},                               //滚动-横向\n- scrollY: {type: Boolean, default: true},                                //滚动-纵向\n- startX: {type: Number, default: 0},                                     //初始化位置-横轴\n- startY: {type: Number, default: 0},                                     //初始化位置-纵轴\n- loading: {type: Number, default: 48},                                   //Loading高度\n- loadingTheme: {type: String, default: 'flow'},                          //Loading样式: flow、swing、circle、wave\n- loadingColor: {type: String, default: Env.themes.primary},              //Loading颜色\n- upper: {type: Number, default: 64},                                     //顶部距离\n- lower: {type: Number, default: 80},                                     //底部距离\n- upperText: {type: String, default: '已刷新'},                           //刷新文本\n- lowerText: {type: String, default: '正在加载'},                         //加载文本\n- upperColor: {type: String, default: Env.themes.text2},                  //刷新颜色\n- lowerColor: {type: String, default: Env.themes.text2},                  //加载颜色\n- isUpper: {type: Boolean, default: true},                                //是否下拉\n- isLower: {type: Boolean, default: true},                                //是否上拉\n- scrollbar: {type: Object, default: {fade: false, interactive: true}},   //滚动条\n- preventDefault: {type: Boolean, default: true},                         //允许浏览器复制\n- @down   //事件: 下拉\n- @up     //事件: 上拉\n- @scroll //事件: 滚动\n\n"},"568f":function(n,e){n.exports="## 引入\n```javascript\nimport wmMain from '@/components/main/index.vue'\nimport wmRow from '@/components/main/row/index.vue'\n```\n\n## 内容\n```html\n<wm-main></wm-main>\n```\n- padding: {type: Number, default: 16}, //边距\n\n## 单行\n```html\n<wm-row></wm-row>\n```\n- lineHeight: {type: String, default: '40px'},  //高\n- fontSize: {type: String, default: '14px'},    //字体大小\n\n"},"585f":function(n,e){n.exports='# Go开发环境\n\n## ArchLinux\n#### 1) 安装Git\n```bash\npacman -S git\n```\n\n#### 2) 安装Go\n```bash\nsudo pacman -S go\n# 查看\ngo version\n```\n\n#### 3) 国内镜像\n```bash\nexport GO111MODULE=on\nexport GOPROXY=https://goproxy.cn\n\ngo env -w GOPROXY=https://goproxy.cn\n```\n\n#### 4) 热启动\n```bash\n# golang.org/x 超时问题\nmkdir -p $GOPATH/src/golang.org/x\ncd $GOPATH/src/golang.org/x\ngit clone https://github.com/golang/net.git\ngit clone https://github.com/golang/sys.git\ngit clone https://github.com/golang/text.git\ngit clone https://github.com/golang/tools.git\n# 工具\ngo get github.com/pilu/fresh\n# 链接\nln -s $GOPATH/bin/fresh /usr/bin/\n# 运行\nfresh\n```\n\n## Windows\n#### 1) 安装Git\n- 下载: [Git](https://git-scm.com/download/win)\n- 安装: 64位版 > 重启系统\n- VsCode: "ctrl+`" > "终端" > "powershell" > "选择默认 shell" > "Git Bash" > 重启\n- 终端输入: "cmd" 和 "bash" 可相互切换\n\n#### 2) 安装Go\n- 下载: [go.windows-amd64.msi](https://golang.google.cn/dl/)\n- 解压: "go1.15.8.windows-amd64.msi" 到 "D:\\server\\go"\n- 搜索: "环境变量" > "新建" > 变量名: "GOROOT" 变量值: "D:\\server\\go"\n- 搜索: "环境变量" > "Path" > "添加" > "%GOROOT%\\bin"\n- CMD: "go version"\n\n<br/>\n\n## MacOS\n#### 1) 安装Git\n```bash\ngit\n```\n\n#### 2) 安装Go\n- 下载: [go.darwin-amd64.pkg](https://golang.google.cn/dl/)\n\n<br/><br/>'},5939:function(n,e){n.exports='### 插入\n```java\nimport webmis.model.Demo;\n// 对象\nDemo demo = new Demo();\n// 数据\nHashMap<String,Object> data = new HashMap<String,Object>();\ndata.put("uid", 0);\ndata.put("title", "Java-添加");\ndemo.Values(data);\n// 执行\ndemo.Insert();\n```\n\n### 生成SQL\n```java\n// sql、args\nObject[] sql = db.InsertSQL()\n```'},5956:function(n,e){n.exports="## 引入\n```javascript\nimport wmTable from '@/components/table/index.vue'\nimport wmTableTitle from '@/components/table/title/index.vue'\nimport wmTableTr from '@/components/table/tr/index.vue'\n```\n\n## 表格\n```html\n<wm-table></wm-table>\n```\n- data: {type:Array, default:[]}, //数据: [{id:val},{id:val}]\n\n## 标题\n```html\n<wm-table-title></wm-table-title>\n```\n- checkbox: {type: Boolean, default: true}, //多选\n- checked: {type: Boolean, default: false}, //全选&不选\n\n## Tr行\n```html\n<wm-table-tr></wm-table-tr>\n```\n- checkbox: {type: Boolean, default: true}, //多选\n- value: {default:''},                      //checkbox[value]\n"},"5a05":function(n,e){n.exports='## 引入\n```go\nimport "webmis/library"\n```\n\n## 生成\n```go\n(&library.Qrcode{}).Create(map[string]interface{}{\n  "text": "",  //内容\n\t"size": 200, //大小\n})\n```\n\n## 识别\n```go\n(&library.Qrcode{}).Scan("public/upload/qrcode/demo.png")\n```'},"5a15":function(n,e){n.exports="## 安装MariaDB\n```bash\n# 下载\ndocker pull mariadb\n# MariaDB服务器(1主、2从)\ndocker run -d -p 9091:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mariadb1 mariadb:latest\ndocker run -d -p 9092:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mariadb2 mariadb:latest\ndocker run -d -p 9093:3306 -e MYSQL_ROOT_PASSWORD=123456 --name mariadb3 mariadb:latest\n# 进入容器\ndocker exec -it mariadb1 /bin/bash\n# 安装编辑器\napt update\napt install vim\n```\n\n## 主从同步\n#### 主节点配置( vi /etc/mysql/mariadb.conf.d/50-server.cnf )\n```bash\n[mysqld]\nserver_id=1                 #全局唯一ID\nlog-bin=bin-log             #开启二进制日志\nlog-bin-index=bin-log.index #日志索引位置\nexpire_logs_days=30         #保留时间(天)\nbinlog-format=ROW           #日志格式\nbinlog-row-image=minimal    #日志级别\n# 崩溃时信息记录到事务表\nmaster-info-repository=TABLE\nrelay-log-info-repository=TABLE\n# 排除不需要复制的库\nbinlog-ignore-db=mysql \nbinlog-ignore-db=information_schema\nbinlog-ignore-db=performance_schema\n```\n#### 从节点配置( vi /etc/mysql/mariadb.conf.d/50-server.cnf )\n```bash\n[mysqld]\nserver_id=2                 #全局唯一ID\nlog-bin=bin-log             #开启二进制日志\nlog-bin-index=bin-log.index #日志索引位置\nexpire_logs_days=30         #保留时间(天)\n# 启用中继日志\nrelay-log=relay-log\nrelay-log-index=relay-log.index\nread-only=ON\n# 排除不需要复制的库\nbinlog-ignore-db=mysql \nbinlog-ignore-db=information_schema\nbinlog-ignore-db=performance_schema\n```\n#### 重启服务\n```bash\ndocker restart mariadb1\ndocker restart mariadb2\ndocker restart mariadb3\n```\n\n<br/>\n\n#### 主节点-创建账号\n```bash\n# 登录\nmysql -uroot -p123456 -h127.0.0.1 -P9091\n# 创建监控用户\nCREATE USER 'monitor'@'%' IDENTIFIED BY '123456';\nGRANT REPLICATION SLAVE, REPLICATION SLAVE ADMIN,REPLICATION MASTER ADMIN, REPLICATION SLAVE ADMIN,BINLOG MONITOR, SUPER, RELOAD on *.* to 'monitor'@'%';\n# 创建路由账号\nCREATE USER 'maxscale'@'%' IDENTIFIED BY '123456';\nGRANT ALL on *.* to 'maxscale'@'%';\n# 刷新\nflush privileges;\n# 查看状态\nshow master status;\n```\n#### 从节点-配置指向\n```bash\n# 登录\nmysql -uroot -p123456 -h127.0.0.1 -P9092\nmysql -uroot -p123456 -h127.0.0.1 -P9093\n# 查看IP\ndocker inspect --format='{{.NetworkSettings.IPAddress}}' mariadb1\n# 指向主节点\nCHANGE MASTER TO MASTER_HOST='172.17.0.2', MASTER_PORT=3306, MASTER_USER='monitor', MASTER_PASSWORD='123456', MASTER_USE_GTID=current_pos;\n# 启动从状态\nSTART SLAVE;\n# 查看状态\nSHOW SLAVE STATUS\\G;\n```\n\n<br/>\n\n## 安装MaxScale\nhttps://mariadb.com/downloads/#mariadb_platform-mariadb_maxscale\n```bash\n# 容器( 172.17.0.5 )\ndocker run -it -p 8989:8989 --name maxscale ubuntu\n# 查看系统\ncat /etc/issue\n# 下载文件\ncd /home\nwget https://dlm.mariadb.com/1665026/maxscale/2.5.11/packages/ubuntu/focal/x86_64/maxscale-2.5.11-1.ubuntu.focal.x86_64.deb\n# 安装依赖\napt install libxml2 libcurl4 libsasl2-2\napt --fix-broken install\n# 安装\ndpkg -i maxscale-2.5.11-1.ubuntu.focal.x86_64.deb\n# 查看版本\nmaxscale -v\n```\n\n<br/>\n\n#### 加密\n```bash\n# 创建密钥文件\nmaxkeys\n# 创建加密密码\nmaxpasswd 123456\n```\n- 7683C19526E17B4FA3C72EBE49E2344FE77A9347C83DCA58DCEC808C1C63F168\n\n<br/>\n\n#### 配置( vi /etc/maxscale.cnf )\n```bash\n[maxscale]\nthreads=auto\nadmin_secure_gui=false\n# 数据库1\n[server1]\ntype=server\naddress=172.17.0.2\nport=3306\nprotocol=MariaDBBackend\n# 数据库2\n[server2]\ntype=server\naddress=172.17.0.3\nport=3306\nprotocol=MariaDBBackend\n# 数据库3\n[server3]\ntype=server\naddress=172.17.0.4\nport=3306\nprotocol=MariaDBBackend\n# 故障转移监控模板\n[MariaDB-Monitor]\ntype=monitor\nmodule=mariadbmon\nservers=server1,server2,server3\nuser=monitor\npassword=7683C19526E17B4FA3C72EBE49E2344FE77A9347C83DCA58DCEC808C1C63F168\nmonitor_interval=2000\nauto_failover=true  #自动故障转移\nauto_rejoin=true    #自动重新加入\n# 只读模块\n# [Read-Only-Service]\n# type=service\n# router=readconnroute\n# servers=server1,server2,server3\n# user=maxscale\n# password=123456\n# router_options=slave\n# 读写模块\n[Read-Write-Service]\ntype=service\nrouter=readwritesplit\nservers=server1,server2,server3\nuser=maxscale\npassword=7683C19526E17B4FA3C72EBE49E2344FE77A9347C83DCA58DCEC808C1C63F168\n# [Read-Only-Listener]\n# type=listener\n# service=Read-Only-Service\n# protocol=MariaDBClient\n# port=4008\n```\n\n<br/>\n\n#### 服务\n```bash\n# 启动\nservice maxscale start\n# 日志\ncat /var/log/maxscale/maxscale.log\n# 查看状态\nmaxctrl list services\nmaxctrl list servers\nmaxctrl list listeners Read-Write-Service\n# 连接\nmysql -umaxscale -p123456 -h172.17.0.5 -P4006\n# 测试\ncreate databaese data_test;\n```\n\n<br/>\n\n"},"5d2d":function(n,e){n.exports="## 路由\n```go\nrouter(uid string, conn *websocket.Conn, message []byte)\n```\n\n## 群发\n```go\nsendAll(data map[string]interface{})\n```\n\n## 单发\n```go\nsend(conn *websocket.Conn, data map[string]interface{})\n```\n"},"5f03":function(n,e,t){"use strict";var a="",o="";o="dev"==a?"http://localhost:9000":"https://demo-php.webmis.vip/",e["a"]={title:"WebMIS 全栈开发基础框架",version:"1.0.0",baseUrl:o,apiUrl:o,copy:"Copyright © webmis.vip 2022",themes:{primary:{plain:["#595","#C2E7B0","#F0F9EB"],dark:["#FFF","#595","#595"]},info:{plain:["#909399","#E9E9EB","#F4F5F5"],dark:["#FFF","#909399","#909399"]},success:{plain:["#67C23A","#E1F3D8","#F0F9EB"],dark:["#FFF","#67C23A","#67C23A"]},warning:{plain:["#E6A23C","#FAECD8","#FDF6EC"],dark:["#FFF","#E6A23C","#E6A23C"]},danger:{plain:["#F56C6C","#FDE2E2","#FEF0F0"],dark:["#FFF","#F56C6C","#F56C6C"]},border:{plain:["#DCDFE6","#C0C4CC","#EBEEF5","#F2F6FC"],dark:["#FFF","#CCC","#999","#666"]},text:{plain:["#282828","#606266","#909399","#C0C4CC"],dark:["#FFF","#CCC","#999","#666"]}},request:{headers:{"Content-Type":"application/json;charset=utf-8"},responseType:"json",timeout:1e4},msg:{content:"content",browser:!1}}},"5f3b":function(n,e){n.exports='## 引入\n```go\nimport "webmis/library"\n```\n\n## 正则-公共\n```go\n(&library.Safety{}).IsRight(\n  name string,  //uname,passwd,tel,email,idcard\n  val string    //内容\n)\n```\n\n## 正则-验证\n```go\n(&library.Safety{}).Test(\n  reg string,   //正则: "^1\\d{10}$"\n  val string    //内容\n)\n```\n\n## Base64-加密\n```go\n(&library.Safety{}).Encode(\n  param map[string]interface{}  //数据\n)\n```\n\n## Base64-解密\n```go\n(&library.Safety{}).Decode(\n  token string  //Token\n)\n```\n'},"5f76":function(n,e){n.exports="## 引入\n```javascript\nimport PriceFormat from '@/library/price/format'\nimport PricePercentage from '@/library/price/percentage'\nimport PriceToFixed from '@/library/price/to-fixed'\n```\n\n## 金额-格式化\n```typescript\nPriceFormat.encode(\n  price: string,    // 例如: 3600.01\n  fixed: number=2   // 默认保留小数点后2位\n);\nPriceFormat.decode(\n  price: string,    // 例如: 3,600.01\n  fixed: number=2   // 默认保留小数点后2位\n);\n```\n\n## 比较增长(百分比)\n```typescript\nPricePercentage(n1: number, n2: number);\n```\n\n## 不四舍五入\n```typescript\nPriceToFixed(price: number, num: number);\n```\n"},"60ac":function(n,e){n.exports='### 更新\n```go\nimport "webmis/model"\n// 对象\ndemo := (&model.Demo{}).New()\ndemo.Set(map[string]interface{}{\n  "title": "Go-更新",\n})\ndemo.Where("uid=?", id)\nnum := demo.Update()\nself.Print(num)\n```\n\n### 生成SQL\n```go\nsql,args := db.UpdateSQL()\n```'},6233:function(n,e){n.exports="## 引入\n```javascript\nimport wmTag from '@/components/tag/index.vue'\n```\n\n## 标签\n```html\n<wm-tag></wm-tag>\n```\n- type: {type: String, default: 'primary'},   //类型: primary、info、warning、danger\n- effect: {type: String, default: 'plain'},   //样式: plain、dark\n- height: {type: String, default: '30px'},    //高度\n- padding: {type: String, default: '0 8px'},  //间距\n- fontSize: {type: String, default: '14px'},  //字体大小"},"634c":function(n,e){n.exports="# WebMIS-Python\n采用Python3+Flask开发，包括HMVC模块化管理、Token验证、Redis缓存等\n- 网站-API( [https://demo-python.webmis.vip/](https://demo-python.webmis.vip/) )\n- 前端-API( [https://demo-python.webmis.vip/api/](https://demo-python.webmis.vip/api/index) )\n- 后台-API( [https://demo-python.webmis.vip/admin/](https://demo-python.webmis.vip/admin/index) )\n\n<br/>\n\n## 一、下载\n```bash\ngit clone https://github.com/webmiss/base.git --depth=1\n```\n- WebMIS-Base > python\n- 网站根目录: public下创建upload目录，修改权限为777\n- 数据库: project/database/data.sql\n- 修改密码: user表password字段，md5加密即可\n- 管理员账号: admin 密码:123456\n\n<br/>\n\n## 二、运行\n#### Bash命令\n```bash\n# 依赖包\n./bash install\n# 运行\n./bash serve\n```\n\n#### Cmd命令\n```bash\n# 依赖包\n.\\cmd install\n# 运行\n.\\cmd serve\n```\n\n<br/><br/>"},6703:function(n,e){n.exports="## 引入\n```java\nimport webmis.service.Logs;\n```\n\n## 访问日志\n```java\nLogs.Log(Object data);\n```\n\n## 信息日志\n```java\nLogs.Info(Object data);\n```\n\n## 操作日志\n```java\nLogs.Action(Object data);\n```\n\n## 错误日志\n```java\nLogs.Error(Object data);\n```\n\n## 其它\n```java\nLogs.Writer(String text);\n```\n"},6851:function(n,e){n.exports='## Project\n#### 模板( AdobeXD )\n- project/设计图/APP.xd\n- project/设计图/Screen.xd\n\n#### 使用技巧\n- 推荐“AdobeXD”设计APP，图标制作成矢量，便于导出 SVG 格式\n- 安装 Adobe Flutter 插件，复制 SVG 内容到 “lib/library/ui/ui-icons.dart” 方便使用\n- 在“APP.xd”设计图标和启动画面，复制到“Screen.xd”缩放成各种尺寸，Ctrl+e选择目录，覆盖对应文件\n<br/><br/>\n\n## Android\n#### 1) 证书\n```bash\n# 存放目录\ncd android/app/\n\n# 生成签名文件(jks)\nkeytool -genkey -v -keystore key.jks -alias key -keyalg RSA -keysize 2048 -validity 20000\n\n# 查看签名(sha1)\nkeytool -v -list -keystore key.jks\n\n# keystore转jks\nkeytool -importkeystore -srckeystore XXX.keystore  -srcstoretype JKS -deststoretype PKCS12 -destkeystore key.p12\nkeytool -v -importkeystore -srckeystore key.p12  -srcstoretype PKCS12 -destkeystore key.jks -deststoretype JKS\nkeytool -importkeystore -srckeystore key.jks -destkeystore key.jks -deststoretype pkcs12\n```\n**配置打包**( android/key.properties )\n```bash\nstorePassword=123456\nkeyPassword=123456\nkeyAlias=key\nstoreFile=key.jks\n```\n\n#### 2) 打包\n```bash\nflutter build apk\n```\n\n<br/>\n\n## IOS\n#### 1) 相关文档\n- 系统: [安装&配置](/docs/linux/archlinux/macos)\n- 证书: [VueAPP > 打包&发布 > iOS](/docs/vue/install/build)\n\n\n#### 2) 打包&上架\n- 编译: flutter build ios --release\n- Xcode打开: flutter > ios > Runner.xcworkspace\n- Profile: Signings & Capabilities > 填写BundleID和选择证书Profile文件\n- 证书: Build Signings > Code Signing > Release > 选择"开发或生产"\n- 测试IPA: Product > Archive > Ad Hoc > Export( 导出ipa文件 )\n- 提交上架: Product > Archive > iOS App Store > Upload( 提交到AppStore )\n- 切换账户: Xcode > Preferences > Accounts\n\n\n#### MinimumOSVersion问题\n- flutter clean\n- flutter build ios --release\n- Xcode > Runner > Flutter > AppFrameworkInfo.plist ( MinimumOSVersion: 10.0 )\n- Xcode > Runner > Runner > Info.plist  ( MinimumOSVersion: 10.0 )\n- Xcode > Runner > info > Deployment Target > ( 10.0 )\n\n\n#### UniversalLink( 通用链接 )\n**https://webmis.vip/.well-known/apple-app-site-association**\n```json\n{\n  "applinks": {\n    "apps": [],\n    "details": [\n      {\n        "appID": "ABCDE12345(团队ID).com.example.app(包名)",\n        "paths": ["/app/*"]\n      }\n    ]\n  }\n}\n```\n**xcode > Capabilities > Associated Domains**\n```text\napplinks:webmis.vip\napplinks:www.webmis.vip\n```\n- 从这里填入的域名请求文件 apple-app-site-association\n- 测试: 发短信 "https://webmis.vip/app/" > 点击打开APP > 成功'},"6b59":function(n,e){n.exports='### 连表\n```java\nimport webmis.model.Demo;\n// 对象\nDemo demo = new Demo();\ndemo.Table("test1 as a");\ndemo.LeftJoin("test2 as b", "a.id=b.uid");\ndemo.Columns("a.title", "b.name");\nString sql = demo.SelectSQL();\nPrint(sql);\n```\n\n### 其他\n```java\n// INNER JOIN \ndemo.Join()\n// LEFT JOIN\ndemo.LeftJoin()\n// RIGHT JOIN\ndemo.RightJoin()\n// FULL JOIN\ndemo.FullJoin()\n```'},"6bf1":function(n,e){n.exports="## 引入\n```javascript\nimport wmForm from '@/components/form/index.vue'\nimport wmFormTitle from '@/components/form/title/index.vue'\nimport wmFormItem from '@/components/form/item/index.vue'\nimport wmButton from '@/components/form/button/index.vue'\nimport wmCheckbox from '@/components/form/checkbox/index.vue'\nimport wmInput from '@/components/form/input/index.vue'\nimport wmRadio from '@/components/form/radio/index.vue'\n```\n\n## 表单\n```html\n<wm-form></wm-form>\n```\n- labelWidth: {type: String, default: '90px'},\n- labelHeight: {type: String, default: '40px'},\n\n## 表单-标题\n```html\n<wm-form-title></wm-form-title>\n```\n- fontSize: {type: String, default: '15px'},\n\n## 表单-行\n```html\n<wm-form-item></wm-form-item>\n```\n- type: {type: String, default: 'label'},\n- label: {type: String, default: ''},\n\n## 按钮\n```html\n<wm-button></wm-button>\n```\n- type: {type: String, default: 'primary'},   //类型: primary、info、warning、danger\n- effect: {type: String, default: 'dark'},    //样式: plain、dark\n- height: {type: String, default: '40px'},    //高度\n- padding: {type: String, default: '0 24px'}, //间距\n- fontSize: {type: String, default: '14px'},  //字体大小\n- disabled: {type: Boolean, default: false},  //是否禁用\n\n## 多选\n```html\n<wm-checkbox></wm-checkbox>\n```\n- value: {default: ''},                       //checkbox[value]\n- label: {type: String, default: ''},         //名称\n- checked: {type: Boolean, default: false},   //是否选中\n- disclick: {type: Boolean, default: false},  //禁用Click\n- @update:checked                             //事件\n\n## 单选\n```html\n<wm-radio></wm-radio>\n```\n- data: {type: Array, default: []}, //数据: [{label:'男',value:'男'},{label:'女',value:'女'}]\n- value: {default: ''},             //默认值: val\n- @update:value                     //事件\n\n## 输入框\n```html\n<wm-input></wm-input>\n```\n- value: {default: ''},                           //值\n- type: {type: String, default: 'text'},          //类型: input属性\n- maxlength: {type: String, default: ''},         //最大字符: 默认\n- placeholder: {type: String, default: ''},       //提示: 无\n- width: {type: String, default: '100%'},         //宽度: '100%'\n- maxWidth: {type: String, default: 'auto'},      //宽度: '100%'\n- height: {type: String, default: '40px'},        //高度: '40px'\n- lineHeight: {type: String, default: '20px'},    //行高: '20px'\n- padding: {type: String, default: '10px 16px'},  //间距: '10px 16px'\n- align: {type: String, default: ''},             //文本对齐方式: 'left'\n- @update:value //事件\n"},"71f4":function(n,e){n.exports="## 引入\n```javascript\nimport wmAction from '@/components/action/index.vue'\n```\n\n## 动作菜单\n```html\n<wm-action></wm-action>\n```\n- menus: [{name: \"新建文件夹\", action: \"mkdir\", perm: 2}]\n\n## 事件\n```javascript\n  computed: {\n    // 动作菜单-监听\n    actionType(){\n      const active: any = this.state.action.active;\n      return active;\n    }\n  },\n  watch:{\n    // 动作菜单-点击\n    actionType(val){\n      if(!val) return false;\n      console.log(val);\n    }\n  },\n```\n\n## 图标\n```javascript\nimport wmAdd from '@/components/action/add/index.vue'\nimport wmSubtract from '@/components/action/subtract/index.vue'\nimport wmClose from '@/components/action/close/index.vue'\n```\n\n## Html\n```html\n<wm-add />\n<wm-subtract />\n<wm-close />\n```\n- size: {type: String, default: '11px'},        //大小\n- bgColor: {type: String, default: '#6FB737'},  //背景颜色\n\n\n\n\n\n\n"},"74bd":function(n,e){n.exports="# WebMIS-前端基础框架\n采用 Vue3 + TypeScript 开发，包括Web(网站)、VueApp(H5+混合型APP)、Api(接口调试工具)、Admin(后台管理)，运用模块化开发思路，封装基础UI组件\n- Web(文档)：[https://webmis.vip](https://webmis.vip)\n- App(H5+混合型APP)：[https://demo-app.webmis.vip](https://demo-app.webmis.vip)\n- Api(接口工具)：[https://demo-api.webmis.vip](https://demo-api.webmis.vip)\n- Admin(后台管理)：[https://demo-admin.webmis.vip](https://demo-admin.webmis.vip)\n\n<br/>\n\n## 一、下载\n```bash\ngit clone https://github.com/webmiss/base.git --depth=1\n```\n\n<br/>\n\n## 二、运行\n#### Bash命令\n```bash\n# 依赖包\n./bash install\n# 运行\n./bash serve\n# 打包\n./bash build\n```\n\n#### Cmd命令\n```bash\n# 依赖包\n.\\cmd install\n# 运行\n.\\cmd serve\n# 打包\n.\\cmd build\n```\n\n<br/><br/>"},7562:function(n,e){n.exports="### 创建模型\n**model/Demo.php**\n```php\n<?php\nnamespace Model;\n\nclass Demo extends Model {\n\n  /* 构造函数 */\n  function __construct(){\n    $this->Table('test');\n  }\n\n}\n```\n\n### 使用\n```php\nuse Model\\Demo;\n// 对象\n$model = new Demo();\n```\n\n### 查询\n```php\n$model->Query($conn, string $sql, array $args=[]);\n```\n\n### 执行\n```php\n$model->Exec($conn, string $sql, array $args=[]);\n```\n"},"75b6":function(n,e){n.exports="# 服务器环境\n\n## JRE\n```bash\n# CentOS\ndnf install java-latest-openjdk -y\n# Ubuntu\napt install openjdk-17-jre -y\n# 查看版本\njava --version\n```\n\n## 运行\n```bash\n# 进入项目\ncd /xxx/java\nmkdir public/upload\nchmod -R 777 public/upload\n# 启动\n./bash start\n```\n\n## 开机启动\n```bash\n# 权限\nchmod +x /etc/rc.d/rc.local\n# 编辑文件\nvi /etc/rc.d/rc.local\n```\n- cd /xxx/java/ && ./bash start\n\n<br/>\n\n## Nginx\n``` nginx\nupstream demo_java {\n    server localhost:9020;\n}\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    '' close;\n}\n\nserver {\n    listen       80;\n    listen       [::]:80;\n    server_name  demo-java.webmis.vip;\n    set $root_path /home/www/base/java/public;\n    root $root_path;\n    index index.html;\n\n    charset utf-8;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_pass http://demo_java;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n    }\n\n    location ~* ^/(upload|favicon.png)/(.+)$ {\n        root $root_path;\n    }\n\n}\n```\n\n## SSL证书\n```bash\ncertbot --nginx\n```\n\n<br/><br/>"},"76ff":function(n,e){n.exports='## 引入\n```go\nimport "webmis/library"\n```\n\n## 单文件\n```go\n(&library.Upload{}).File(\n  c *gin.Context,\n  file *multipart.FileHeader,\n  map[string]interface{}{\n    "path":     "upload/",      //上传目录\n    "filename": "",             //文件名\n    "bind":     []string{},     //后缀\n  },\n)\n```\n- bind: "svg", "jpg", "jpeg", "png", "gif", "mov", "mp4", "wav", "mp3"\n\n## Base64\n```go\n(&library.Upload{}).Base64(map[string]interface{}{\n  "param":    "upload/", //上传目录\n  "base64":   "",        //文件内容\n  "filename": "",        //文件名\n  "ext":      "png",     //后缀\n})\n```\n\n## OSS-签名直传\n```go\n(&library.Upload{}).OssPolicy(\n  ext string,         //扩展名\n  expireTime int64,   //有效时间(秒)\n)\n```\n- ext: "jpg", "png", "gif"\n- expireTime: 0 默认30秒\n\n## OSS-签名验证\n```go\n(&library.Upload{}).OssPolicyVerify(\n  param map[string]interface{},  //回调参数\n)\n```\n\n## 图片回收\n```go\n(&library.Upload{}).HtmlImgClear(html string, dir string)\n```\n\n## 文件名-生成\n```go\n(&library.Upload{}).GetFileName()\n```\n\n## 图片地址-获取HTML\n```go\n(&library.Upload{}).GetHtmlFile(html string)\n```\n'},"77aa":function(n,e){n.exports="## 引入\n```javascript\nimport wmPageView from '@/components/page-view/index.vue'\n```\n\n## 页面容器\n```html\n<wm-page-view>\n  <template #left>Left</template>\n  <template #title>Title</template>\n  <template #right>Right</template>\n  <template #body>内容</template>\n</wm-page-view>\n```\n- immersed: {type: Boolean, default: false},                //沉浸式\n- header: {type: Boolean, default: true},                   //隐藏头部\n- color: {type: String, default: Env.statusBar.color},      //文本颜色\n- bgColor: {type: String, default: Env.statusBar.bgColor},  //背景颜色\n\n"},"7aae":function(n,e){n.exports="## 服务器\n```bash\n# 运行\n./bash socket\n# 启动\n./bash socketStart\n```\n\n## 群发\n```php\nuse Library\\Socket;\n\nSocket::Send('admin', [\n  'code'=> 0,\n  'type'=> 'msg',\n  'data'=> [\n    'title'=> '测试',\n    'content'=> '测试内容',\n  ],\n]);\n```\n"},"7afd":function(n,e){n.exports='## 引入\n```javascript\nimport wmTree from \'@/components/tree/index.vue\'\n```\n\n## 树形控件\n```html\n<wm-tree></wm-tree>\n```\n- data: {default: []}, //数据:  [{id: "1", label: "测试接口", checked: true, show: true, action: true, children: []}]\n\n'},"7ba1":function(n,e){n.exports="## 引入\n```python\nfrom service.base import Base\n```\n\n## 返回JSON\n```python\nBase().GetJSON(data='')\n```\n\n## Get参数\n```python\nBase().Get(name: str)\n```\n\n## Post参数\n```python\nBase().Post(name: str)\n```\n\n## 输出到控制台\n```python\nBase().Print(*content)\n```\n\n## 异常错误\n```python\nBase().Error(msg: str ='')\n```\n"},"7c0b":function(n,e){n.exports="## 引入\n```javascript\nimport Base64Encode from '@/library/base64/encode'\nimport Base64Decode from '@/library/base64/decode'\nimport Base64ExtType from '@/library/base64/ext-type'\n```\n\n## 编码\n```typescript\nBase64Encode(data: string);\n```\n\n## 解码\n```typescript\nBase64Decode(base64: string);\n```\n\n## 类型\n```typescript\nBase64ExtType(ext: string);\n```\n\n"},"7cc8":function(n,e){n.exports="## 引入\n```php\nuse Util\\Base64;\n```\n\n## 编码\n```php\nBase64::Encode(string $data);\n```\n\n## 解码\n```php\nBase64::Decode(string $data);\n```\n\n## 编码(URL)\n```php\nBase64::UrlEncode(string $data);\n```\n\n## 解码(URL)\n```php\nBase64::UrlDecode(string $data);\n```\n\n## 压缩\n```php\nBase64::Compress(string $data);\n```\n\n## 解压\n```php\nBase64::UnCompress(string $data);\n```\n"},"7d6f":function(n,e){n.exports="## 引入\n```php\nuse Library\\Qrcode;\n```\n\n## 生成\n```php\nQrcode::create([\n  'text'=> '',  //内容\n  'type'=>'qr',  //类型: upc-a、code-39、qr、dmtx等\n  'tmpPath'=>'upload/tmp/', //缓存目录\n  'filename'=>self::_getName().'.png', //文件名\n  'options'=>['f'=>'png','p'=>-20,'w'=>200,'h'=>200], //配置\n]);\n```\n\n## 识别\n```php\nQrcode::scan($file);\n```"},"81bd":function(n,e){n.exports="## 引入\n```javascript\nimport wmSwitch from '@/components/switch/index.vue'\n```\n\n## 开关\n```html\n<wm-switch></wm-switch>\n```\n- value: {type: Boolean, default: false},             //值\n- activeColor: {type: String, default: '#6FB737'},    //打开颜色\n- inactiveColor: {type: String, default: '#DCDFE6'},  //关闭颜色\n- @update:value                                       //事件\n\n"},"828a":function(n,e,t){var a={"./docs/flutter/install/build.md":"6851","./docs/flutter/install/index.md":"c9c0","./docs/flutter/install/install.md":"c718","./docs/gin/db/commit.md":"1ebd","./docs/gin/db/delete.md":"4958","./docs/gin/db/insert.md":"a0ff","./docs/gin/db/join.md":"b18e","./docs/gin/db/model.md":"d4a4","./docs/gin/db/select.md":"8b99","./docs/gin/db/update.md":"60ac","./docs/gin/install/build.md":"991a","./docs/gin/install/index.md":"e307","./docs/gin/install/install.md":"585f","./docs/gin/library/kafka.md":"bfd9","./docs/gin/library/qrcode.md":"5a05","./docs/gin/library/redis.md":"44c6","./docs/gin/library/safety.md":"5f3b","./docs/gin/library/socket.md":"0e24","./docs/gin/library/upload.md":"76ff","./docs/gin/service/base.md":"300b","./docs/gin/service/data.md":"37d3","./docs/gin/service/logs.md":"d4f6","./docs/gin/service/socket.md":"5d2d","./docs/gin/service/token.md":"d542","./docs/gin/util/base64.md":"208f","./docs/gin/util/hash.md":"feee","./docs/gin/util/os.md":"a59d","./docs/gin/util/type.md":"bfc8","./docs/gin/util/url.md":"2d9a","./docs/gin/util/util.md":"9494","./docs/java/db/commit.md":"dac2","./docs/java/db/delete.md":"1992","./docs/java/db/insert.md":"5939","./docs/java/db/join.md":"6b59","./docs/java/db/model.md":"fc20","./docs/java/db/select.md":"9ae3","./docs/java/db/update.md":"0245","./docs/java/install/build.md":"75b6","./docs/java/install/index.md":"350b","./docs/java/install/install.md":"a056","./docs/java/library/qrcode.md":"cd11","./docs/java/library/redis.md":"f2b0","./docs/java/library/safety.md":"b40e","./docs/java/library/socket.md":"a7c3","./docs/java/library/upload.md":"02ea","./docs/java/service/base.md":"086a","./docs/java/service/data.md":"eb2d","./docs/java/service/logs.md":"6703","./docs/java/service/socket.md":"a210","./docs/java/service/token.md":"c130","./docs/java/util/base64.md":"ca77","./docs/java/util/dynamic.md":"cb4b","./docs/java/util/hash.md":"005f","./docs/java/util/http.md":"b24d","./docs/java/util/os.md":"db48","./docs/java/util/type.md":"9c43","./docs/java/util/url.md":"c687","./docs/java/util/util.md":"020f","./docs/linux/archlinux/gnome.md":"e157","./docs/linux/archlinux/install.md":"8b29","./docs/linux/archlinux/lnmp.md":"206e","./docs/linux/centos/config.md":"d25b","./docs/linux/centos/lnmp.md":"2f2d","./docs/linux/shell/docker.md":"c2cc","./docs/linux/shell/elasticsearch.md":"2860","./docs/linux/shell/index.md":"51ab","./docs/linux/shell/macos.md":"983c","./docs/linux/shell/mariadb.md":"83d8","./docs/linux/shell/maxscale.md":"5a15","./docs/linux/shell/pulsar.md":"92d5","./docs/linux/shell/ssl.md":"8c93","./docs/linux/ubuntu/config.md":"92bb","./docs/linux/ubuntu/lnmp.md":"2a30","./docs/phalcon/db/commit.md":"cd8f","./docs/phalcon/db/delete.md":"1576","./docs/phalcon/db/insert.md":"08bf","./docs/phalcon/db/join.md":"dc14","./docs/phalcon/db/model.md":"7562","./docs/phalcon/db/select.md":"364b","./docs/phalcon/db/update.md":"bb50","./docs/phalcon/install/build.md":"b6c1","./docs/phalcon/install/index.md":"03d4","./docs/phalcon/install/install.md":"94f1","./docs/phalcon/library/qrcode.md":"7d6f","./docs/phalcon/library/redis.md":"515b","./docs/phalcon/library/safety.md":"99f5","./docs/phalcon/library/socket.md":"7aae","./docs/phalcon/library/upload.md":"520b","./docs/phalcon/service/base.md":"134e","./docs/phalcon/service/data.md":"11f0","./docs/phalcon/service/logs.md":"101c","./docs/phalcon/service/socket.md":"4d5c","./docs/phalcon/service/token.md":"8e19","./docs/phalcon/util/base64.md":"7cc8","./docs/phalcon/util/hash.md":"b4bc","./docs/phalcon/util/os.md":"89aa","./docs/phalcon/util/type.md":"4cd5","./docs/phalcon/util/url.md":"a63e","./docs/phalcon/util/util.md":"4cd56","./docs/python/db/commit.md":"4e02","./docs/python/db/delete.md":"f7a3","./docs/python/db/insert.md":"ec6b","./docs/python/db/join.md":"b6ff","./docs/python/db/model.md":"34c3","./docs/python/db/select.md":"006c","./docs/python/db/update.md":"07bf","./docs/python/install/build.md":"d553","./docs/python/install/index.md":"634c","./docs/python/install/install.md":"3a03","./docs/python/library/qrcode.md":"b386","./docs/python/library/redis.md":"e2b0","./docs/python/library/safety.md":"82d6","./docs/python/library/socket.md":"4872","./docs/python/library/upload.md":"2094","./docs/python/service/base.md":"7ba1","./docs/python/service/data.md":"0548","./docs/python/service/logs.md":"00de","./docs/python/service/socket.md":"16ec","./docs/python/service/token.md":"29cc","./docs/python/util/base64.md":"4021","./docs/python/util/hash.md":"c698","./docs/python/util/os.md":"b1c3","./docs/python/util/type.md":"0a10","./docs/python/util/url.md":"2e36","./docs/python/util/util.md":"00a0","./docs/vue/admin/action.md":"71f4","./docs/vue/admin/dialog.md":"a431","./docs/vue/admin/form.md":"6bf1","./docs/vue/admin/img.md":"252b","./docs/vue/admin/loading.md":"de48","./docs/vue/admin/main.md":"568f","./docs/vue/admin/page.md":"fff4","./docs/vue/admin/popover.md":"3ba2","./docs/vue/admin/popup.md":"dd49","./docs/vue/admin/scrollview.md":"a248","./docs/vue/admin/switch.md":"81bd","./docs/vue/admin/table.md":"5956","./docs/vue/admin/tag.md":"6233","./docs/vue/admin/tinymce.md":"eb71","./docs/vue/admin/tree.md":"7afd","./docs/vue/admin/uploader.md":"b13d","./docs/vue/app/chart.md":"a08a","./docs/vue/app/loading.md":"d8bb","./docs/vue/app/page-view.md":"77aa","./docs/vue/app/picker.md":"3adc","./docs/vue/app/popup.md":"9bcb","./docs/vue/app/scroll-view.md":"52de","./docs/vue/app/swipe.md":"e526","./docs/vue/app/tabbar.md":"e57a","./docs/vue/app/touch.md":"aeae","./docs/vue/install/build.md":"494f","./docs/vue/install/index.md":"74bd","./docs/vue/install/install.md":"0358","./docs/vue/library/array.md":"d95b","./docs/vue/library/base64.md":"7c0b","./docs/vue/library/device.md":"d1b1","./docs/vue/library/down.md":"cf58","./docs/vue/library/html.md":"ffbf","./docs/vue/library/price.md":"5f76","./docs/vue/library/reg.md":"b95b","./docs/vue/library/request.md":"50d6","./docs/vue/library/storage.md":"ade3","./docs/vue/library/tel.md":"0f77","./docs/vue/library/time.md":"f03c","./docs/vue/library/ui.md":"440c","./docs/vue/library/url.md":"2fa9","./docs/vue/plus/camera.md":"439d","./docs/vue/plus/img.md":"effe","./docs/vue/plus/map.md":"ed68","./docs/vue/plus/notify.md":"ebad","./docs/vue/plus/plus.md":"ad82"};function o(n){var e=r(n);return t(e)}function r(n){if(!t.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}o.keys=function(){return Object.keys(a)},o.resolve=r,n.exports=o,o.id="828a"},"82d6":function(n,e){n.exports="## 引入\n```python\nfrom library.safety import Safety\n```\n\n## 正则-公共\n```python\nSafety.isRight(\n  name: str,  #uname,passwd,tel,email,idcard\n  val: any    #内容\n)\n```\n\n## 正则-验证\n```python\nSafety.test(\n  reg=r'^1\\d{10}$',  #正则\n  val: any           #内容\n)\n```\n\n## Base64-加密\n```python\nSafety.encode(\n  param: dict={}   #数据\n)\n```\n\n## Base64-解密\n```python\nSafety.decode(\n  token: str=''   #Token\n)\n```\n"},"83d8":function(n,e){n.exports="## 优化( mysql -uroot -p )\n```bash\n# 开启表InnoDB: 1开启、0关闭\nset global innodb_file_per_table = 1;\n# 缓冲池(kb): 查询专用(物理内存*75%)、默认(134217728=128M)\nset global innodb_buffer_pool_size = 1*1024*1024*1024*0.75;\n# 最大连接数: 小网站(100~200)、中型(500~800)、大型(1000~2000)\nset global max_connections = 300;\n# 查询缓存容量: 通常设置为(200-300)MB\nset global query_cache_type = 1;\nset global query_cache_limit = 256;\nset global query_cache_min_res_unit = 2;\nset global query_cache_size = 200*1024*1024;\n# 临时表容量和内存表最大容量: 建议(64M/1G)\nset global tmp_table_size = 4*64*1024*1024;\nset global max_heap_table_size = 4*64*1024*1024;\n# 检查空闲连接: 建议(60秒/次)\nset global wait_timeout = 60;\n```\n\n#### 配置文件( vi /etc/my.cnf.d/server.cnf )\n```bash\n[mysqld]\n# 禁用DNS反向查询\nskip-name-resolve\n# 慢查询日志: 优化查询语句\nslow-query-log = 1\nlong_query_time = 2\nslow-query-log-file = /var/lib/mysql/mysql-slow.log\n```\n\n#### 其他\n```bash\n# 避免使用交换空间\nsysctl vm.swappiness\nsysctl -w vm.swappiness=0\n```\n\n<br/>\n\n## 常用命令\n### 设置root账户\n``` bash\n# 新密码\nmysql_secure_installation\n\n# 登陆\nmysql -uroot -p\n\n# 设置新密码\nmysqladmin -u root -password <新密码>\n\n# 修改密码\nmysqladmin -u root -p <旧密码> password <新密码>\n\n# 查看配置\nshow global variables like 'innodb_file_per_table';\nshow global status like 'innodb_file_per_table';\n\n# 更改配置\nset global innodb_file_per_table = 1;\n```\n### 创建用户\n``` bash\n# 创建新用户\nCREATE USER '<用户名>'@'<localhost>' IDENTIFIED BY '<密码>';\n\n# 添加权限\nGRANT ALL PRIVILEGES ON '<指定数据库>.*' TO '<用户名>'@'<localhost>';\nFLUSH PRIVILEGES;\n\n# 显示所有用户\nselect host,user from mysql.user;\n\n# 删除用户\ndrop user '<用户名>'@'localhost';\n```\n\n### 数据库\n``` bash\n# 查看\nshow databases;\n\n# 使用\nuse `<数据库名>`;\n\n# 查看-数据库编码\nshow variables like 'character_set_database';\n# 查看-最大连接数\nshow variables like '%max_connection%';\n# 查看-当前连接\nshow processlist;\n\n# 新建数据库\ncreate database `<数据库名>`;\n# 新建数据库并设置编码\ncreate database `<数据库名>` default character set <utf8> collate <utf8_general_ci>;\n# 更改数据库编码\nalter database `<数据库名>` default character set <utf8> collate <utf8_general_ci>;\n\n# 删除\ndrop database `<数据库名>`;\n```\n\n### 数据表\n``` bash\n# 查看\nshow tables;\n\n# 创建数据表\ncreate table `<数据库名>`.`<表名>`;\n\n# 查看编码\nshow create table `<表名>`;\n# 修改编码格式\nalter table `<表名>` character set <utf8>;\n\n# 删除\ndrop table `<表名>`;\n```\n\n### 字段\n``` bash\n# 查看\nshow create table `<表名>`;\n# 字段列信息\nshow columns from `<表名>`\n\n# 添加\nalter table `<表名>` add `<字段名>` varchar(6) not null COMMENT '<备注>' AFTER `<字段后>`;\n\n# 修改\nalter table `<表名>` change `<字段名>` `<字段名>` varchar(12) character set utf8 COLLATE utf8_general_ci NOT NULL COMMENT '<备注>';\n\n# 删除\nalter table `<表名>` drop `<字段名>`;\n```\n\n### 索引\n``` bash\n# 索引信息\nshow index from `<表名>`\n\n# 添加索引\nalter table `<数据库名>`.`<表名>` ADD PRIMARY KEY (`<字段1>`(长度), `<字段2>`(长度));\n# - PRIMARY 主键，唯一不能为空。\n# - INDEX 索引，普通的。\n# - UNIQUE 唯一索引，不允许有重复可以为空。\n# - FULLTEXT 是全文索引，用于在一篇文章中，检索文本信息的。\n\n# 删除索引\nalter table `<表名>` DROP INDEX `<字段>`;\n```\n\n### 分区\n``` bash\n# 用户表\nCREATE TABLE `test`.`user` (\n    `id` INT (10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID',\n    `username` VARCHAR (32) NOT NULL COMMENT '用户名',\n    `password` VARCHAR (32) NOT NULL COMMENT '密码',\n    `state` ENUM ('0', '1') NOT NULL DEFAULT '1' COMMENT '状态(0禁用,1正常)',\n    PRIMARY KEY (`id`)\n) ENGINE = InnoDB;\n\n# 添加数据\nINSERT INTO\n    `user` (`id`, `username`, `password`, `state`)\nVALUES\n    (NULL, 'user1', '123456', '1'),\n    (NULL, 'user2', '123456', '1'),\n    (NULL, 'user3', '123456', '1');\n\n# 分区（RANGE）\nALTER TABLE `user` partition BY RANGE(id)(\n    partition p0 VALUES LESS THAN (3),\n    partition p1 VALUES LESS THAN (6),\n    partition p2 VALUES LESS THAN (9)\n);\n\n# 查看\nEXPLAIN PARTITIONS SELECT * FROM `user`;\n\n# 添加（RANGE）\nALTER TABLE `user` ADD partition(\n    partition p3 VALUES LESS THAN maxvalue\n);\n\n# 拆分\nALTER TABLE `user` REORGANIZE partition p3 into(\n    partition p3 VALUES LESS THAN (12),\n    partition p4 VALUES LESS THAN maxvalue\n);\n\n# 合并\nALTER TABLE `user` REORGANIZE partition p3,p4 into(\n    partition p3 VALUES LESS THAN maxvalue\n);\n\n# 删除（包括数据）\nALTER TABLE `user` DROP partition p0;\n# 删除（恢复非分区状态）\nALTER TABLE `user` REMOVE partitioning;\n\n```\n\n### 外键\n``` bash\n# 创建数据库\ncreate database `test` default character set utf8 collate utf8_general_ci;\n\n# 用户基础表\nCREATE TABLE `test`.`user` (\n\t`id` SMALLINT(6) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID' ,\n\t`name` VARCHAR(12) NOT NULL COMMENT '姓名' ,\n\t`sex` ENUM('男','女') NOT NULL DEFAULT '男' COMMENT '性别' ,\n\t`age` TINYINT(3) NOT NULL DEFAULT 20 COMMENT '年龄' ,\n\tPRIMARY KEY (`id`)\n) ENGINE = InnoDB;\n\n# 用户信息表\nCREATE TABLE `test`.`user_info` (\n\t`id` SMALLINT(6) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID' ,\n\t`uid` SMALLINT(6) UNSIGNED NOT NULL COMMENT 'UID' ,\n\t`content` TEXT NOT NULL DEFAULT '' COMMENT '内容' ,\n\tPRIMARY KEY (`id`),\n) ENGINE = InnoDB;\n\n# 添加索引\nalter table `test`.`user_info` ADD PRIMARY KEY (`uid`);\n\n# 添加外键\nALTER TABLE `user` ADD CONSTRAINT `<外键名称>` FOREIGN KEY (`id`) REFERENCES `user_info`(`uid`) ON DELETE RESTRICT ON UPDATE RESTRICT;\n# - CASCADE 在父表上update/delete记录时，同步update/delete掉子表的匹配记录 \n# - SET NULL 在父表上update/delete记录时，将子表上匹配记录的列设为null (要注意子表的外键列不能为not null)  \n# - NO ACTION 如果子表中有匹配的记录,则不允许对父表对应候选键进行update/delete操作  \n# - RESTRICT 同no action, 都是立即检查外键约束\n\n# 删除外键\nalter table test.user DROP FOREIGN KEY `<外键名称>`;\n```\n\n### 数据\n``` bash\n# 查询\nSELECT * FROM `user` WHERE id=1;\n\n# 添加\nINSERT INTO `user`( `name`, `sex`, `age`) VALUES ('张三','1',25);\n\n# 更新\nUPDATE `user` SET `name`='李四',`sex`='2',`age`=20 WHERE id=1;\n\n# 删除\nDELETE FROM `user` WHERE id=1;\n```\n\n## 备份和恢复\n``` bash\nvi /home/mysql.sh\n```\n### 1) MySQL备份\n``` bash\n#!/bin/bash\nuname=root\npasswd=***\ndbname=***\npath=***_`date '+%Y-%m-%d'`.sql\nmysqldump -u$uname -p$passwd --databases $dbname --lock-all-tables --flush-logs > $path\n```\n### 2) MySQL恢复\n``` bash\n#!/bin/bash\nmysql -u$uname -p$passwd $dbname < $path\n```\n\n### 3) 定时执行(每天23:30执行备份)\n``` bash\n# 添加定时\ncrontab -e\n# 内容\n30 23 * * * sh /home/mysql.sh\n```\n\n### 4) 备份差异到本地目录\n``` bash\nrsync -rvu --delete root@IP:/home/test/ /home/test\n```\n\n### 5) 数据恢复\n``` bash\nmysql -u 用户名 -p密码 数据库名 < 备份的数据库.sql\n```\n\n## SSH免密码登录\n### 方法一：\n``` bash\n# 生成公钥\nssh-keygen -t rsa\n# 将公钥放到服务器上\nscp ~/.ssh/id_rsa.pub root@IP:~/.ssh/authorized_keys\n```\n### 方法二：\n``` bash\npacman -S sshpass\nsshpass -p '你的密码' ssh root@IP\n```"},"89aa":function(n,e){n.exports="## 引入\n```php\nuse Util\\Os;\n```\n\n## 操作系统\n```php\nOs::System(string $user_agent);\n```\n\n## 浏览器\n```php\nOs::Browser(string $user_agent);\n```\n"},"8b29":function(n,e){n.exports='# ArchLinux系统安装\n\n## EFI模式\n``` bash\n1) 电脑启动模式设置成“UEFI Mode”\n2) 禁用安全启动(Secure Boot)\n```\n\n## USB启动盘\n``` bash\n# 制作U盘启动盘(win下直接拷贝ISO里的文件）\ndd if=xxx.iso of=/dev/sdb bs=1M && sync\n# 恢复U盘容量\ndd if=/dev/zero of=/dev/sdb bs=1M count=1\n# 将ARCH_201603换成U盘分区的卷名(分区名)\nvi loader\\entries\\archiso-x86_64.conf\n```\n- 镜像文件: https://www.archlinux.org/download/\n- USB刻录: https://sourceforge.net/p/usbwriter/wiki/Documentation/\n\n<br/>\n\n## GPT分区\n``` bash\nparted /dev/sda\n# 建立GPT分区表(MBR msdos)\nmklabel gpt\n# 建立ESP分区\nmkpart primary 2048s  512M\n# 标志为boot\nset 1 boot on\n# 退出\nq\n```\n<br/>\n\n## Linux分区\n#### 1) 工具(MBR : cfdisk、fdisk; GPT : fdisk)\n``` bash\nfdisk -l\n```\n设备 起点 末尾 扇区 大小 类型<br>\n/dev/sda1 2048 1050623 1048576 100M EFI 系统<br>\n/dev/sda2 609230848 609640447 409600 200M Linux /boot<br>\n/dev/sda3 609640448 618029055 8388608 4G Linux swap<br>\n/dev/sda4 618029056 659972095 41943040 20G Linux /<br>\n/dev/sda5 659972096 976773134 316801039 151.1G Linux /home<br>\n\n#### 2) 格式化(注意根据自己的事实分区操作)\n``` bash\n# 格式化\nmkfs -t ext4 /dev/sda2\nmkfs -t ext4 /dev/sda4\nmkfs -t ext4 /dev/sda5\n\n# 如果是自己创建的EFI分区\nmkfs -t vfat /dev/sda1\n\n# 交换分区\nmkswap /dev/sda3\nswapon /dev/sda3\n```\n<br/>\n\n## 挂载(/、boot、home)\n``` bash\n# 挂载\nmount /dev/sda4 /mnt\nmkdir /mnt/boot && mount /dev/sda2 /mnt/boot\nmkdir /mnt/home && mount /dev/sda5 /mnt/home\n\n# 如果是EFI(需要把EFI分区挂载到boot目录下)\nmkdir /mnt/boot/efi && mount /dev/sda1 /mnt/boot/efi\n```\n<br/>\n\n## 安装系统\n#### 1) 编辑更新源\n``` bash\nvi /etc/pacman.d/mirrorlist\n```\nServer = http://mirrors.163.com/archlinux/$repo/os/$arch\n\n#### 2) 安装基础系统\n``` bash\npacstrap /mnt base\n```\n\n#### 3) 生成磁盘挂载列表\n``` bash\ngenfstab -U -p /mnt >> /mnt/etc/fstab\n```\n\n#### 4) 进入新系统\n``` bash\narch-chroot /mnt\n```\n<br/>\n\n## 基础配置\n``` bash\n# 添加主机名\necho "Test" > /etc/hostname\n\n# 键盘映射和字体\necho KEYMAP=us > /etc/vconsole.conf\n\n# 时区\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n# 硬件时钟同步\nhwclock --systohc --utc\n\n# 字符编码\necho LANG=en_US.UTF-8 > /etc/locale.conf\nvi /etc/locale.gen\n\ten_US.UTF8 UTF-8\n\tzh_CN.UTF8 UTF-8\n# 更新编码\nlocale-gen\n```\n<br/>\n\n## 启动器\n#### 1) EFI模式( 推荐 )\n``` bash\n# 安装Grub2\npacman -S grub efibootmgr dosfstools\n# 安装到sda\ngrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=Arch_Grub --recheck\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n- 引导: 现在BIOS引导模式，多个系统引导文件可共享1个分区下(双系统重装不会覆盖其他系统引导，可调整启动顺序)\n- 分区: 硬盘分区为gpt模式，多个主分区\n\n#### 2) Legacy模式( 不推荐 )\n``` bash\n# 安装Grub2\npacman -S grub os-prober\n# 安装到sda\ngrub-install --target=i386-pc /dev/sda\ngrub-mkconfig -o /boot/grub/grub.cfg\n```\n- 引导: 早期电脑BIOS引导模式，只能1个主引导(双系统重装后会覆盖其他系统引导，导致无法正常启动)\n- 分区: 硬盘分区为mbr模式，2主分区、1扩张分区、多个逻辑分区\n\n<br/>\n\n## 完成\n#### 1) 设置root密码\n``` bash\npasswd root\n```\n#### 2) 卸载被挂载的分区\n``` bash\n# 退出系统\nexit\n# 取消挂载\numount /mnt/boot/efi\numount /mnt/{boot,home,}\n```\n#### 3) 重启系统\n``` bash\n# 重启\nreboot\n```'},"8b99":function(n,e){n.exports='### 查询\n```go\nfunc Index(c *gin.Context) {\n\t// 查询\n\tmodel := (&model.Demo{}).New()\n\tmodel.Columns("uid", "title")\n\tmodel.Where("title LIKE ?", "%查询%")\n\tdata := model.Find()\n\t// 返回\n\tc.JSON(200, gin.H{"code": 0, "msg": "Web", "data": data})\n}\n```\n\n### 多条\n```go\ndemo.Find()\n```\n\n### 单条\n```go\ndemo.FindFirst()\n```\n\n### 返回类型\n```go\ndemo.ResType()\n```\n\n### 生成SQL\n```go\nsql,args := db.SelectSQL()\n```'},"8c93":function(n,e){n.exports="# Let's Encrypt免费证书\n\n## 证书工具\n### CentOS\n```bash\n# CentOS\ndnf install epel-release python3-certbot-nginx -y\n# Ubuntu\napt install python3-certbot-nginx -y\n# 验证\ncertbot -h\n```\n\n## Nginx\n```nginx\nserver {\n    listen 80;\n    listen       [::]:80;\n    server_name webmis.vip www.webmis.vip;\n    root /home/www/base/web/dist;\n    index index.html;\n\n    charset utf-8;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n    error_page 404 /404.html;\n    location = /40x.html {\n    }\n    error_page 500 502 503 504 /50x.html;\n    location = /50x.html {\n    }\n}\n```\n- 注意：不能使用中文注释，不要重启Nginx!\n\n<br/>\n\n## 获取证书\n``` bash\n# 生成\ncertbot --nginx\n# 重启Nginx\nsystemctl restart nginx\n```\n<br />\n\n## 定时续期证书\n``` bash\n# 定时器\ncrontab -e\n```\n- 0 2 28 * * sh /home/shell/ssl.sh > /dev/null 2>&1 &\n- 每月28号2点更新证书后重启Nginx\n\n**/home/sh/ssl.sh**\n``` bash\n#!/bin/bash\n# find / -name '.certbot.lock' -exec rm {} \\;\n/usr/local/bin/certbot renew --force-renewal\nsystemctl reload nginx\n```\n\n## iOS缓慢问题\n#### 1) OCSP( iOS缓慢问题 )\n```bash\nvi /etc/hosts\n```\n- 23.44.51.27 ocsp.int-x3.letsencrypt.org\n#### 2) OCSP( iOS缓慢问题 )\n```nginx\n    #SSL\n    ssl_stapling on;\n    ssl_stapling_verify on;\n    ssl_session_cache shared:SSL:10m;\n    ssl_session_timeout  10m;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;\n    ssl_prefer_server_ciphers on;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_certificate /etc/letsencrypt/live/demo.webmis.vip/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/demo.webmis.vip/privkey.pem;\n```"},"8d8a":function(n,e,t){"use strict";t("042b")},"8e19":function(n,e){n.exports="## 引入\n```php\nuse Service\\AdminToken;\n```\n\n## 验证\n```php\nAdminToken::Verify(string $token, string $urlPerm);\n```\n\n## 权限数组\n```php\nAdminToken::Perm(string $token);\n```\n\n## 生成\n```php\nAdminToken::Create(array $data);\n```\n\n## 获取\n```php\nAdminToken::Token(string $token);\n```\n"},"92bb":function(n,e){n.exports='## 交换空间\n```bash\n# 查看\nswapon --show\nfree -m\n# 创建\nfallocate -l 8G /swapfile\n# 权限\nchmod 600 /swapfile\n# 设置、激活\nmkswap /swapfile\nswapon /swapfile\n# 开机挂载\nvi /etc/fstab\n```\n- 末尾添加"/swapfile swap swap defaults 0 0"\n#### 阿里云服务器\n```bash\nvi /etc/sysctl.conf\n```\n- vm.swappiness = 60\n- reboot\n\n\n## 防火墙( ufw )\n```bash\n# 添加端口\nufw allow 22/tcp\n# 添加服务\nufw allow http\nufw allow https\nufw allow 3306\n# 查看状态\nufw status\n# 开机启动\nsystemctl enable ufw\n```'},"92d5":function(n,e){n.exports='## 安装Java\n```bash\napt install default-jre default-jdk\n```\n\n<br/>\n\n## Pulsar安装\n```bash\ncd /home\nwget https://archive.apache.org/dist/pulsar/pulsar-2.8.0/apache-pulsar-2.8.0-bin.tar.gz\ntar xvfz apache-pulsar-2.8.0-bin.tar.gz\nmv apache-pulsar-2.8.0 pulsar\nrm -fr apache-pulsar-2.8.0-bin.tar.gz\ncd pulsar\n```\n\n<br/>\n\n## 单机\n```bash\n# 后台/前台\nbin/pulsar-daemon start standalone\nbin/pulsar standalone\n```\n<br/>\n\n### 测试\n```bash\n# 消费者\nbin/pulsar-client consume persistent://public/default/pulsar-test \\\n-n 100 \\\n-s "consumer-test" \\\n-t "Exclusive"\n\n# 生产者\nbin/pulsar-client produce persistent://public/default/pulsar-test \\\n-n 1 \\\n-m "Hello Pulsar"\n```\n\n<br/>\n\n## 基本操作\n```bash\n# 租户: 列表、创建、更新、删除\nbin/pulsar-admin tenants list\nbin/pulsar-admin tenants create <MyTenant>\nbin/pulsar-admin tenants update <MyTenant>\nbin/pulsar-admin tenants delete <MyTenant>\n# 命名空间: 列表、创建、设置集群、删除\nbin/pulsar-admin namespaces list <MyTenant>\nbin/pulsar-admin namespaces create <MyTenant/MyNameSpace>\nbin/pulsar-admin namespaces set-clusters <MyTenant/MyNameSpace> --clusters webmis\nbin/pulsar-admin namespaces delete <MyTenant/MyNameSpace>\n# 主题: 列表、状态、创建(无分区)、创建(有分区)、卸载(已订阅)、删除(无分区)、删除(有分区)\nbin/pulsar-admin topics list <MyTenant/MyNameSpace>\nbin/pulsar-admin topics stats/partitioned-stats persistent://MyTenant/MyNameSpace/MyTopic\nbin/pulsar-admin topics create persistent://MyTenant/MyNameSpace/MyTopic\nbin/pulsar-admin topics create-partitioned-topic persistent://MyTenant/MyNameSpace/MyTopic --partitions 4\nbin/pulsar-admin topics unload persistent://MyTenant/MyNameSpace/MyTopic\nbin/pulsar-admin topics delete persistent://MyTenant/MyNameSpace/MyTopic\nbin/pulsar-admin topics delete-partitioned-topic persistent://MyTenant/MyNameSpace/MyTopic\n# 授权\nbin/pulsar-admin topics grant-permission --actions produce,consume --role AppHmsAlert persistent://MyTenant/MyNameSpace/MyTopic\n```\n\n<br/>\n\n## 集群\n### Docker容器\n```bash\n# 下载镜像\ndocker pull ubuntu\n# 运行镜像\ndocker run --name pulsar01 -it ubuntu\ndocker run --name pulsar02 -it ubuntu\ndocker run --name pulsar03 -it ubuntu\n# 查看IP\napt update\napt install net-tools\nifconfig\n# 退出容器\nexit        #停止\nCtrl+P+Q    #不停止\n# 进入容器\ndocker ps -a\ndocker start 容器ID\ndocker attach 容器ID\n```\n\n### 主机名解析( vi /etc/hosts )\n```bash\n172.17.0.2   pulsar01\n172.17.0.3   pulsar02\n172.17.0.4   pulsar03\n```\n<br/>\n\n### 一、ZooKeeper( vi conf/zookeeper.conf )\n```bash\n# 数据\ndataDir=data/zookeeper\n# 心跳间隔(毫秒)\ntickTime=1000\ninitLimit=5\nsyncLimit=2\nclientPort=2181\n# 集群\nserver.1=172.17.0.2:2888:3888\nserver.2=172.17.0.3:2888:3888\nserver.3=172.17.0.4:2888:3888\n```\n#### myid\n```bash\n# 集群(本机1, 其它两台分别添加2 3到myid)\nmkdir -p /home/pulsar/data/zookeeper\necho 1 > /home/pulsar/data/zookeeper/myid\n```\n#### 启动\n```bash\n# 后台/前台\nbin/pulsar-daemon start zookeeper\nbin/pulsar zookeeper\n# 查看(QuorumPeerMain)\njps\nnetstat -tnlpu|grep 4043\n```\n<br/>\n\n### 二、初始化元数据\n```bash\nbin/pulsar initialize-cluster-metadata \\\n  --cluster webmis \\\n  --zookeeper 172.17.0.2:2181 \\\n  --configuration-store 172.17.0.2:2181 \\\n  --web-service-url http://172.17.0.2:8080,172.17.0.3:8080,172.17.0.4:8080 \\\n  --broker-service-url pulsar://172.17.0.2:6650,172.17.0.3:6650,172.17.0.4:6650\n```\n- --cluster 集群名称\n- --zookeeper 集群节点(其中1个)\n- --configuration-store 集群节点(其中1个)\n- --web-service-url 集群Web服务的URL+端口\n- --web-service-url-tls 集群Web提供TLS服务的URL+端口\n- --broker-service-url 集群brokers服务URL\n- --broker-service-url-tls 集群brokers提供TLS服务的URL\n\n#### 验证初始化元数据\n```bash\nbin/pulsar zookeeper-shell\n```\n- help  //命令\n- ls /  //查看\n- quit  //退出\n\n<br/>\n\n### 三、BookKeeper( vi conf/bookkeeper.conf )\n```bash\nadvertisedAddress=172.17.0.2\nzkServers=172.17.0.2:2181,172.17.0.3:2181,172.17.0.4:2181\n```\n#### 初始化元数据\n```bash\nmkdir -p /home/pulsar/data/bookkeeper\nbin/bookkeeper shell metaformat\n```\n#### 启动\n```bash\n# 后台/前台\nbin/pulsar-daemon start bookie\nbin/bookkeeper bookie\n# 查看状态\ncat /home/pulsar/data/bookkeeper/ledgers/current/VERSION\n# 测试\nbin/bookkeeper shell bookiesanity\n# 恢复\n# bookkeeper autorecovery\n```\n- ackQuorum   //当指定数量的 bookie ack 响应时，认为消息写入成功\n- ensemble    //写入数据的 bookie 节点数量\n- numEntries  //一批消息的消息数量\n- writeQuorum //每条消息副本数量\n\n<br/>\n\n### 四、Broker( vi conf/broker.conf )\n```bash\n# 集群节点\nzookeeperServers=172.17.0.2:2181,172.17.0.3:2181,172.17.0.4:2181\nconfigurationStoreServers=172.17.0.2:2181,172.17.0.3:2181,172.17.0.4:2181\n# 集群名称\nclusterName=webmis\n```\n\n#### 启动\n```bash\n# 后台/前台\nbin/pulsar-daemon start broker\nbin/pulsar broker\n# 查看\nbin/pulsar-admin brokers list webmis\n```\n\n<br/>\n\n## 五、客户端( vi conf/client.conf )\n```bash\nwebServiceUrl=http://172.17.0.2:8080,172.17.0.3:8080,172.17.0.4:8080\nbrokerServiceUrl=pulsar://172.17.0.2:6650,172.17.0.3:6650,172.17.0.4:6650\n```\n'},9494:function(n,e){n.exports='## 引入\n```go\nimport "webmis/util"\n```\n\n## 执行Linux命令\n```go\nutil.Exec(cmd string)\n```\n\n## 字符串长度\n```go\nutil.Len(val string)\n```\n\n## 是否为空\n```go\nutil.Empty(val interface{})\n```\n\n## 是否KEY\n```go\nutil.InKey(name string, data map[string]interface{})\n```\n\n## 三元表达式\n```go\nutil.If(val bool, tVal interface{}, fVal interface{})\n```\n\n## 格式化时间\n```go\nutil.Date(format string, timestamp ...interface{})\nutil.DateFormat(\n  format string,    //格式: yyyy-MM-dd HH:mm:ss\n  duration string,  //-1d: 年(y)、月(m)、日(d)、时，分、秒(5h30m40s)\n)\n```\n\n## 时间戳\n```go\nutil.Time()\n```\n\n## 日期转时间戳\n```go\nutil.Strtotime(day string, format string)\n```\n\n## 去首尾空格\n```go\nutil.Trim(str interface{}, charlist ...string)\n```\n\n## 拆分字符串为数组\n```go\nutil.Explode(delimiter string, str string)\n```\n\n## 数组合成字符串\n```go\nutil.Implode(glue string, pieces []string)\n```\n\n## JSON转字符串\n```go\nutil.JsonEncode(arr interface{})\n```\n\n## JSON字符串转数组\n```go\nutil.JsonDecode(str interface{}, res interface{})\n```\n\n## 合并数组\n```go\nutil.ArrayMerge(arrays ...map[string]interface{})\n```\n\n## 是否存在于数组\n```go\nutil.InArray(needle string, haystack []string)\n```\n'},"94f1":function(n,e){n.exports='# Phalcon开发环境\n\n## ArchLinux\n#### 1) 安装Git\n```bash\npacman -S git\n```\n\n#### 2) 安装PHP7\n```bash\npacman -S php php-fpm php-gd\n# 查看\nphp -v\n# 安装Composer\npacman -S composer\n```\n\n#### 3) Phalcon框架\n```bash\npacman -S yay\nyay -S php-phalcon\n```\n\n#### 4) 安装Redis\n```bash\npacman -S redis php-redis\n# 启动\nsystemctl start redis\n```\n\n#### 5) 安装MariaDB\n```bash\npacman -S mariadb\n# 启动\nsystemctl start mysqld\n```\n\n<br/>\n\n## Windows\n#### 1) 安装Git\n- 下载 [Git](https://git-scm.com/download/win)\n- 安装: 64位版 > 重启系统\n- VsCode: "ctrl+`" > "终端" > "powershell" > "选择默认 shell" > "Git Bash" > 重启\n- 终端输入: "cmd" 和 "bash" 可相互切换\n\n#### 2) 安装PHP7\n- [PHP7.4](https://windows.php.net/download#php-7.4)\n- 解压: "php-7.4.13-nts-Win32-vc15-x64.zip" 到 "D:\\server\\php"\n- 搜索: "环境变量" > "Path" > "添加" > "D:\\server\\php"\n- 配置: "D:\\server\\php\\php.ini" , 如果没有复制"php.ini-development"或"php.ini-production"\n- 扩展目录: extension_dir = "D:/server/php/ext"\n- CMD: php -v\n**安装Composer**\n- [Composer](https://getcomposer.org/Composer-Setup.exe)\n```bash\n# 国内镜像\ncomposer config -g repo.packagist composer https://mirrors.aliyun.com/composer/\n```\n\n#### 3) Phalcon框架\n- [Phalcon4](https://windows.php.net/download#php-7.4) 、[php-psr](https://pecl.php.net/package/psr/1.0.1/windows)\n- 解压: "php_phalcon.dll" 到 "D:\\server\\php\\ext"\n- 解压: "php_psr.dll" 到 "D:\\server\\php\\ext"\n- 扩展: "extension=psr" 和 "extension=phalcon"\n- CMD: php -m\n\n#### 4) 安装Redis\n- [Redis](https://github.com/MicrosoftArchive/redis/releases) 、[php-redis](http://pecl.php.net/package/redis/5.3.2/windows)\n- 解压: "Redis-x64-3.2.100.zip" 到 "D:\\server\\redis"\n- 搜索: "环境变量" > "Path" > "添加" > "D:\\server\\redis"\n- 启动: "redis-server"\n- 解压: "php_redis.dll" 到 "D:\\server\\php\\ext"\n- 扩展: "extension=redis"\n- CMD: php -m\n\n### 5) 安装MariaDB\n- [MariaDB](https://downloads.mariadb.org/)\n- 安装: "mariadb-10.5.9-winx64.msi" 到 "D:\\server\\MariaDB"\n- 搜索: "环境变量" > "Path" > "添加" > "D:\\server\\MariaDB\\bin"\n- 扩展: "extension=mysqli" 和 "extension=pdo_mysql"\n- CMD: php -m\n- PHP数据库工具: [Adminer](https://github.com/vrana/adminer/releases/)\n\n<br/>\n\n## MacOS\n#### 1) 安装Git\n```bash\ngit\n```\n\n#### 2) 安装PHP7\n```bash\nphp\n# 查看\nphp -v\n# 安装Composer\nphp -r "copy(\'https://install.phpcomposer.com/installer\', \'composer-setup.php\');"\nphp composer-setup.php\n```\n\n#### 3) 安装MacPorts\n- 下载: [MacPorts](https://www.macports.org/install.php)\n- 查看: "port version"\n**环境变量**( sudo vi /etc/profile )\n```bash\nexport PATH=/opt/local/bin:$PATH\nexport PATH=/opt/local/sbin:$PATH\n```\n**清华镜像源**( sudo vi /opt/local/etc/macports/macports.conf )\n```bash\nrsync_server        mirrors.tuna.tsinghua.edu.cn\nrsync_dir           macports/release/base/\n```\n**sudo vi /opt/local/etc/macports/sources.conf**\n```bash\nrsync://mirrors.tuna.tsinghua.edu.cn/macports/release/ports/ [default]\n```\n**刷新**\n```bash\nsudo port -v sync\nsudo port -v selfupdate\n```\n\n#### 4) Phalcon框架\n```bash\nsudo port install php73-phalcon4\n```\n\n<br/><br/>'},"983c":function(n,e){n.exports='# VirtualBox-安装MacOS\n\n#### > [下载ISO文件](https://sysin.org/article/Download-VMware-macOS-Catalina-iso/)\n\n<br/>\n\n### 一、创建虚拟机\n#### 新建\n- 名称: Catalina\n- 类型: Mac OS X\n- 版本: Mac OS X（64位）\n#### 内存\n- 大小: 4096\n#### 硬盘\n- 现在创建硬盘\n#### 文件类型\n- VDI\n#### 存储方式\n- 固定大小\n#### 大小( 安装XCode、自动更新 )\n- 80.00 GB\n\n<br/>\n\n## 二、配置虚拟机\n#### 系统\n- 主板: 去除“软驱”\n- 处理器: 2\n#### 显示\n- 显存大小: 128 MB\n#### 存储\n- 选择Catalina.iso，然后“确定”\n\n## 三、模拟环境\n```bash\n# MacBookPro\nVBoxManage modifyvm "MacOS" --cpuidset 00000001 000306a9 04100800 7fbae3ff bfebfbff\nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/efi/0/Config/DmiSystemProduct" "MacBookPro11,3"\nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/efi/0/Config/DmiSystemVersion" "1.0"\nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/efi/0/Config/DmiBoardProduct" "Mac-2BD1B31983FE1663"\nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/smc/0/Config/DeviceKey" "ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc"\nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC" 1\n# iMac\nVBoxManage modifyvm "MacOS" --cpuidset 00000001 000106e5 00100800 0098e3fd bfebfbff \nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/efi/0/Config/DmiSystemProduct" "iMac11,3" \nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/efi/0/Config/DmiSystemVersion" "1.0" \nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/efi/0/Config/DmiBoardProduct" "Iloveapple" \nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/smc/0/Config/DeviceKey" "ourhardworkbythesewordsguardedpleasedontsteal(c)AppleComputerInc" \nVBoxManage setextradata "MacOS" "VBoxInternal/Devices/smc/0/Config/GetKeyFromRealSMC" 1\n```\n- windows用户cd到VBox安装目录或配置系统环境变量\n\n<br/>\n\n## 四、安装系统\n- 语言: 简体中文\n- 磁盘工具: "VBOX HARDDISK Media" > APFS(必须文件格式) > 抹掉 > 关闭\n- 重新安装macOS > 继续 > 同意条款\n- 选择硬盘 > 安装 > 配置\n- 设置 > 硬盘 > Catalina.iso > 从虚拟驱动器中删除磁盘\n- 如果正常重启后看到登录界面\n\n<br/>\n\n## 五、设置分辨率( 尝试失败! )\n```bash\n# 查看\nVBoxManage getextradata "MacOS" VBoxInternal2/EfiGraphicsResolution\n# 设置\nVBoxManage setextradata "MacOS" "VBoxInternal2/EfiGopMode" 4\nVBoxManage setextradata "MacOS" VBoxInternal2/EfiGraphicsResolution 1920*1080\nVBoxManage setextradata "MacOS" VBoxInternal2/EfiGraphicsResolution HxV\n```\n- 1 800×600\n- 2 1024×768\n- 3 1280×1024\n- 4 1440×900\n- 5 1920×1200\n\n<br/><br/>'},"991a":function(n,e){n.exports='# 服务器环境\n\n## 安装Go\n```bash\n# CentOS\ndnf install golang -y\n# Ubunut\napt install golang -y\n```\n\n## 运行\n```bash\n# 进入项目\ncd /xxx/gin\nmkdir public/upload\nchmod -R 777 public/upload\n# 安装依赖包\n./bash install\n# 打包\n./bash build\n# 启动\n./bash start\n```\n\n## 开机启动\n```bash\n# 权限\nchmod +x /etc/rc.d/rc.local\n# 编辑文件\nvi /etc/rc.d/rc.local\n```\n- cd /xxx/java/ && ./bash start\n\n<br/>\n\n## Nginx虚拟主机\n``` nginx\nupstream demo_go {\n    server localhost:9030;\n}\nupstream demo_go_websocket {\n    server localhost:9031;\n}\nmap $http_upgrade $connection_upgrade {\n    default upgrade;\n    \'\' close;\n}\n\nserver {\n    listen       80;\n    listen       [::]:80;\n    server_name  demo-go.webmis.vip;\n    set $root_path /home/www/base/gin/public;\n    root $root_path;\n    index index.html;\n\n    charset utf-8;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_pass http://demo_go;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n    }\n\n    location ~* ^/(upload|favicon.png)/(.+)$ {\n        root $root_path;\n    }\n\n    location /wss {\n        proxy_pass http://demo_go_websocket;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "Upgrade";\n        proxy_set_header Connection "keep-alive";\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n}\n```\n\n## SSL证书\n```bash\ncertbot --nginx\n```\n\n<br/><br/>'},"99f5":function(n,e){n.exports="## 引入\n```php\nuse Library\\Safety;\n```\n\n## 正则-公共\n```php\nSafety::isRight(\n  string $name='',  //uname,passwd,tel,email,idcard\n  string $val=''    //内容\n);\n```\n\n## 正则-验证\n```php\nSafety::test(\n  string $reg='^1\\d{10}$',  //正则\n  mixed $val=''             //内容\n);\n```\n\n## Base64-加密\n```php\nSafety::encode(\n  array $param=[]  //数据\n);\n```\n\n## Base64-解密\n```php\nSafety::decode(\n  string $token='' //Token\n);\n```\n"},"9ae3":function(n,e){n.exports='### 查询\n```java\n@RequestMapping("")\nString index() {\n  ArrayList<HashMap<String,Object>> data = null;\n  // 查询\n  Demo model = new Demo();\n  model.Columns("uid", "title");\n  model.Where("title LIKE ?", "%查询%");\n  data = model.Find();\n  // 返回数据\n  HashMap<String,Object> res = new HashMap<String,Object>();\n  res.put("code",0);\n  res.put("msg","Web");\n  res.put("data",data);\n  return GetJSON(res);\n}\n```\n\n### 多条\n```java\ndemo.Find();\n```\n\n### 单条\n```java\ndemo.FindFirst();\n```\n\n### 返回类型\n```java\ndemo.ResType();\n```\n\n### 生成SQL\n```java\n// sql、args\nObject[] sql = demo.SelectSQL();\n```'},"9bcb":function(n,e){n.exports="## 引入\n```javascript\nimport wmPopup from '@/components/popup/index.vue'\n```\n\n## 弹出层\n```html\n<wm-popup></wm-popup>\n```\n- show: {type: Boolean, default: false},        //是否显示\n- position: {type: String, default: 'center'},  //位置: left、right、top、bottom\n- opacity: {type: Number, default: 0.4},        //背景透明度\n- bgColor: {type: String, default: ''},         //内容背景颜色\n- bgClose: {type: Boolean, default: true},      //点击背景关闭\n- time: {type: Number, default: 400},           //动画时间\n\n"},"9c43":function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Type;\n```\n\n## Int\n```java\nType.Int(Object val);\n```\n\n## Long\n```java\nType.Long(Object val);\n```\n\n## 转换\n```java\nType.ToType(String type, Object val);\n```\n- type: string、int、float\n"},a056:function(n,e){n.exports='# Java开发环境\n\n## ArchLinux\n#### 1) 安装Git\n```bash\npacman -S git\n```\n\n#### 2) 安装JavaJDK\n```bash\npacman -S jdk-openjdk jre-openjdk\n# 查看\njava --version\njavac --version\n```\n\n#### 3) 安装Maven\n```bash\npacman -S maven\n# 查看\nmvn –-version\n```\n<br/>\n\n## Windows\n#### 1) 安装Git\n- 下载: [Git](https://git-scm.com/download/win)\n- 安装: 64位版 > 重启系统\n- VsCode: "ctrl+`" > "终端" > "powershell" > "选择默认 shell" > "Git Bash" > 重启\n- 终端输入: "cmd" 和 "bash" 可相互切换\n\n#### 2) 安装JavaJDK\n- 下载: [OpenJdk](http://jdk.java.net/15/)\n- 解压: "openjdk-15.0.1_windows-x64_bin.zip" 到 "D:\\server\\jdk"\n- 搜索: "环境变量" > "新建" > 变量名: "JAVA_HOME" 变量值: "D:\\server\\jdk"\n- 搜索: "环境变量" > "Path" > "添加" > "%JAVA_HOME%\\bin"\n- CMD: "java –version" 和 "javac –version"\n\n#### 3) 安装Maven\n- 下载: [Maven](https://maven.apache.org/download.cgi)\n- 解压: "apache-maven-3.6.3-bin.zip" 到 "D:\\server\\maven"\n- 搜索: "环境变量" > "新建" > 变量名: "MAVEN_HOME" 变量值: "D:\\server\\maven"\n- 搜索: "环境变量" > "Path" > "添加" > "%MAVEN_HOME%\\bin"\n- 查看: "mvn –version"\n- CMD: "java –version" 和 "javac –version"\n\n<br/>\n\n## MacOS\n#### 1) 安装Git\n```bash\ngit\n```\n\n#### 2) 安装JavaJDK\n- 下载: [OpenJdk](http://jdk.java.net/15/)\n\n#### 3) 安装Maven\n- 下载: [Maven](https://maven.apache.org/download.cgi)\n\n<br/><br/>'},a08a:function(n,e){n.exports="## 引入\n```javascript\nimport wmChartLine from '@/components/chart/line.vue'\nimport wmChartInterval from '@/components/chart/interval.vue'\nimport wmChartPie from '@/components/chart/pie.vue'\n```\n\n## 折线图\n```html\n<wm-chart-line></wm-chart-line>\n```\n- data: {type: Array, default: []},  //数据: [{type: '收入', label:'1月', value:50}]\n- unit: {type: String, default: ''},  //单位\n- isDot: {type: Boolean, default: true},  //是否显示点\n- isSmooth: {type: Boolean, default: true},  //是否曲线\n\n## 柱状图\n```html\n<wm-chart-interval></wm-chart-interval>\n```\n- type: {type: String, default: 'dodge'},  //类型: dodge、stack\n- data: {type: Array, default: []},  //数据: [{type: '收入', label:'1月', value:50}]\n- unit: {type: String, default: ''},  //单位\n\n## 饼图\n```html\n<wm-chart-pie></wm-chart-pie>\n```\n- type: {type: String, default: 'stack'},  //类型: dodge、stack\n- data: {type: Array, default: []},  //数据: [{type: '1', label:'手机', value:0.60}]\n- size: {type: Number, default: 100},  //大小\n- position: {type: String, default: 'right'},  //位置: top、bootom、left、right\n- html: {type: String, default: ''},  //中部内容\n- htmlPosition: {type: Array, default: ['50%', '50%']},  //数据\n\n"},a0ff:function(n,e){n.exports='### 插入\n```go\nimport "webmis/model"\n// 对象\ndemo := (&model.Demo{}).New()\ndemo.Values(map[string]interface{}{\n  "uid":   nil,\n  "title": "Go-添加",\n})\ndemo.Insert()\n```\n\n### 生成SQL\n```go\nsql,args := db.InsertSQL()\n```'},a210:function(n,e){n.exports="## 路由\n```java\nrouter(String uid, Session conn, String msg);\n```\n\n## 群发\n```java\nsendAll(HashMap<String, Object> data);\n```\n\n## 单发\n```java\nsend(Session conn, HashMap<String, Object> data);\n```\n"},a248:function(n,e){n.exports="## 引入\n```javascript\nimport wmScrollView from '@/components/scroll-view/index.vue'\n```\n\n## 滑动层\n```html\n<wm-scroll-view>\n  内容\n</wm-scroll-view>\n```\n- probeType: {type: Number, default: 3},                                  //派发Scroll事件: 0不派发、1间隔(手指)、2一直派发(手指)、3全部派发\n- scrollX: {type: Boolean, default: false},                               //滚动-横向\n- scrollY: {type: Boolean, default: true},                                //滚动-纵向\n- startX: {type: Number, default: 0},                                     //初始化位置-横轴\n- startY: {type: Number, default: 0},                                     //初始化位置-纵轴\n- loading: {type: Number, default: 48},                                   //Loading高度\n- loadingTheme: {type: String, default: 'flow'},                          //样式: flow、swing、circle、wave\n- loadingColor: {type: String, default: Env.themes.primary},              //Loading颜色\n- upper: {type: Number, default: 64},                                     //顶部距离\n- lower: {type: Number, default: 80},                                     //底部距离\n- upperText: {type: String, default: '已刷新'},                           //刷新文本\n- lowerText: {type: String, default: '正在加载'},                         //加载文本\n- upperColor: {type: String, default: Env.themes.text2},                  //刷新颜色\n- lowerColor: {type: String, default: Env.themes.text2},                  //加载颜色\n- isUpper: {type: Boolean, default: true},                                //是否下拉\n- isLower: {type: Boolean, default: true},                                //是否上拉\n- scrollbar: {type: Object, default: {fade: false, interactive: true}},   //滚动条\n- preventDefault: {type: Boolean, default: true},                         //允许浏览器复制\n- @down   //事件: 下拉\n- @up     //事件: 上拉\n- @scroll //事件: 滚动\n\n"},a431:function(n,e){n.exports="## 引入\n```javascript\nimport wmDialog from '@/components/dialog/index.vue'\n```\n\n## 对话框\n```html\n<wm-dialog></wm-dialog>\n```\n- show: {type: Boolean, default: false},          //是否显示\n- title: {type: String, default: ''},             //标题\n- width: {type: String, default: '420px'},        //宽\n- height: {type: String, default: 'auto'},        //高\n- hMargin: {type: Number, default: 16},           //高度边距\n- titleAlign: {type: String, default: 'center'},  //标题对齐方式\n- footerAlign: {type: String, default: 'center'}, //底部对齐方式\n- bgColor: {type: String, default: '#FFF'},       //内容背景颜色\n- bgClose: {type: Boolean, default: false},       //点击背景关闭\n- @update:show //事件\n\n"},a59d:function(n,e){n.exports='## 引入\n```go\nimport "webmis/util"\n```\n\n## 操作系统\n```go\n(&util.Os{}).System(user_agent string)\n```\n\n## 浏览器\n```go\n(&util.Os{}).Browser(user_agent string)\n```'},a63e:function(n,e){n.exports="## 引入\n```php\nuse Util\\Url;\n```\n\n## 编码\n```php\nUrl::Encode(string $data);\n```\n\n## 解码\n```php\nUrl::Decode(string $data);\n```"},a7c3:function(n,e){n.exports='## 服务器\n```bash\n# 运行\n./bash start\n```\n\n## 群发\n```java\nimport webmis.library.Socket;\n\nHashMap<String,Object> data = new HashMap<String,Object>();\ndata.put("code", 0);\ndata.put("type", "msg");\nHashMap<String,Object> msg = new HashMap<String,Object>();\nmsg.put("title", "测试");\nmsg.put("content", "测试内容");\ndata.put("data", msg);\nSocket.Send("admin", data);\n```\n'},ad82:function(n,e){n.exports="## 引入\n```javascript\nimport PlusReady from '@/library/plus/ready'\nimport PlusBack from '@/library/plus/back'\nimport VersionDiff from '@/library/inc/version-diff'\n```\n\n## 监听加载\n```typescript\nPlusReady(\n  callback: any,  //回调函数\n);\n```\n\n## Android返回键\n```typescript\nPlusBack(\n  callback: any,  //回调函数\n);\n```\n\n## 版本比较\n```javascript\nVersionDiff(\n  v1: string, //版本: 1.0.0\n  v2: string, //版本: 2.0.0\n);\n```\n"},ade3:function(n,e){n.exports="## 引入\n```javascript\nimport Storage from '@/library/storage'\n```\n\n## 本地硬盘\n```typescript\n// 保存\nStorage.setItem(key: string,data: string);\n// 获取\nStorage.getItem(key: string);\n// 删除\nStorage.removeItem(key: string);\n// 清除\nStorage.clear();\n```\n"},aeae:function(n,e){n.exports="## 引入\n```javascript\nimport WmTouch from '@/components/tabbar/touch.vue'\n```\n\n## 手势\n```html\n<wm-touch>\n  页面\n</wm-touch>\n```\n- limit: {type: Number, default: 200},  //触发距离\n- @swipe  //事件: left、right、down、up\n\n"},b13d:function(n,e){n.exports="## 引入\n```javascript\nimport wmUploader from '@/components/uploader/index.vue'\n```\n\n## 上传文件\n```html\n<wm-uploader></wm-uploader>\n```\n- url: {type: String, default: ''},     //上传地址\n- name: {type: String, default: 'up'},  //上传名称\n- param: {type: Object, default: {}},   //提交参数"},b18e:function(n,e){n.exports='### 连表\n```go\nimport "webmis/model"\n// 对象\ndemo := (&model.Demo{}).New()\ndemo.Table("test1 as a")\ndemo.LeftJoin("test2 as b", "a.id=b.uid")\ndemo.Columns("a.title", "b.name")\nsql, args := demo.SelectSQL()\nself.Print(sql, args)\n```\n\n### 其他\n```go\n// INNER JOIN \ndb.Join()\n// LEFT JOIN\ndb.LeftJoin()\n// RIGHT JOIN\ndb.RightJoin()\n// FULL JOIN\ndb.FullJoin()\n```'},b1c3:function(n,e){n.exports="## 引入\n```python\nfrom util.url import Os\n```\n\n## 操作系统\n```python\nOs.System(user_agent: str)\n```\n\n## 浏览器\n```python\nOs.Browser(user_agent: str)\n```\n"},b24d:function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Http;\n```\n\n## Request\n```java\nHttp.Request();\n```\n\n## Response\n```java\nHttp.Response();\n```\n"},b386:function(n,e){n.exports="## 引入\n```python\nfrom library.qrcode import Qrcode\n```\n\n## 生成\n```python\nQrcode.Create(\n  'text': '',     #内容\n  'size': 5,      #大小\n  'border': 2,    #边距\n)\n```\n\n## 识别\n```python\nQrcode.Scan('public/upload/qrcode/demo.png')\n```\n"},b40e:function(n,e){n.exports='## 引入\n```java\nimport webmis.library.Safety;\n```\n\n## 正则-公共\n```java\nSafety.isRight(\n  String name,  //uname,passwd,tel,email,idcard\n  String val    //内容\n);\n```\n\n## 正则-验证\n```java\nSafety.test(\n  String reg,  //正则 "^1\\d{10}$"\n  String val   //内容\n);\n```\n\n## Base64-加密\n```java\nSafety.encode(\n  HashMap<String,Object> data  //数据\n);\n```\n\n## Base64-解密\n```java\nSafety.decode(\n  String token  //Token\n);\n```\n'},b4bc:function(n,e){n.exports="## 引入\n```php\nuse Util\\Hash;\n```\n\n## Md5\n```php\nHash::Md5(string $data);\n```\n\n## Sha256\n```php\nHash::Sha256(string $data);\n```\n\n## HmacSha1\n```php\nHash::HmacSha1(string $data, string $key, bool $binary=true);\n```\n\n## HmacSha256\n```php\nHash::HmacSha256(string $data, string $key, bool $binary=true);\n```\n"},b6c1:function(n,e){n.exports='# 服务器环境\n\n## Composer\n```bash\n# PHP命令\nln -s /usr/local/bin/php74 /usr/bin\n# 下载\nphp -r "copy(\'https://getcomposer.org/installer\', \'composer-setup.php\');"\n# 安装\nsudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer\n# 查看\ncomposer -V\n```\n\n## 运行\n```bash\n# 进入项目\ncd /xxx/phalcon\nmkdir public/upload\nchmod -R 777 public/upload\n# 依赖包\ncomposer install\n# 启动\n./bash start\n```\n<br/>\n\n## Nginx虚拟主机\n```bash\nvi /home/vhosts/demo-php.webmis.vip.conf\n```\n#### 内容\n```nginx\nupstream demo_php_websocket {\n    server 127.0.0.1:9001;\n}\n\nserver {\n    listen       80;\n    listen       [::]:80;\n    server_name  demo-php.webmis.vip;\n    set $root_path /home/www/base/phalcon/public;\n    root $root_path;\n    index index.php;\n\n    charset utf-8;\n\n    try_files $uri $uri/ @rewrite;\n    location @rewrite {\n        rewrite ^/(.*)$ /index.php?_url=/$1;\n    }\n    location ~* ^/(upload|favicon.png)/(.+)$ {\n        root $root_path;\n    }\n    location /wss {\n        proxy_pass http://demo_php_websocket;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "Upgrade";\n        proxy_set_header Connection "keep-alive";\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n    location ~ \\.php$ {\n        fastcgi_pass   unix:/run/php/php7.4-fpm.sock;\n        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;\n        include        fastcgi_params;\n    }\n}\n```\n\n## SSL证书\n```bash\ncertbot --nginx\n```\n\n<br/><br/>'},b6ff:function(n,e){n.exports="### 连表\n```python\nfrom model.demo import Demo\n# 对象\ndemo = Demo()\ndemo.Table('test1 as a')\ndemo.LeftJoin('test2 as b', 'a.id=b.uid')\ndemo.Columns('a.title', 'b.name')\nsql, args = demo.SelectSQL()\nself.Print(sql, args)\n```\n\n### 其他\n```python\n# INNER JOIN \ndemo.Join()\n# LEFT JOIN\ndemo.LeftJoin()\n# RIGHT JOIN\ndemo.RightJoin()\n# FULL JOIN\ndemo.FullJoin()\n```"},b95b:function(n,e){n.exports="## 引入\n```javascript\nimport RegRight from '@/library/reg/right'\nimport RegTest from '@/library/reg/test'\n```\n\n## 公共\n```typescript\nRegRight(\n  name: string,     //项目: uname、tel、email、vcode、passwd\n  val: string,      //内容\n  isMsg?: boolean,  //错误提示\n);\n```\n\n## 验证\n```typescript\nRegTest(\n  reg: RegExp,     //正则\n  val: string,     //内容\n);\n```\n"},bb50:function(n,e){n.exports="### 更新\n```php\nuse Model\\Demo;\n// 对象\n$demo = new Demo();\n$demo->Set(['title'=>'PHP-更新']);\n$demo->Where('uid=?', $id);\n$num = $demo->Update();\nself::Print($num);\n```\n\n### 生成SQL\n```php\nlist($sql, $args) = $demo->UpdateSQL();\n```"},bfc8:function(n,e){n.exports='## 引入\n```go\nimport "webmis/util"\n```\n\n## Bool\n```go\n(&util.Type{}).Bool(val interface{})\n```\n\n## Int\n```go\n(&util.Type{}).Int(val interface{})\n```\n\n## Int64\n```go\n(&util.Type{}).Int64(val interface{})\n```\n\n## Float\n```go\n(&util.Type{}).Float(val interface{})\n```\n\n## Float64\n```go\n(&util.Type{}).Float64(val interface{})\n```\n\n## Uint64\n```go\n(&util.Type{}).Uint64(val interface{})\n```\n\n## 转换\n```go\n(&util.Type{}).ToType(tp string, val interface{})\n```\n- tp: string、int、int64、float、float64、uint64\n\n## Strval\n```go\n(&util.Type{}).Strval(val interface{})\n```\n\n## 获取类型\n```go\n(&util.Type{}).GetType(val interface{})\n```\n'},bfd9:function(n,e){n.exports='### 安装\n```bash\n# 下载\nwget https://mirrors.tuna.tsinghua.edu.cn/apache/kafka/2.7.0/kafka_2.13-2.7.0.tgz\n# 解压\ntar -xzf kafka_2.13-2.7.0.tgz\n# 移动到Opt目录\nmv kafka_2.13-2.7.0 /opt/kafka\n# 删除\nrm -fr kafka_2.13-2.7.0.tgz\n```\n\n<br/>\n\n### 认证\n**不建议使用，速度慢数据会丢失！**，推荐防火墙规则\n```bash\n# 允许\nfirewall-cmd --permanent --add-rich-rule="rule family="ipv4" source address="192.168.0.200" port protocol="tcp" port="9092" accept"\n# 禁止\nfirewall-cmd --permanent --add-rich-rule="rule family="ipv4" source address="192.168.0.200" port protocol="tcp" port="9092" reject"\n# 查看\nfirewall-cmd --zone=public --list-rich-rules\n# 生效\nfirewall-cmd --reload\n```\n\n<br/>\n\n### 服务端\n```bash\n# ZooKeeper 服务\n./bash zookeeper\n# Kafka 服务\n./bash kafka\n```\n\n### 主题-日志\n```bash\n# 创建主题\n./bash topicCreate\n# 分区\n./bash topicPartitions\n\n```\n\n### 消费者\n```bash\n# 运行\n./bash logsServe\n```\n\n**生产者**\n```bash\n# 日志\n(&service.Logs{}).Log("日志")\n# 其它\n(&service.Logs{}).Info("信息")\n(&service.Logs{}).Action("操作")\n(&service.Logs{}).Error("错误")\n```\n'},c130:function(n,e){n.exports="## 引入\n```java\nimport webmis.service.AdminToken;\n```\n\n## 验证\n```java\nAdminToken.verify(String token, String urlPerm);\n```\n\n## 权限数组\n```java\nAdminToken.Perm(String token);\n```\n\n## 生成\n```java\nAdminToken.Create(HashMap<String, Object> data);\n```\n\n## 获取\n```java\nAdminToken.Token(String token);\n```\n"},c2cc:function(n,e){n.exports='## Docker容器\n是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的`Linux`机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。\n\n### 1.1 安装\n```bash\n# CentOS\nyum install docker\n# 开机启动\nsystemctl enable docker\n# 启动\nsystemctl start docker\nsystemctl start containerd\n```\n**配置**\n```bash\n# 创建组\nsudo groupadd docker \n# 添加当前用户到组\nsudo usermod -aG docker $USER\n# 激活\nnewgrp docker\n# 重启系统\nreboot\n```\n**国内镜像**\n```bash\nsudo vi /etc/docker/daemon.json\n```\n```bash\n{\n  "registry-mirrors": ["https://xxx.mirror.aliyuncs.com"]\n}\n```\n**重启**\n```bash\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n### 1.2 镜像管理\n```bash\n# 搜索\ndocker search centos\n# 下载\ndocker pull centos\n# 查看\ndocker images\n# 删除\ndocker rmi centos\n```\n\n### 1.3 运行镜像\n```bash\n# 运行\ndocker run -it centos\n\n# 运行一个新容器，同时为它命名、端口映射、文件夹映射\ndocker run --name redmine -p 9003:80 -p 9023:22 -d -v /var/redmine/files:/redmine/files -v /var/redmine/mysql:/var/lib/mysql centos\n\n# 退出并停止\nexit\n\n# 如何退出容器而不停止容器？\nCtrl+P+Q\n```\n\n### 1.4 容器管理\n```bash\n# 查看/停止/启动/杀死/移除\ndocker ps -a\ndocker stop 容器ID\ndocker start 容器ID\ndocker kill 容器ID\ndocker rm 容器ID\n\n# 查看容器信息\ndocker inspect 容器ID\n\n# 进入正在运行的容器\ndocker attach 容器ID\n\n# 在运行的容器中执行命令\ndocker exec -it 容器ID /bin/bash\n\n# 将容器储存为镜像\ndocker commit 容器ID 名称\n```\n\n### 1.5 镜像迁移\n```bash\n# 保存\ndocker save 镜像名称 > /home/save.tar\n# 复制的服务器\nscp /home/save.tar root@IP:/home/\n# 导入到镜像\ndocker load < /home/save.tar\n```\n\n### 1.6 容器-导出/导入\n```bash\ndocker export 容器ID > /home/export.tar\ndocker import export.tar\n```\n\n### 1.7 容器内部文件-拷贝/删除\n```bash\ndocker cp 容器ID:路径 ./\ndocker rm 容器ID:路径 ./\n```\n\n## 案例：Ubuntu+Nginx+Go\n### Dockerfile\n```bash\nFROM ubuntu:latest\n\nMAINTAINER webmis.vip\n\n# 升级系统、访问https\nRUN apt update && apt install ca-certificates curl -y\n# 安装Nginx\nRUN apt install nginx -y\n# 安装Go\nRUN apt install golang -y\nRUN go env -w GO111MODULE=on && go env -w GOPROXY=https://goproxy.cn,direct\n```\n\n### 构建镜像\n```bash\ndocker build -t nginx:go .\n```\n\n### 运行新容器\n```bash\ndocker run -itd --name ubuntu-go\n```\n**启动Nginx**\n```bash\nservice nginx start\n```'},c687:function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Url;\n```\n\n## 编码\n```java\nUrl.Encode(String data);\n```\n\n## 解码\n```java\nUrl.Decode(String data);\n```\n"},c698:function(n,e){n.exports="## 引入\n```python\nfrom util.hash import Hash\n```\n\n## Md5\n```python\nHash.Md5(data: str)\n```\n\n## Sha256\n```python\nHash.Sha256(data: str)\n```\n\n## HmacSha1\n```python\nHash.HmacSha1(data: str, key: bytes)\n```\n\n## HmacSha256\n```python\nHash.HmacSha256(data: str, key: bytes)\n```\n\n## Bytes转为16进制\n```python\nHash.HmacSha256(byte: bytes)\n```\n"},c718:function(n,e){n.exports='# Flutter开发环境\n\n## ArchLinux\n#### 1) 安装Git\n```bash\npacman -S git\n```\n\n#### 2) 安装JavaJdk\n```bash\npacman -S jdk-openjdk jre-openjdk maven\n# 查看\njava -version\njavac -version\n```\n\n#### 3) 安装AndroidSdk\n```bash\npacman -S android-studio\n# SDK目录\nmkdir /opt/android-sdk\nchmod -R 777 /opt/android-sdk\n```\n**环境变量** ( vi /etc/profile )\n```bash\nexport ANDROID_HOME=/opt/android-sdk\nexport PATH=$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools:$PATH\n```\n**刷新**\n```bash\nsource /etc/profile\n```\n**SDK Manager**\n打开 AndroidStudio > Configure > SDK Manager\n```bash\n# SDK Location\n/opt/android-sdk\n# SDK Platforms\nAndroid 10.0\nAndroid 6.0\n# SDK Tools\nAndroid SDK Build-Tools\nAndroid SDK Command-line Tools\nAndroid Emulator\nAndroid SDK Platform-Tools\n```\n\n#### 4) 模拟器\n```bash\npacman -S genymotion\n```\n- Custom Phone 6.0  480x854  160-MDPI\n\n\n#### 5) 安装Flutter\n```bash\npacman -S flutter dart\n# 目录权限\nchmod -R 777 /opt/flutter\n```\n**中国镜像** ( vi /etc/profile )\n```bash\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\n```\n\n#### 6) 依赖\n```bash\nflutter doctor -v\n```\n\n<br/>\n\n## Windows\n#### 1) 安装Git\n- 下载 [Git](https://git-scm.com/download/win)\n- 安装: 64位版 > 重启系统\n- VsCode: "ctrl+`" > "终端" > "powershell" > "选择默认 shell" > "Git Bash" > 重启\n- 终端输入: "cmd" 和 "bash" 可相互切换\n\n#### 2) 安装JavaJdk\n- [OpenJdk8](https://jdk.java.net/java-se-ri/8-MR3)\n- 解压: "openjdk-8u41-b04-windows-i586-14_jan_2020.zip" 到 "D:\\server\\jdk8"\n- 搜索: "环境变量" > "新建" > 变量名: "JAVA_HOME" 变量值: "D:\\server\\jdk"\n- 搜索: "环境变量" > "Path" > "添加" > "%JAVA_HOME%\\bin"\n- 查看: "java –version" 和 "javac –version"\n\n#### 3) 安装AndroidSdk\n- [AndroidStudio](http://developer.android.com/sdk/index.html)\n- 安装: "android-studio-ide-191.5977832-windows.exe" 到 "D:\\server\\Android Studio"\n- 配置: "Configure" > "Settings" > "System Settings" > "HTTP Proxy" > Automatic = "mirrors.neusoft.edu.cn:80"\n- 配置: "Configure" > "Settings" > "System Settings" > "Android SDK" > "D:\\server\\android-sdk"\n- 搜索: "环境变量" > "新建" > 变量名: "ANDROID_HOME" 变量值: "D:\\server\\android-sdk"\n- 搜索: "环境变量" > "Path" > "添加" > "%ANDROID_HOME%\\tools"\n- 搜索: "环境变量" > "Path" > "添加" > "%ANDROID_HOME%\\platform-tools"\n\n#### 4) 模拟器\n- [Genymotion](https://www.genymotion.com/download/)\n\n#### 5) 安装Flutter\n```bash\ncd D:\ncd server\ngit clone https://github.com/flutter/flutter.git -b stable --depth 1\n```\n**环境变量**\n- 搜索: "环境变量" > "新建" > 变量名: "PUB_HOSTED_URL" 变量值: "https://pub.flutter-io.cn"\n- 搜索: "环境变量" > "新建" > 变量名: "FLUTTER_STORAGE_BASE_URL" 变量值: "https://storage.flutter-io.cn"\n- 搜索: "环境变量" > "Path" > "添加" > "D:\\server\\flutter\\bin"\n\n#### 6) 依赖\n```bash\nflutter doctor -v\n```\n\n<br/>\n\n## MacOS\n#### 1) 安装Git\n```bash\ngit\n```\n\n#### 2) 安装XCode\n- 应用商店下载\n\n#### 3) 模拟器\n```bash\nopen -a Simulator\n```\n\n#### 4) Flutter\n```bash\ncd $HOME\ngit clone https://github.com/flutter/flutter.git -b stable --depth 1\n```\n**环境变量**( vi $HOME/.bash_profile )\n```bash\nexport PUB_HOSTED_URL=https://pub.flutter-io.cn\nexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn\nexport PATH=PATH_TO_FLUTTER_GIT_DIRECTORY/flutter/bin:$PATH\nexport PATH=`pwd`/flutter/bin:$PATH\n```\n**开机启动**( vi $HOME/.zshrc )\n```bash\nsource $HOME/.bash_profile\n```\n\n#### 5) 依赖\n```bash\n# 检测环境\nflutter doctor -v\n# xcode依赖\nsudo gem install cocoapods\n```\n\n#### 6) 运行\n```bash\nflutter run\n# 或者\nflutter run -d 设备ID\n# 查看设备ID\nflutter doctor -v\n```\n\n<br/><br/>'},c9c0:function(n,e){n.exports="# WebMIS-Flutter\n采用Flutter开发，包括APP自动更新、Socket通信、底部导航菜单、PageView页面布局、Scroller滑动、Popup弹出层等功能。\n\n<br/>\n\n## 一、下载\n```bash\ngit clone https://github.com/webmiss/base.git --depth=1\n```\n- WebMIS-Base > flutter\n\n<br/>\n\n## 二、运行\n#### Bash命令\n```bash\n# 依赖包\n./bash install\n# 运行\n./bash serve\n```\n\n#### Cmd命令\n```bash\n# 依赖包\n.\\cmd install\n# 运行\n.\\cmd serve\n```\n\n<br/><br/>"},ca77:function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Base64;\n```\n\n## String To Bytes\n```java\nBase64.ToByte(String data);\n```\n\n## Bytes To String\n```java\nBase64.ToStr(byte[] data);\n```\n\n## 编码\n```java\nBase64.Encode(byte[] data);\n```\n\n## 解码\n```java\nBase64.UrlEncode(byte[] data);\n```\n\n## 编码(URL)\n```java\nBase64.UrlEncode(byte[] data);\n```\n\n## 解码(URL)\n```java\nBase64.UrlDecode(String data);\n```\n\n## 压缩\n```java\nBase64.Compress(byte[] data);\n```\n\n## 解压\n```java\nBase64.UnCompress(byte[] data);\n```\n"},cb4b:function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Dynamic;\n```\n\n## 泛型\n```java\nDynamic<T>\n```\n"},cd11:function(n,e){n.exports='## 引入\n```java\nimport webmis.library.Qrcode;\n```\n\n## 生成\n```java\nHashMap<String, Object> param = new HashMap<String, Object>();\nparam.put("text", "");                      //内容\nparam.put("size", 200);                     //大小\nparam.put("tmpPath", "upload/tmp/");        //缓存目录\nparam.put("filename", _getName()+".png");   //文件名\nQrcode.Create(param)\n```\n\n## 识别\n```java\nQrcode.Scan("public/upload/qrcode/demo.png");\n```\n'},cd49:function(n,e,t){"use strict";t.r(e);t("e260"),t("e6cf"),t("cca6"),t("a79d");var a=t("7a23"),o={id:"app"},r={class:"app_top_body"},i={class:"body app_top flex"},s=Object(a["e"])("div",{class:"app_logo"},null,-1),l={class:"app_nav_body"},p={class:"app_nav"},d=["onClick"],c={class:"app_top_tool flex"},m=Object(a["e"])("i",{class:"icon ico_github"},null,-1),u=[m],b={class:"qrcode"},h=Object(a["e"])("div",{class:"ico center"},[Object(a["e"])("i",{class:"icon ico_qrcode"})],-1),g={class:"app_qrcode_box"},f={class:"app_qrcode_body"},v=Object(a["e"])("div",{class:"arrow arrow_up"},null,-1),y=["src"],x=Object(a["e"])("p",null,"手机扫描二维码",-1),S={class:"menus"},w=Object(a["e"])("i",{class:"icon ico_menus"},null,-1),k=[w],_={class:"app_body"},j={class:"app_content body flex"},T=["onClick"],O=Object(a["e"])("i",{class:"icon ico_arrow_down center"},null,-1),E=[O],D=["onClick"],L={class:"app_right"},M={class:"app_addr flex"},A={class:"app_html"},P=["innerHTML"],C={key:1,class:"loading center"},I={class:"app_copy"},N={class:"app_tools"},B={class:"weixin"},H=Object(a["e"])("i",{class:"icon ico_weixin"},null,-1),$={class:"app_tools_box"},R={class:"app_tools_body"},U=Object(a["e"])("div",{class:"arrow arrow_right"},null,-1),F=["src"],G=Object(a["e"])("p",null,"联系我们",-1);function q(n,e,t,m,w,O){return Object(a["p"])(),Object(a["d"])("div",o,[Object(a["e"])("div",r,[Object(a["e"])("div",i,[s,Object(a["e"])("div",l,[Object(a["e"])("ul",p,[(Object(a["p"])(!0),Object(a["d"])(a["a"],null,Object(a["t"])(n.nav,(function(e,t){return Object(a["p"])(),Object(a["d"])("li",{key:t,class:Object(a["k"])(e.value==n.pos[0]?"active":""),onClick:function(t){return n.menusClick([e.value,e.children[0].value,e.children[0].children[1].value])}},Object(a["w"])(e.label),11,d)})),128))])]),Object(a["e"])("ul",c,[Object(a["e"])("li",null,[Object(a["e"])("div",{class:"ico center",onClick:e[0]||(e[0]=function(e){return n.openUrl("https://github.com/webmiss/base")})},u)]),Object(a["e"])("li",b,[h,Object(a["e"])("div",g,[Object(a["e"])("div",f,[v,Object(a["e"])("img",{src:n.apiUrl+"index/qrcode/docs"},null,8,y),x])])]),Object(a["e"])("li",S,[Object(a["e"])("div",{class:"ico center",onClick:e[1]||(e[1]=function(e){return n.isShow=!n.isShow})},k)])])])]),Object(a["e"])("div",_,[Object(a["e"])("div",j,[Object(a["e"])("div",{class:"app_menus_bg",style:Object(a["l"])({display:n.isShow?"block":"none"}),onClick:e[2]||(e[2]=function(e){return n.isShow=!n.isShow})},null,4),Object(a["e"])("div",{class:"app_left",style:Object(a["l"])({display:n.isShow?"block":"none"})},[(Object(a["p"])(!0),Object(a["d"])(a["a"],null,Object(a["t"])(n.menus,(function(e,t){return Object(a["p"])(),Object(a["d"])(a["a"],{key:t},[Object(a["e"])("div",{class:"app_menus_title flex",onClick:function(n){return e.checked=!e.checked}},[Object(a["e"])("h2",null,Object(a["w"])(e.label),1),Object(a["e"])("span",{style:Object(a["l"])({transform:e.checked?"rotate(-0deg)":"rotate(-180deg)"})},E,4)],8,T),Object(a["A"])(Object(a["e"])("div",null,[(Object(a["p"])(!0),Object(a["d"])(a["a"],null,Object(a["t"])(e.children,(function(t,o){return Object(a["p"])(),Object(a["d"])("div",{key:o,class:Object(a["k"])(["app_menus_li",t.value==n.pos[2]?"active":""]),onClick:function(a){return n.menusClick([n.pos[0],e.value,t.value])}},[Object(a["e"])("h3",null,Object(a["w"])(t.label),1)],10,D)})),128))],512),[[a["y"],e.checked]])],64)})),128))],4),Object(a["e"])("div",L,[Object(a["e"])("div",M,[Object(a["e"])("span",null,Object(a["w"])(n.addr),1),Object(a["e"])("span",{class:"app_print",onClick:e[3]||(e[3]=function(){return n.clickPrint&&n.clickPrint.apply(n,arguments)})},"打印、下载")]),Object(a["e"])("div",A,[""!=n.docHtml?(Object(a["p"])(),Object(a["d"])("div",{key:0,id:"Print",class:"doc_html",innerHTML:n.docHtml},null,8,P)):(Object(a["p"])(),Object(a["d"])("div",C,"Loading..."))])])]),Object(a["e"])("div",I,Object(a["w"])(n.copy),1)]),Object(a["e"])("ul",N,[Object(a["e"])("li",B,[H,Object(a["e"])("div",$,[Object(a["e"])("div",R,[U,Object(a["e"])("img",{src:n.apiUrl+"index/qrcode/server1"},null,8,F),G])])])])])}var V=t("5f03"),J=[{label:"Vue",value:"vue",children:[{label:"Vue项目",value:"install",children:[{label:"开发环境",value:"install"},{label:"安装&运行",value:"index"},{label:"打包&发布",value:"build"}]},{label:"App组件",value:"app",children:[{label:"Chart 图表",value:"chart"},{label:"Loading 动画",value:"loading"},{label:"PageView 页面容器",value:"page-view"},{label:"ScrollView 滑动容器",value:"scroll-view"},{label:"Popup 弹出层",value:"popup"},{label:"Picker 选择器",value:"picker"},{label:"Swipe 轮播图",value:"swipe"},{label:"TabBar 导航菜单",value:"tabbar"},{label:"Touch 手势",value:"touch"}]},{label:"Admin组件",value:"admin",children:[{label:"Action 动作菜单",value:"action"},{label:"Dialog 对话框",value:"dialog"},{label:"Form 表单",value:"form"},{label:"Img 图片",value:"img"},{label:"Loading 动画",value:"loading"},{label:"Main 布局",value:"main"},{label:"Page 分页",value:"page"},{label:"Popup 弹出层",value:"popup"},{label:"Popover 弹出框",value:"popover"},{label:"ScrollView 滑动层",value:"scrollview"},{label:"Switch 开关",value:"switch"},{label:"Table 表格",value:"table"},{label:"Tag 标签",value:"tag"},{label:"TinyMCE 编辑器",value:"tinymce"},{label:"Tree 树形控件",value:"tree"},{label:"Uploader 上传",value:"uploader"}]},{label:"Library模块",value:"library",children:[{label:"Ui 界面",value:"ui"},{label:"Request 请求",value:"request"},{label:"Storage 本地硬盘",value:"storage"},{label:"Array 数组",value:"array"},{label:"Base64 编码&解码",value:"base64"},{label:"Device 设备",value:"device"},{label:"Down 文件下载",value:"down"},{label:"Html 标签",value:"html"},{label:"Price 金额",value:"price"},{label:"Reg 正则验证",value:"reg"},{label:"Tel 手机号码",value:"tel"},{label:"Time 时间",value:"time"},{label:"URL 编码&解码",value:"url"}]},{label:"Plus模块",value:"plus",children:[{label:"Plus 公共",value:"plus"},{label:"Camera 相机",value:"camera"},{label:"Img 图片",value:"img"},{label:"Map 地图",value:"map"},{label:"Notify 本地消息",value:"notify"}]}]},{label:"Flutter",value:"flutter",children:[{label:"Flutter项目",value:"install",children:[{label:"开发环境",value:"install"},{label:"安装&运行",value:"index"},{label:"打包&发布",value:"build"}]}]},{label:"Phalcon",value:"phalcon",children:[{label:"Phalcon项目",value:"install",children:[{label:"开发环境",value:"install"},{label:"安装&运行",value:"index"},{label:"打包&发布",value:"build"}]},{label:"Service 服务",value:"service",children:[{label:"基础 Base",value:"base"},{label:"数据 Data",value:"data"},{label:"日志 Logs",value:"logs"},{label:"验证 Token",value:"token"},{label:"通信 Socket",value:"socket"}]},{label:"ORM 数据库",value:"db",children:[{label:"模型 Model",value:"model"},{label:"查询 Select",value:"select"},{label:"插入 Insert",value:"insert"},{label:"更新 Update",value:"update"},{label:"删除 Delete",value:"delete"},{label:"连表 Join",value:"join"},{label:"事务 Commit",value:"commit"}]},{label:"Library 类库",value:"library",children:[{label:"缓存 Redis",value:"redis"},{label:"通信 WebSocket",value:"socket"},{label:"安全验证 Safety",value:"safety"},{label:"文件上传 Upload",value:"upload"},{label:"二维码 Qrcode",value:"qrcode"}]},{label:"Util 工具",value:"util",children:[{label:"常用工具",value:"util"},{label:"编码/解码 URL",value:"url"},{label:"编码/解码 Base64",value:"base64"},{label:"加密算法 Hash",value:"hash"},{label:"类型转换 Type",value:"type"},{label:"设备信息 Os",value:"os"}]}]},{label:"Python",value:"python",children:[{label:"Python项目",value:"install",children:[{label:"开发环境",value:"install"},{label:"安装&运行",value:"index"},{label:"打包&发布",value:"build"}]},{label:"Service 服务",value:"service",children:[{label:"基础 Base",value:"base"},{label:"数据 Data",value:"data"},{label:"日志 Logs",value:"logs"},{label:"验证 Token",value:"token"},{label:"通信 Socket",value:"socket"}]},{label:"ORM 数据库",value:"db",children:[{label:"模型 Model",value:"model"},{label:"查询 Select",value:"select"},{label:"插入 Insert",value:"insert"},{label:"更新 Update",value:"update"},{label:"删除 Delete",value:"delete"},{label:"连表 Join",value:"join"},{label:"事务 Commit",value:"commit"}]},{label:"Library 类库",value:"library",children:[{label:"缓存 Redis",value:"redis"},{label:"通信 WebSocket",value:"socket"},{label:"安全验证 Safety",value:"safety"},{label:"文件上传 Upload",value:"upload"},{label:"二维码 Qrcode",value:"qrcode"}]},{label:"Util 工具",value:"util",children:[{label:"常用工具",value:"util"},{label:"编码/解码 URL",value:"url"},{label:"编码/解码 Base64",value:"base64"},{label:"加密算法 Hash",value:"hash"},{label:"类型转换 Type",value:"type"},{label:"设备信息 Os",value:"os"}]}]},{label:"SpringBoot",value:"java",children:[{label:"Java项目",value:"install",children:[{label:"开发环境",value:"install"},{label:"安装&运行",value:"index"},{label:"打包&发布",value:"build"}]},{label:"Service 服务",value:"service",children:[{label:"基础 Base",value:"base"},{label:"数据 Data",value:"data"},{label:"日志 Logs",value:"logs"},{label:"验证 Token",value:"token"},{label:"通信 Socket",value:"socket"}]},{label:"ORM 数据库",value:"db",children:[{label:"模型 Model",value:"model"},{label:"查询 Select",value:"select"},{label:"插入 Insert",value:"insert"},{label:"更新 Update",value:"update"},{label:"删除 Delete",value:"delete"},{label:"连表 Join",value:"join"},{label:"事务 Commit",value:"commit"}]},{label:"Library 类库",value:"library",children:[{label:"缓存 Redis",value:"redis"},{label:"通信 WebSocket",value:"socket"},{label:"安全验证 Safety",value:"safety"},{label:"文件上传 Upload",value:"upload"},{label:"二维码 Qrcode",value:"qrcode"}]},{label:"Util 工具",value:"util",children:[{label:"常用工具",value:"util"},{label:"编码/解码 URL",value:"url"},{label:"编码/解码 Base64",value:"base64"},{label:"加密算法 Hash",value:"hash"},{label:"类型转换 Type",value:"type"},{label:"设备信息 Os",value:"os"},{label:"泛型 Dynamic",value:"dynamic"},{label:"请求响应 Http",value:"http"}]}]},{label:"Gin",value:"gin",children:[{label:"Gin项目",value:"install",children:[{label:"开发环境",value:"install"},{label:"安装&运行",value:"index"},{label:"打包&发布",value:"build"}]},{label:"Service 服务",value:"service",children:[{label:"基础 Base",value:"base"},{label:"数据 Data",value:"data"},{label:"日志 Logs",value:"logs"},{label:"验证 Token",value:"token"},{label:"通信 Socket",value:"socket"}]},{label:"ORM 数据库",value:"db",children:[{label:"模型 Model",value:"model"},{label:"查询 Select",value:"select"},{label:"插入 Insert",value:"insert"},{label:"更新 Update",value:"update"},{label:"删除 Delete",value:"delete"},{label:"连表 Join",value:"join"},{label:"事务 Commit",value:"commit"}]},{label:"Library 类库",value:"library",children:[{label:"缓存 Redis",value:"redis"},{label:"通信 WebSocket",value:"socket"},{label:"安全验证 Safety",value:"safety"},{label:"文件上传 Upload",value:"upload"},{label:"二维码 Qrcode",value:"qrcode"},{label:"事件流 Kafka",value:"kafka"}]},{label:"Util 工具",value:"util",children:[{label:"常用工具",value:"util"},{label:"编码/解码 URL",value:"url"},{label:"编码/解码 Base64",value:"base64"},{label:"加密算法 Hash",value:"hash"},{label:"类型转换 Type",value:"type"},{label:"设备信息 Os",value:"os"}]}]},{label:"Linux",value:"linux",children:[{label:"Linux文档",value:"shell",children:[{label:"Shell基础",value:"index"},{label:"SSL免费证书",value:"ssl"},{label:"VBox安装MacOS",value:"macos"},{label:"Docker 容器",value:"docker"},{label:"MariaDB 数据库",value:"mariadb"},{label:"MaxScale 中间件",value:"maxscale"},{label:"Pulsar 消息列队",value:"pulsar"},{label:"ElasticSearch 全文搜索",value:"elasticsearch"}]},{label:"Service",value:"service",children:[{label:"FTP 文件传输",value:"ftp"}]},{label:"CentOS",value:"centos",children:[{label:"基础配置",value:"config"},{label:"LNMP环境",value:"lnmp"}]},{label:"Ubuntu",value:"ubuntu",children:[{label:"基础配置",value:"config"},{label:"LNMP环境",value:"lnmp"}]},{label:"ArchLinux",value:"archlinux",children:[{label:"安装&配置",value:"install"},{label:"GNOME3桌面",value:"gnome"},{label:"Nginx+PHP+MariaDB",value:"lnmp"}]}]}],z=t("b85c"),Q=(t("1276"),t("ac1f"),function(n,e){var t,a="js"==e||/js$/i.test(n),o=document.getElementsByTagName(a?"script":"link"),r=Object(z["a"])(o);try{for(r.s();!(t=r.n()).done;){var i=t.value,s=a?"src":"href";if(-1!=i[s].indexOf(n))return!0}}catch(l){r.e(l)}finally{r.f()}return!1}),W=function(n,e,t){var a=[],o=!1;e=e||!1;var r,i=Object(z["a"])(n);try{for(i.s();!(r=i.n()).done;){var s=r.value;if(o=Q(s,t),e&&(o=!1),a=s.split("."),"js"==a[a.length-1]||"js"==t){if(!o){var l=document.createElement("script");l.setAttribute("src",s),document.body.appendChild(l)}}else if(("css"==a[a.length-1]||"css"==t)&&!o){var p=document.createElement("link");p.setAttribute("rel","stylesheet"),p.setAttribute("href",s),document.body.appendChild(p)}}}catch(d){i.e(d)}finally{i.f()}},Y=t("7c5c"),K=t("add5"),X=t.n(K),Z=Object(a["f"])({name:"APP",components:{},data:function(){var n=V["a"].apiUrl,e=V["a"].copy,t=!0,a=J,o=[],r=["vue","install","index"],i="",s="";return{apiUrl:n,copy:e,isShow:t,nav:a,menus:o,pos:r,addr:i,docHtml:s}},watch:{$route:function(n,e){n.path&&window._hmt&&window._hmt.push(["_trackPageview",n.fullPath])}},mounted:function(){var n=this;setTimeout((function(){var e=n.$route.params;n.pos=e.m1&&e.m2&&e.m3?[e.m1,e.m2,e.m3]:n.pos,n.menusClick(n.pos)}),400)},methods:{menusClick:function(n){for(var e in this.pos=n,J)if(J[e].value==n[0]){this.menus=J[e].children;break}for(var t in this.menus)this.menus[t].checked=this.menus[t].value==n[1];var a="/"+n[0]+"/"+n[1]+"/"+n[2];this.$router.push(a),this.openDocs(a)},openDocs:function(n){var e=this;this.addr="";var a=[],o=[];for(var r in J)if(J[r].value==this.pos[0]){this.addr+=J[r].label+" > ",a=J[r].children;break}for(var i in a)if(a[i].value==this.pos[1]){this.addr+=a[i].label+" > ",o=a[i].children;break}for(var s in o)if(o[s].value==this.pos[2]){this.addr+=o[s].label,document.title=o[s].label+"-WebMIS";break}this.docHtml="";try{var l=t("828a")("./docs".concat(n,".md"));setTimeout((function(){e.docHtml=Y["marked"].parse(l)}),1e3)}catch(p){this.docHtml="没有文件!"}W(["/docs/prism.css","/docs/prism.js"],!0)},clickPrint:function(){X()({printable:"Print",type:"html",scanStyles:!1,css:"/docs/print.css"})},openUrl:function(n){window.location.href=n}}});t("8d8a");Z.render=q;var nn=Z,en=(t("d3b7"),t("3ca3"),t("ddb0"),t("6c02")),tn=[{path:"/",name:"index",component:function(){return t.e("chunk-502ec42e").then(t.bind(null,"d504"))}},{path:"/refresh",name:"Refresh",component:function(){return t.e("chunk-0ba47dcd").then(t.bind(null,"ea97"))}},{path:"/:m1/:m2/:m3",name:"docs",component:function(){return t.e("chunk-502ec42e").then(t.bind(null,"d504"))}}],an=Object(en["a"])({history:Object(en["b"])("/"),routes:tn}),on=an,rn=t("5502"),sn=Object(rn["a"])({state:{},mutations:{},actions:{},modules:{}}),ln=Object(a["c"])(nn).use(sn).use(on).mount("#app");e["default"]=ln},cd8f:function(n,e){n.exports="### 事务\n```php\nuse Model\\Demo;\n\n$model = new Demo();\n$conn = $model->DBConn();\ntry {\n  // 开始\n  $conn->begin();\n  // SQL1\n  $m1 = new Demo();\n  $m1->Values(['uid'=>null,'title'=>'PHP-事件']);\n  list($sql, $args) = $m1->InsertSQL();\n  $conn->execute($sql, $args);\n  $id = $model->LastInsertId($conn);\n  // SQL2\n  $m2 = new Demo();\n  $m2->Where('uid=?', $id);\n  list($sql, $args) = $m2->DeleteSQL();\n  $conn->execute($sql, $args);\n  // 提交\n  $conn->commit();\n} catch (\\Exception $e) {\n  $conn->rollback();\n}\n```"},cf58:function(n,e){n.exports="## 引入\n```javascript\nimport DownBlob from '@/library/down/blob'\nimport DownFile from '@/library/down/file'\n```\n\n## Blob\n```typescript\nDownBlob(\n  url: string,  //数据地址\n  param: any,   //Post参数\n);\n```\n\n## 文件\n```typescript\nDownFile(\n  url: string,    //文件地址\n  name?: string,  //重命名\n  ext?: string,   //文件后缀\n);\n```\n\n\n"},d1b1:function(n,e){n.exports="## 引入\n```javascript\nimport Mobile from '@/library/device/mobile'\n```\n\n## 手机系统\n```typescript\nMobile();\n```\n"},d25b:function(n,e){n.exports='## 软件仓库\n```bash\n# Epel源\ndnf install epel-release -y\n# PHP7.4\ndnf install http://rpms.remirepo.net/enterprise/remi-release-8.rpm -y\n```\n\n## 交换空间\n```bash\n# 查看\nswapon --show\nfree -m\n# 创建\nfallocate -l 8G /swapfile\n# 权限\nchmod 600 /swapfile\n# 设置、激活\nmkswap /swapfile\nswapon /swapfile\n# 开机挂载\nvi /etc/fstab\n```\n- 末尾添加"/swapfile swap swap defaults 0 0"\n#### 阿里云服务器\n```bash\nvi /etc/sysctl.conf\n```\n- vm.swappiness = 60\n- reboot\n\n## 防火墙( Firewall )\n```bash\n# 开机启动\nsystemctl enable firewalld\n# 启动\nsystemctl start firewalld\n# 重启\nfirewall-cmd --reload\n```\n\n#### 1) 服务\n```bash\n# 允许\nfirewall-cmd --permanent --zone=public --add-service=http\nfirewall-cmd --permanent --zone=public --add-service=https\nfirewall-cmd --permanent --zone=public --add-service=mysql\n# 禁用\nfirewall-cmd --permanent --zone=public --remove-service=mysql\n```\n\n#### 2) 端口\n```bash\n# 允许\nfirewall-cmd --permanent --zone=public --add-port=8080/tcp\n# 禁用\nfirewall-cmd --permanent --zone=public --remove-port=8080/tcp\n```\n\n#### 3) 查看\n```bash\n# 所以规则\nfirewall-cmd --zone=public --list-all\n# 永久选项所支持的服务\nfirewall-cmd --permanent --get-services\n# 支持的永久区域\nfirewall-cmd --permanent --get-zones\n# 默认区域\nfirewall-cmd --get-default-zone\n# 服务状态\nfirewall-cmd --query-service=http\n```'},d4a4:function(n,e){n.exports='### 创建模型\n**model/demo.go**\n```go\npackage model\n\ntype Demo struct {\n\tModel\n}\n\n/* 构造函数 */\nfunc (m *Demo) New() *Demo {\n\tm.Table("test")\n\treturn m\n}\n```\n\n### 使用\n```go\nimport "webmis/model"\n// 对象\nmodel := (&models.Demo{}).New()\n```\n\n### 连接\n```go\nmodel.DBConn()\n```\n\n### 查询\n```go\nmodel.Query(conn *sql.DB, sql string, args []interface{})\n```\n\n### 执行\n```go\nmodel.Exec(conn *sql.DB, sql string, args []interface{})\n```\n'},d4f6:function(n,e){n.exports='## 引入\n```go\nimport "webmis/service"\n```\n\n## 访问日志\n```go\n(&service.Logs{}).Log(data interface{})\n```\n\n## 信息日志\n```go\n(&service.Logs{}).Info(data interface{})\n```\n\n## 操作日志\n```go\n(&service.Logs{}).Action(data interface{})\n```\n\n## 错误日志\n```go\n(&service.Logs{}).Error(data interface{})\n```\n\n## 其它\n```go\n(&service.Logs{}).Writer(text []byte)\n```\n'},d542:function(n,e){n.exports='## 引入\n```go\nimport "webmis/service"\n```\n\n## 验证\n```go\n(&service.AdminToken{}).Verify(token string, urlPerm string)\n```\n\n## 权限数组\n```go\n(&service.AdminToken{}).Perm(token string)\n```\n\n## 生成Token\n```go\n(&service.AdminToken{}).Create(data map[string]interface{})\n```\n\n## Token数据\n```go\n(&service.AdminToken{}).Token(token string)\n```\n'},d553:function(n,e){n.exports='# 服务器环境\n\n## CentOS\n```bash\n# Python3\ndnf install python3-devel -y\npip3 install uwsgi\n# 命令\nln -s /usr/bin/python3 /usr/bin/python\nln -s /usr/bin/pip3 /usr/bin/pip\n# 查看版本\npython -V\n```\n\n## Ubuntu\n```bash\napt install python3-dev -y\npip install uwsgi\n```\n\n## 运行\n```bash\n# 进入项目\ncd /xxx/python\nmkdir public/upload\nchmod -R 777 public/upload\n# 依赖包\n./bash install\n# 启动\n./bash start\n```\n## 开机启动\n```bash\n# 权限\nchmod +x /etc/rc.d/rc.local\n# 编辑文件\nvi /etc/rc.d/rc.local\n```\n- cd /xxx/python/ && ./bash start\n\n<br/>\n\n## Nginx虚拟主机\n``` nginx\nupstream demo_flask {\n    server unix:///home/www/base/python/tmp/web.sock;\n}\nupstream demo_python_websocket {\n    server 127.0.0.1:9011;\n}\n\nserver {\n    listen       80;\n    listen       [::]:80;\n    server_name  demo-python.webmis.vip;\n    set $root_path /home/www/base/python/public;\n    root $root_path;\n    index index.html;\n\n    charset utf-8;\n\n    location / {\n        uwsgi_pass  demo_flask;\n        uwsgi_send_timeout 60;\n        uwsgi_connect_timeout 60;\n        uwsgi_read_timeout 60;\n        include /etc/nginx/uwsgi_params;\n    }\n    location ~* ^/(upload|favicon.png)/(.+)$ {\n        root $root_path;\n    }\n    location /wss {\n        proxy_pass http://demo_python_websocket;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "Upgrade";\n        proxy_set_header Connection "keep-alive";\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n}\n```\n\n## SSL证书\n```bash\ncertbot --nginx\n```\n\n<br/><br/>'},d8bb:function(n,e){n.exports="## 引入\n```javascript\nimport wmLoading from '@/components/loading/index.vue'\n```\n\n## Loading\n```html\n<wm-loading></wm-loading>\n```\n- theme: {type: String, default: 'flow'},             //样式: flow、swing、circle、wave\n- color: {type: String, default: Env.themes.primary}, //颜色\n\n"},d95b:function(n,e){n.exports="## 引入\n```javascript\nimport ArrayUnique from '@/library/array/unique'\n```\n\n## 数组去重复\n```typescript\nArrayUnique(\n  arr: Array<Object>,   //数组\n);\n```"},dac2:function(n,e){n.exports='### 事务\n```java\nimport webmis.model.Demo;\n\nObject[] sql;\nPreparedStatement ps;\nHashMap<String, Object> uData;\nDemo model = new Demo();\nConnection conn = model.DBConn();\ntry {\n  // 开始\n  conn.setAutoCommit(false);\n  // SQL1\n  Demo m1 = new Demo();\n  uData = new HashMap<String, Object>();\n  uData.put("id", uid);\n  m1.Values(uData);\n  sql = m1.InsertSQL();\n  ps = m1.Bind(conn, sql[0], sql[1]);\n  ps.executeUpdate();\n  int id = model.LastInsertId(ps);\n  ps.close();\n  // SQL2\n  Demo m2 = new Demo();\n  m2.Where("id=?", uid);\n  sql = m2.DeleteSQL();\n  ps = m2.Bind(conn, sql[0], sql[1]);\n  ps.executeUpdate();\n  ps.close();\n  // 提交\n  conn.commit();\n} catch (SQLException e) {\n  conn.rollback();\n} finally {\n  conn.close();\n}\n```'},db48:function(n,e){n.exports="## 引入\n```java\nimport webmis.util.Os;\n```\n\n## 操作系统\n```java\nos.System(String user_agent);\n```\n\n## 浏览器\n```java\nos.Browser(String user_agent);\n```\n"},dc14:function(n,e){n.exports="### 连表\n```php\nuse Model\\Demo;\n// 对象\n$demo = new Demo();\n$demo->Table('test1 as a');\n$demo->LeftJoin('test2 as b', 'a.id=b.uid');\n$demo->Columns('a.title', 'b.name');\nlist($sql, $args) = $demo->SelectSQL();\nself::Print($sql, $args);\n```\n\n### 其他\n```php\n// INNER JOIN \n$demo->Join();\n// LEFT JOIN\n$demo->LeftJoin();\n// RIGHT JOIN\n$demo->RightJoin();\n// FULL JOIN\n$demo->FullJoin();\n```"},dd49:function(n,e){n.exports="## 引入\n```javascript\nimport wmPopup from '@/components/popup/index.vue'\n```\n\n## 弹出层\n```html\n<wm-popup></wm-popup>\n```\n- show: {type: Boolean, default: false},        //是否显示\n- position: {type: String, default: 'center'},  //位置: left、right、top、bottom\n- opacity: {type: Number, default: 0.4},        //背景透明度\n- bgColor: {type: String, default: ''},         //内容背景颜色\n- bgClose: {type: Boolean, default: true},      //点击背景关闭\n- time: {type: Number, default: 400},           //动画时间\n\n"},de48:function(n,e){n.exports="## 引入\n```javascript\nimport wmLoading from '@/components/loading/index.vue'\n```\n\n## Loading\n```html\n<wm-loading></wm-loading>\n```\n- theme: {type: String, default: 'flow'},             //样式: flow、swing、circle、wave\n- color: {type: String, default: Env.themes.primary}, //颜色\n\n"},e157:function(n,e){n.exports='# GNOME3桌面\n\n## 安装\n``` bash\n# 桌面环境\npacman -S gnome\n# 登陆管理器\nsystemctl enable gdm\n```\n- 如果是VBox虚拟机需安装“virtualbox-guest-utils”\n\n<br/>\n\n#### 1) 创建桌面用户\n``` bash\nuseradd -m webmis\npasswd webmis\n```\n\n#### 2) 安装字体\n``` bash\npacman -S wqy-zenhei wqy-microhei\n```\n\n#### 3) 配置网络管理\n``` bash\npacman -S networkmanager\n# NetworkManager添加vpn拨号\npacman -S networkmanager-pptp\n\n# 开机启动\nsystemctl disable dhcpcd\nsystemctl enable NetworkManager\n\n# 重启\nreboot\n```\n<br/>\n\n## 键盘快捷键\n- 系统配置->键盘->自定义快捷键->添加\n- 终端( gnome-terminal )\n\n<br/>\n\n## 输入法\n``` bash\npacman -S ibus ibus-libpinyin\n```\n- 注:然后到“系统设置->区域和语言->输入源”,添加 中文(智能拼音) 后注销并重新登录!\n\n<br/>\n\n## 美化桌面\n``` bash\n# 优化工具\npacman -S gnome-tweaks\n```\n- 安装: 软件 > 实用工具 > 扩展\n- 下载: [Shell主题](https://github.com/webmiss/gnome-shell)\n- 字体: 优化工具 > 字体 > "文泉驿微米黑"\n- Shell主题: 优化工具 > 扩展 > User themes\n- \n\n<br/>\n\n## 常用软件\n#### 1) 浏览器\n``` bash\n# Chrome 开源版\npacman -S chromium\n# 视频解码\npacman -S gst-libav\n```\n\n#### 2) 软件仓库\n``` bash\n# 编辑\nvi /etc/pacman.conf\n\t[archlinuxcn]\n\tSigLevel = Optional TrustAll\n\tServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch\n# 安装\npacman -Syu yay\n# 编译环境\npacman -S linux-headers dkms fakeroot\n# 密钥\npacman -S archlinux-keyring archlinuxcn-keyring\n```\n\n#### 3) 扩展VI和文本编辑器\n``` bash\npacman -S vim gedit\n```\n\n#### 4) WEB开发工具\n``` bash\n# 安装\nyaourt -S sublime-text-dev\n# 启动方式\nvi /usr/bin/sublime\n\t#!/bin/sh\n\texport SUBLIME_HOME="/opt/sublime_text_3"\n\t$SUBLIME_HOME/sublime_text "$*"\n# 权限\nchmod -R 777 /usr/bin/sublime\n```\n\n#### 5) VirtualBox虚拟机\n``` bash\n# 安装\npacman -S virtualbox virtualbox-host-dkms virtualbox-guest-iso\n# 升级内核无法启动虚拟机\nmodprobe -a vboxnetadp vboxnetflt vboxdrv\n```\n\n#### 6) FFMPEG\n``` bash\n# 安装\npacman -S ffmpeg\n# TS合成Mp4\nffmpeg -i "concat:0.ts|1.ts" -c copy test.mp4\nffmpeg -i https://dh5.cntv.kcdnvip.com/asp/h5e/hls/2000/0303000a/3/default/49354b5f20674f5fa80d6ccefa076182/2000.m3u8 -vcodec copy -acodec copy test.mp4\n# 合并Mp4\nffmpeg -i 0.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts 0.ts\nffmpeg -i 1.mp4 -c copy -bsf:v h264_mp4toannexb -f mpegts 1.ts\nffmpeg -i "concat:0.ts|1.ts" -c copy -bsf:a aac_adtstoasc test.mp4\n# 转成MP4\nffmpeg -i xxx -y -c:v libx264 -c:a aac -strict -2 test.mp4\n# 缩放: 320×240、640×360、hd480、hd720、hd1080\nffmpeg -i test.mp4 -s hd480 480.mp4\n# Mp4转HLS：优化方案\nffmpeg -y -i 480.mp4 -vcodec copy -acodec copy -vbsf h264_mp4toannexb 480.ts\nffmpeg -i 480.ts -c copy -map 0 -f segment -segment_time 10 -segment_list vod/index.m3u8 vod/10s_%3d.ts\n# Mp4转HLS：简单低效\nffmpeg -i test.mp4 -c:v libx264 -c:a aac -strict -2 -f hls -bsf:v h264_mp4toannexb -hls_time 10 vod/index.m3u8\n```\n\n#### 7) 其它工具\n``` bash\n# 多线程下载工具\npacman -S axel\n# 下载视频\npip install you-get\n\n# SSH工具箱 (包括 ssh, scp)\npacman -S openssh\n\n# 远程桌面工具\npacman -S freerdp remmina\npacman -S vinagre\n# 禁用Vino加密\ngsettings set org.gnome.Vino require-encryption false\n\n# 解压软件\npacman -S p7zip file-roller unrar\n\n# 文件系统\npacman -S ntfs-3g dosfstools\n\n# 无线AP\npacman -S create_ap\n```\n\n<br/><br/>'},e2b0:function(n,e){n.exports="## Redis 使用\n```python\nfrom library.redis import Redis\n# 对象\nredis = Redis()\n# 关闭\nredis.Close()\n```\n**Conn-连接**\n```python\nredis.Conn()\n```\n**Set-添加**\n```python\nredis.Set(key: str, val: str)\n```\n**Get-获取**\n```python\nredis.Get(key: str)\n```\n**Get-删除**\n```python\nredis.Get(*key: str)\n```\n\n**Exist-是否存在**\n```python\nredis.Exist(key: str)\n```\n**设置过期时间(秒)**\n```python\nredis.Expire(key: str, ttl: int)\n```\n**获取过期时间(秒)**\n```python\nredis.Ttl(key: str)\n```\n**获取长度**\n```python\nredis.StrLen(key: str)\n```\n\n## 哈希(Hash)\n**HSet-添加**\n```python\nredis.HSet(name: str, key, val)\nredis.HMSet(name: str, obj)\n```\n**HGet-获取**\n```python\nredis.HGet(name: str, key)\nredis.HMGet(name: str, key)\n```\n**Hdel-删除**\n```python\nredis.HDel(name: str, *key)\n```\n**HExist-是否存在**\n```python\nredis.HExist(name: str, key)\n```\n**HLen-Key个数**\n```python\nredis.HLen(name: str)\n```"},e307:function(n,e){n.exports="# WebMIS-Gin\n采用Go + Gin开发，包括HMVC模块化管理、Token验证、Redis缓存等\n- 网站-API( [https://demo-go.webmis.vip/](https://demo-go.webmis.vip/) )\n- 前端-API( [https://demo-go.webmis.vip/api/](https://demo-go.webmis.vip/api/index) )\n- 后台-API( [https://demo-go.webmis.vip/admin/](https://demo-go.webmis.vip/admin/index) )\n\n<br/>\n\n## 一、下载\n```bash\ngit clone https://github.com/webmiss/base.git --depth=1\n```\n- WebMIS-Base > gin\n- 网站根目录: public下创建upload目录，修改权限为777\n- 数据库: project/database/data.sql\n- 修改密码: user表password字段，md5加密即可\n- 管理员账号: admin 密码:123456\n\n<br/>\n\n## 二、运行\n#### Bash命令\n```bash\n# 依赖包\n./bash install\n# 运行\n./bash serve\n# 打包\n./bash build\n```\n\n#### Cmd命令\n```bash\n# 依赖包\n.\\cmd install\n# 运行\n.\\cmd serve\n# 打包\n.\\cmd build\n```\n\n<br/><br/>"},e526:function(n,e){n.exports="## 引入\n```javascript\nimport wmSwipe from '@/components/swipe/index.vue'\nimport wmSwipeItem from '@/components/swipe/item/index.vue'\n```\n\n## 轮播图\n```html\n<wm-swipe>\n  <wm-swipe-item></wm-swipe-item>\n</wm-swipe>\n```\n- direction: {type: String, default: 'horizontal'},       //方向: horizontal、vertical\n- slide: {type: Object, default: {\n-   loop: true,                                           //是否循环\n-   autoplay: true,                                       //自动切换\n-   interval: 3000,                                       //播放间隔\n-   speed: 400,                                           //动画时长\n- }},\n- isPage: {type: Boolean, default: true},                 //显示分页\n- pageColor: {type: String, default: 'rgba(0,0,0,.2)'},   //分页颜色\n- pageColorActive: {type: String, default: '#6FB737'},    //激活颜色\n\n"},e57a:function(n,e){n.exports="## 引入\n```javascript\nimport WmTabbar from '@/components/tabbar/index.vue'\nimport WmTabbarPage from '@/components/tabbar/page.vue'\n```\n\n## 导航菜单\n```html\n<wm-tabbar></wm-tabbar>\n```\n- data: {type: Object, default: []},                        //数据: [{lable: '首页', icon: 'icons icon_home'}]\n- active: {type: Number, default: 0},                       //默认菜单\n- activeColor: {type: String, default: Env.themes.primary}, //默认菜单\n- height: {type: String, default: '54px'},                  //高度\n- @update:active  //事件\n\n## 页面\n```html\n<wm-tabbar-page>\n  内容\n</wm-tabbar-page>\n```\n- show: {type: Boolean, default: false},                //显示\n- height: {type: String, default: 'calc(100% - 54px)'}, //高度\n- bgColor: {type: String, default: '#FFF'},             //背景颜色\n- time: {type: Number, default: 400},                   //动画时间\n\n"},eb2d:function(n,e){n.exports="## 引入\n```java\nimport webmis.service.Data;\n```\n\n## 薄雾算法\n```java\nData.Mist(String redisName);\n```\n\n## 雪花算法\n```java\nData.Snowflake();\n```\n\n## 图片地址\n```java\nData.Img(Object img);\n```\n"},eb71:function(n,e){n.exports="## 引入\n```javascript\nimport wmTinymce from '@/components/tinymce/index.vue'\n```\n\n## 编辑器\n```html\n<wm-tinymce></wm-tinymce>\n```\n- config: {default: {}},                                            //配置\n- content: {default: ''},                                           //内容\n- upload: {default: {start: false, width: 0, height: 0, url: ''}},  //图片上传\n- @update:value                                                     //事件\n\n"},ebad:function(n,e){n.exports="## 引入\n```javascript\nimport Notify from '@/library/plus/notify'\n```\n\n## 本地消息\n```typescript\nNotify(\n  title: string,    //标题\n  content: string,  //内容: title(内容为标题)\n  isRead: boolean,  //是否阅读\n);\n```\n"},ec6b:function(n,e){n.exports="### 插入\n```python\nfrom model.demo import Demo\n# 对象\ndemo = Demo()\ndemo.Values({'uid': None, 'title':'添加'})\ndemo.Insert()\n```\n\n### 生成SQL\n```python\nsql, args = demo.InsertSQL()\n```"},ed68:function(n,e){n.exports="## 引入\n```javascript\nimport MapGeolocation from '@/library/plus/map/geolocation'\n```\n\n## 定位信息\n```typescript\nMapGeolocation(\n  callback: any,  //成功回调\n  fail?: any,     //失败回调\n);\n```\n"},effe:function(n,e){n.exports="## 引入\n```javascript\nimport ImgCompress from '@/library/plus/img/compress'\nimport ImgReader from '@/library/plus/img/reader'\n```\n\n## 文件\n```typescript\nImgCompress(\n  file: any,      //文件\n  parm: any = {\n    width: 0,     //宽\n    height: 0,    //高\n    cut: true,    //裁切\n    ext: 'jpg',   //后缀\n    quality: 0.8, //png质量\n  },\n  callback: any,  //成功回调\n);\n```\n\n## 文件对象\n```typescript\nImgReader(\n  fileObj: any,   //对象\n  parm: any = {\n    width: 0,     //宽\n    height: 0,    //高\n    cut: true,    //裁切\n    ext: 'jpg',   //后缀\n    quality: 0.8, //png质量\n  },\n  callback: any,  //成功回调\n);\n```\n"},f03c:function(n,e){n.exports="## 引入\n```javascript\nimport TimeDate from '@/library/time/date'\nimport TimeSize from '@/library/time/size'\nimport TimeDay from '@/library/time/day'\nimport TimeWeek from '@/library/time/week'\nimport TimeFormatHour from '@/library/time/format_hour'\nimport TimeFormatTime from '@/library/time/format_time'\n```\n\n## 年月日时分秒\n```typescript\nTimeDate();\n```\n\n## 时间比较\n```typescript\nTimeSize(\n  t1: number | string | Date,   //时间\n  t2?: number | string | Date,  //现在\n);\n```\n\n## 获取日期\n```typescript\nTimeDay(\n  n: number=0,  //加减天数\n  day?: any,    //指定日期\n);\n```\n\n## 获取星期几\n```typescript\nTimeWeek(\n  date: string | number | Date,   //2021-05-18 14:34:32\n);\n```\n\n## 格式化-小时\n```typescript\nTimeFormatHour.encode(\n  second: number,   //秒\n);\nTimeFormatHour.decode(\n  time: string,     //时间, 00:01:30\n);\n```\n\n## 格式化-时间\n```typescript\nTimeFormatTime(\n  date: string,   //2021-05-18 14:34:32\n);\n```\n"},f2b0:function(n,e){n.exports="## Redis 使用\n```java\nimport webmis.library.Redis;\n// 对象\nRedis redis = new Redis();\n// 关闭\nredis.Close();\n```\n**Conn-连接**\n```java\nredis.Conn();\n```\n**Set-添加**\n```java\nredis.Set(String key, String val);\n```\n**Get-获取**\n```java\nredis.Get(String key);\n```\n**Get-删除**\n```java\nredis.Del(String... key);\n```\n**Exist-是否存在**\n```java\nredis.Exist(String key);\n```\n**设置过期时间(秒)**\n```java\nredis.Expire(String key, int ttl);\n```\n**获取过期时间(秒)**\n```java\nredis.Ttl(String key);\n```\n**获取长度**\n```java\nredis.StrLen(String key);\n```\n\n## 哈希(Hash)\n**HSet-添加**\n```java\nredis.HSet(String name, String key, String val);\nredis.HMSet(String name, Map<String, String> obj);\n```\n**HGet-获取**\n```java\nredis.HGet(String name, String key);\nredis.HMGet(String name, String... key);\n```\n**Hdel-删除**\n```java\nredis.HDel(String name, String... key);\n```\n**HExist-是否存在**\n```java\nredis.HExist(String name, String key);\n```\n**HLen-Key个数**\n```java\nredis.HLen(String name);\n```"},f7a3:function(n,e){n.exports="### 删除\n```python\nfrom model.demo import Demo\n# 对象\ndemo = Demo()\ndemo.Where('uid=%s', id)\ndemo.Delete()\n```\n\n### 生成SQL\n```python\nsql, args = db.DeleteSQL()\n```"},fc20:function(n,e){n.exports='### 创建模型\n**model/Demo.java**\n```java\npackage webmis.model;\n\npublic class Demo extends Model {\n\n  /* 构造函数 */\n  public Demo() {\n    this.Table("test");\n  }\n  \n}\n```\n\n### 使用\n```java\nimport webmis.model.Demo;\n// 对象\nDemo model = new Demo();\n```\n\n### 连接\n```java\nmodel.DBConn()\n```\n\n### 生成SQL\n```java\nPreparedStatement ps = model.Bind(Connection conn, Object sql, Object args)\n```\n\n### 查询\n```java\nmodel.Query(PreparedStatement ps)\n```\n\n### 执行\n```java\nmodel.Exec(PreparedStatement ps)\n```\n'},feee:function(n,e){n.exports='## 引入\n```go\nimport "webmis/util"\n```\n\n## Md5\n```go\n(&util.Hash{}).Md5(data string)\n```\n\n## Sha256\n```go\n(&util.Hash{}).Sha256(data string)\n```\n\n## HmacSha1\n```go\n(&util.Hash{}).HmacSha1(data string, key []byte)\n```\n\n## HmacSha256\n```go\n(&util.Hash{}).HmacSha256(data string, key []byte)\n```\n\n## Byte转为16进制\n```go\n(&util.Hash{}).HexEncode(bytes []byte)\n```\n'},ffbf:function(n,e){n.exports="## 引入\n```javascript\nimport HtmlLoad from '@/library/html/load'\nimport HtmlObserve from '@/library/html/observe'\n```\n\n## 加载Css和JS\n```typescript\nHtmlLoad(\n  files: Array<string>,  //文件: ['file']\n  reload?: boolean,       //是否刷新\n  type?: string,          //类型: js、css\n);\n```\n\n## 监听容器\n```typescript\nHtmlObserve(\n  element: any,                       //监听对象\n  callback: Function,                 //回调函数\n  options: MutationObserverInit = {   //配置\n    attributes: true,\n    childList: true,\n    subtree: true,\n  },\n);\n```\n"},fff4:function(n,e){n.exports="## 引入\n```javascript\nimport wmPage from '@/components/page/index.vue'\n```\n\n## 分页\n```html\n<wm-page></wm-page>\n```\n- page: {type: Number, default: 1},           //当前页码: 1\n- limit: {type: Number, default: 10},         //每页条数: 10\n- total: {type: Number, default: 0},          //总条目数: 0\n- padding: {type: String, default: '32px 0'}, //边距: '32px 0'\n"}});